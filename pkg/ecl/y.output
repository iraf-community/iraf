State 0 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce
State 187 conflicts: 1 shift/reduce
State 261 conflicts: 1 shift/reduce
State 310 conflicts: 1 shift/reduce
State 374 conflicts: 2 shift/reduce


Grammar

    0 $accept: block $end

    1 block: /* empty */
    2      | '.' NL

    3 @1: /* empty */

    4 block: block @1 debug xstmt
    5      | script_params
    6      | script_body
    7      | error NL

    8 debug: /* empty */

    9 @2: /* empty */

   10 debug: D_XXX EOST @2 debug

   11 D_XXX: D_D
   12      | D_PEEK Y_CONSTANT
   13      | '~'

   14 script_params: proc_stmt var_decls begin_stmt

   15 @3: /* empty */

   16 script_body: begin_stmt @3 s_list opnl end_stmt

   17 @4: /* empty */

   18 proc_stmt: Y_PROCEDURE @4 param bparam_list EOST

   19 bparam_list: /* empty */
   20            | LP param_list RP

   21 param_list: /* empty */
   22           | xparam_list

   23 xparam_list: param
   24            | xparam_list DELIM param

   25 var_decls: /* empty */
   26          | var_decl_block

   27 var_decl_block: var_decl_line
   28               | var_decl_block var_decl_line

   29 var_decl_line: EOST
   30              | var_decl_stmt
   31              | error NL

   32 @5: /* empty */

   33 var_decl_stmt: typedefs @5 var_decl_list EOST

   34 typedefs: Y_BOOL
   35         | Y_STRING
   36         | Y_REAL
   37         | Y_FILE
   38         | Y_GCUR
   39         | Y_IMCUR
   40         | Y_UKEY
   41         | Y_PSET
   42         | Y_INT
   43         | Y_STRUCT

   44 var_decl_list: var_decl_plus
   45              | var_decl_plus DELIM var_decl_list

   46 var_decl_plus: var_decl
   47              | var_decl '{' options_list ';' '}'

   48 var_decl: var_def

   49 @6: /* empty */

   50 var_decl: var_def '=' @6 init_list

   51 var_def: var_name

   52 @7: /* empty */

   53 var_def: var_name @7 '[' init_index_list ']'

   54 var_name: param
   55         | '*' param

   56 init_index_list: /* empty */
   57                | init_index_range
   58                | init_index_list DELIM init_index_range

   59 init_index_range: const
   60                 | const ':' const

   61 init_list: init_elem
   62          | init_list DELIM init_elem

   63 init_elem: const
   64          | Y_CONSTANT LP const RP

   65 const: Y_CONSTANT
   66      | number

   67 number: sign Y_CONSTANT

   68 sign: '+'
   69     | '-'

   70 options_list: init_list DELIM options
   71             | init_list
   72             | options

   73 options: option
   74        | options DELIM option

   75 option: Y_IDENT '=' const

   76 begin_stmt: Y_BEGIN NL

   77 expr: expr0
   78     | ref

   79 expr0: expr1
   80      | Y_CONSTANT
   81      | Y_GCUR
   82      | Y_IMCUR
   83      | Y_UKEY
   84      | Y_PSET

   85 expr1: LP expr RP
   86      | expr '+' opnl expr
   87      | expr '-' opnl expr
   88      | expr '*' opnl expr
   89      | expr '/' opnl expr
   90      | expr YOP_POW opnl expr
   91      | expr '%' opnl expr
   92      | expr YOP_CONCAT opnl expr
   93      | expr '<' opnl expr
   94      | expr '>' opnl expr
   95      | expr YOP_LE opnl expr
   96      | expr YOP_GE opnl expr
   97      | expr YOP_EQ opnl expr
   98      | expr YOP_NE opnl expr
   99      | expr YOP_OR opnl expr
  100      | expr YOP_AND opnl expr
  101      | YOP_NOT expr
  102      | '-' expr

  103 @8: /* empty */

  104 expr1: Y_SCAN LP @8 scanarg RP

  105 @9: /* empty */

  106 expr1: Y_SCANF LP @9 scanfmt DELIM scanarg RP

  107 @10: /* empty */

  108 expr1: Y_FSCAN LP @10 scanarg RP

  109 @11: /* empty */

  110 expr1: Y_FSCANF LP Y_IDENT DELIM @11 scanfmt DELIM scanarg RP

  111 @12: /* empty */

  112 expr1: intrinsx LP @12 intrarg RP

  113 intrinsx: intrins
  114         | Y_INT
  115         | Y_REAL

  116 scanfmt: expr

  117 scanarg: /* empty */
  118        | Y_IDENT
  119        | Y_IDENT DELIM scanarg

  120 intrarg: /* empty */
  121        | expr
  122        | intrarg DELIM expr

  123 stmt: c_stmt
  124     | assign EOST
  125     | cmdlist EOST
  126     | immed EOST
  127     | inspect EOST
  128     | osesc EOST
  129     | popstk EOST
  130     | if
  131     | ifelse
  132     | iferr
  133     | iferr_else
  134     | while
  135     | for
  136     | switch
  137     | case
  138     | default
  139     | next EOST
  140     | break EOST
  141     | goto EOST
  142     | return EOST
  143     | label_stmt
  144     | nullstmt

  145 c_stmt: c_blk
  146       | c_blk NL

  147 @13: /* empty */

  148 @14: /* empty */

  149 c_blk: '{' @13 s_list opnl @14 '}'

  150 s_list: /* empty */
  151       | s_list opnl xstmt

  152 assign: ref equals expr0
  153       | ref equals ref

  154 @15: /* empty */

  155 assign: ref @15 assign_oper expr

  156 equals: '='

  157 assign_oper: YOP_AOADD
  158            | YOP_AOSUB
  159            | YOP_AOMUL
  160            | YOP_AODIV
  161            | YOP_AOCAT

  162 @16: /* empty */

  163 cmdlist: command @16 cmdpipe

  164 cmdpipe: /* empty */

  165 @17: /* empty */

  166 cmdpipe: cmdpipe pipe @17 command

  167 pipe: '|' opnl
  168     | Y_ALLPIPE opnl

  169 @18: /* empty */

  170 @19: /* empty */

  171 command: tasknam @18 BARG @19 args EARG

  172 @20: /* empty */

  173 args: DELIM @20 arglist
  174     | arglist

  175 arglist: arg
  176        | arglist DELIM arg

  177 arg: /* empty */
  178    | expr0
  179    | ref
  180    | ref '=' expr0
  181    | ref '=' ref
  182    | param '+'
  183    | param '-'
  184    | '<' file
  185    | '>' file
  186    | Y_ALLREDIR file
  187    | Y_APPEND file
  188    | Y_ALLAPPEND file
  189    | Y_GSREDIR file

  190 file: expr0
  191     | param

  192 immed: equals expr0
  193      | equals ref

  194 inspect: ref equals

  195 osesc: Y_OSESC

  196 popstk: equals

  197 iferr: iferr_stat

  198 @21: /* empty */

  199 @22: /* empty */

  200 iferr_stat: iferr_tok @21 c_blk @22 op_then opnl xstmt

  201 @23: /* empty */

  202 iferr_else: iferr_stat Y_ELSE @23 opnl xstmt

  203 iferr_tok: Y_IFERR
  204          | Y_IFNOERR

  205 op_then: /* empty */
  206        | Y_THEN

  207 if: if_stat

  208 @24: /* empty */

  209 if_stat: Y_IF LP expr RP @24 opnl xstmt

  210 @25: /* empty */

  211 ifelse: if_stat Y_ELSE @25 opnl xstmt

  212 @26: /* empty */

  213 @27: /* empty */

  214 while: Y_WHILE LP @26 expr RP @27 opnl xstmt

  215 @28: /* empty */

  216 @29: /* empty */

  217 @30: /* empty */

  218 for: Y_FOR LP opnl xassign ';' opnl @28 xexpr ';' opnl @29 xassign RP opnl @30 stmt

  219 xassign: assign
  220        | /* empty */

  221 xexpr: expr
  222      | /* empty */

  223 @31: /* empty */

  224 switch: Y_SWITCH opnl LP opnl expr opnl RP opnl @31 xstmt

  225 @32: /* empty */

  226 @33: /* empty */

  227 case: Y_CASE @32 const_expr_list ':' opnl @33 xstmt

  228 @34: /* empty */

  229 default: Y_DEFAULT ':' opnl @34 xstmt

  230 next: Y_NEXT

  231 break: Y_BREAK

  232 return: Y_RETURN
  233       | Y_RETURN expr

  234 end_stmt: Y_END NL

  235 @35: /* empty */

  236 label_stmt: Y_IDENT ':' opnl @35 xstmt

  237 goto: Y_GOTO Y_IDENT

  238 nullstmt: ';'
  239         | ';' NL

  240 @36: /* empty */

  241 xstmt: @36 stmt
  242      | var_decl_stmt
  243      | error NL

  244 const_expr_list: const_expr
  245                | const_expr DELIM const_expr_list

  246 const_expr: const

  247 opnl: /* empty */
  248     | NL

  249 ref: param

  250 @37: /* empty */

  251 ref: param @37 '[' index_list ']'

  252 index_list: index

  253 @38: /* empty */

  254 index_list: index @38 DELIM index_list

  255 index: expr1
  256      | ref
  257      | '*'
  258      | Y_CONSTANT

  259 intrins: Y_IDENT

  260 param: Y_IDENT

  261 tasknam: Y_IDENT

  262 EOST: NL
  263     | ';'

  264 DELIM: ','

  265 BARG: /* empty */
  266     | LP

  267 EARG: /* empty */
  268     | RP

  269 LP: '('

  270 RP: ')'

  271 NL: Y_NEWLINE


Terminals, with rules where they appear

$end (0) 0
'%' (37) 91
'(' (40) 269
')' (41) 270
'*' (42) 55 88 257
'+' (43) 68 86 182
',' (44) 264
'-' (45) 69 87 102 183
'.' (46) 2
'/' (47) 89
':' (58) 60 227 229 236
';' (59) 47 218 238 239 263
'<' (60) 93 184
'=' (61) 50 75 156 180 181
'>' (62) 94 185
'[' (91) 53 251
']' (93) 53 251
'{' (123) 47 149
'|' (124) 167
'}' (125) 47 149
'~' (126) 13
error (256) 7 31 243
Y_SCAN (258) 104
Y_SCANF (259) 106
Y_FSCAN (260) 108
Y_FSCANF (261) 110
Y_OSESC (262) 195
Y_APPEND (263) 187
Y_ALLAPPEND (264) 188
Y_ALLREDIR (265) 186
Y_GSREDIR (266) 189
Y_ALLPIPE (267) 168
D_D (268) 11
D_PEEK (269) 12
Y_NEWLINE (270) 271
Y_CONSTANT (271) 12 64 65 67 80 258
Y_IDENT (272) 75 110 118 119 236 237 259 260 261
Y_WHILE (273) 214
Y_IF (274) 209
Y_ELSE (275) 202 211
Y_FOR (276) 218
Y_BREAK (277) 231
Y_NEXT (278) 230
Y_SWITCH (279) 224
Y_CASE (280) 227
Y_DEFAULT (281) 229
Y_RETURN (282) 232 233
Y_GOTO (283) 237
Y_PROCEDURE (284) 18
Y_BEGIN (285) 76
Y_END (286) 234
Y_BOOL (287) 34
Y_INT (288) 42 114
Y_REAL (289) 36 115
Y_STRING (290) 35
Y_FILE (291) 37
Y_STRUCT (292) 43
Y_GCUR (293) 38 81
Y_IMCUR (294) 39 82
Y_UKEY (295) 40 83
Y_PSET (296) 41 84
Y_IFERR (297) 203
Y_IFNOERR (298) 204
Y_THEN (299) 206
YOP_AOCAT (300) 161
YOP_AODIV (301) 160
YOP_AOMUL (302) 159
YOP_AOSUB (303) 158
YOP_AOADD (304) 157
YOP_OR (305) 99
YOP_AND (306) 100
YOP_NE (307) 98
YOP_EQ (308) 97
YOP_GE (309) 96
YOP_LE (310) 95
YOP_CONCAT (311) 92
UMINUS (312)
YOP_NOT (313) 101
YOP_POW (314) 90


Nonterminals, with rules where they appear

$accept (80)
    on left: 0
block (81)
    on left: 1 2 4 5 6 7, on right: 0 4
@1 (82)
    on left: 3, on right: 4
debug (83)
    on left: 8 10, on right: 4 10
@2 (84)
    on left: 9, on right: 10
D_XXX (85)
    on left: 11 12 13, on right: 10
script_params (86)
    on left: 14, on right: 5
script_body (87)
    on left: 16, on right: 6
@3 (88)
    on left: 15, on right: 16
proc_stmt (89)
    on left: 18, on right: 14
@4 (90)
    on left: 17, on right: 18
bparam_list (91)
    on left: 19 20, on right: 18
param_list (92)
    on left: 21 22, on right: 20
xparam_list (93)
    on left: 23 24, on right: 22 24
var_decls (94)
    on left: 25 26, on right: 14
var_decl_block (95)
    on left: 27 28, on right: 26 28
var_decl_line (96)
    on left: 29 30 31, on right: 27 28
var_decl_stmt (97)
    on left: 33, on right: 30 242
@5 (98)
    on left: 32, on right: 33
typedefs (99)
    on left: 34 35 36 37 38 39 40 41 42 43, on right: 33
var_decl_list (100)
    on left: 44 45, on right: 33 45
var_decl_plus (101)
    on left: 46 47, on right: 44 45
var_decl (102)
    on left: 48 50, on right: 46 47
@6 (103)
    on left: 49, on right: 50
var_def (104)
    on left: 51 53, on right: 48 50
@7 (105)
    on left: 52, on right: 53
var_name (106)
    on left: 54 55, on right: 51 53
init_index_list (107)
    on left: 56 57 58, on right: 53 58
init_index_range (108)
    on left: 59 60, on right: 57 58
init_list (109)
    on left: 61 62, on right: 50 62 70 71
init_elem (110)
    on left: 63 64, on right: 61 62
const (111)
    on left: 65 66, on right: 59 60 63 64 75 246
number (112)
    on left: 67, on right: 66
sign (113)
    on left: 68 69, on right: 67
options_list (114)
    on left: 70 71 72, on right: 47
options (115)
    on left: 73 74, on right: 70 72 74
option (116)
    on left: 75, on right: 73 74
begin_stmt (117)
    on left: 76, on right: 14 16
expr (118)
    on left: 77 78, on right: 85 86 87 88 89 90 91 92 93 94 95 96 97
    98 99 100 101 102 116 121 122 155 209 214 221 224 233
expr0 (119)
    on left: 79 80 81 82 83 84, on right: 77 152 178 180 190 192
expr1 (120)
    on left: 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102
    104 106 108 110 112, on right: 79 255
@8 (121)
    on left: 103, on right: 104
@9 (122)
    on left: 105, on right: 106
@10 (123)
    on left: 107, on right: 108
@11 (124)
    on left: 109, on right: 110
@12 (125)
    on left: 111, on right: 112
intrinsx (126)
    on left: 113 114 115, on right: 112
scanfmt (127)
    on left: 116, on right: 106 110
scanarg (128)
    on left: 117 118 119, on right: 104 106 108 110 119
intrarg (129)
    on left: 120 121 122, on right: 112 122
stmt (130)
    on left: 123 124 125 126 127 128 129 130 131 132 133 134 135 136
    137 138 139 140 141 142 143 144, on right: 218 241
c_stmt (131)
    on left: 145 146, on right: 123
c_blk (132)
    on left: 149, on right: 145 146 200
@13 (133)
    on left: 147, on right: 149
@14 (134)
    on left: 148, on right: 149
s_list (135)
    on left: 150 151, on right: 16 149 151
assign (136)
    on left: 152 153 155, on right: 124 219
@15 (137)
    on left: 154, on right: 155
equals (138)
    on left: 156, on right: 152 153 192 193 194 196
assign_oper (139)
    on left: 157 158 159 160 161, on right: 155
cmdlist (140)
    on left: 163, on right: 125
@16 (141)
    on left: 162, on right: 163
cmdpipe (142)
    on left: 164 166, on right: 163 166
@17 (143)
    on left: 165, on right: 166
pipe (144)
    on left: 167 168, on right: 166
command (145)
    on left: 171, on right: 163 166
@18 (146)
    on left: 169, on right: 171
@19 (147)
    on left: 170, on right: 171
args (148)
    on left: 173 174, on right: 171
@20 (149)
    on left: 172, on right: 173
arglist (150)
    on left: 175 176, on right: 173 174 176
arg (151)
    on left: 177 178 179 180 181 182 183 184 185 186 187 188 189,
    on right: 175 176
file (152)
    on left: 190 191, on right: 184 185 186 187 188 189
immed (153)
    on left: 192 193, on right: 126
inspect (154)
    on left: 194, on right: 127
osesc (155)
    on left: 195, on right: 128
popstk (156)
    on left: 196, on right: 129
iferr (157)
    on left: 197, on right: 132
iferr_stat (158)
    on left: 200, on right: 197 202
@21 (159)
    on left: 198, on right: 200
@22 (160)
    on left: 199, on right: 200
iferr_else (161)
    on left: 202, on right: 133
@23 (162)
    on left: 201, on right: 202
iferr_tok (163)
    on left: 203 204, on right: 200
op_then (164)
    on left: 205 206, on right: 200
if (165)
    on left: 207, on right: 130
if_stat (166)
    on left: 209, on right: 207 211
@24 (167)
    on left: 208, on right: 209
ifelse (168)
    on left: 211, on right: 131
@25 (169)
    on left: 210, on right: 211
while (170)
    on left: 214, on right: 134
@26 (171)
    on left: 212, on right: 214
@27 (172)
    on left: 213, on right: 214
for (173)
    on left: 218, on right: 135
@28 (174)
    on left: 215, on right: 218
@29 (175)
    on left: 216, on right: 218
@30 (176)
    on left: 217, on right: 218
xassign (177)
    on left: 219 220, on right: 218
xexpr (178)
    on left: 221 222, on right: 218
switch (179)
    on left: 224, on right: 136
@31 (180)
    on left: 223, on right: 224
case (181)
    on left: 227, on right: 137
@32 (182)
    on left: 225, on right: 227
@33 (183)
    on left: 226, on right: 227
default (184)
    on left: 229, on right: 138
@34 (185)
    on left: 228, on right: 229
next (186)
    on left: 230, on right: 139
break (187)
    on left: 231, on right: 140
return (188)
    on left: 232 233, on right: 142
end_stmt (189)
    on left: 234, on right: 16
label_stmt (190)
    on left: 236, on right: 143
@35 (191)
    on left: 235, on right: 236
goto (192)
    on left: 237, on right: 141
nullstmt (193)
    on left: 238 239, on right: 144
xstmt (194)
    on left: 241 242 243, on right: 4 151 200 202 209 211 214 224 227
    229 236
@36 (195)
    on left: 240, on right: 241
const_expr_list (196)
    on left: 244 245, on right: 227 245
const_expr (197)
    on left: 246, on right: 244 245
opnl (198)
    on left: 247 248, on right: 16 86 87 88 89 90 91 92 93 94 95 96
    97 98 99 100 149 151 167 168 200 202 209 211 214 218 224 227 229
    236
ref (199)
    on left: 249 251, on right: 78 152 153 155 179 180 181 193 194
    256
@37 (200)
    on left: 250, on right: 251
index_list (201)
    on left: 252 254, on right: 251 254
@38 (202)
    on left: 253, on right: 254
index (203)
    on left: 255 256 257 258, on right: 252 254
intrins (204)
    on left: 259, on right: 113
param (205)
    on left: 260, on right: 18 23 24 54 55 182 183 191 249 251
tasknam (206)
    on left: 261, on right: 171
EOST (207)
    on left: 262 263, on right: 10 18 29 33 124 125 126 127 128 129
    139 140 141 142
DELIM (208)
    on left: 264, on right: 24 45 58 62 70 74 106 110 119 122 173 176
    245 254
BARG (209)
    on left: 265 266, on right: 171
EARG (210)
    on left: 267 268, on right: 171
LP (211)
    on left: 269, on right: 20 64 85 104 106 108 110 112 209 214 218
    224 266
RP (212)
    on left: 270, on right: 20 64 85 104 106 108 110 112 209 214 218
    224 268
NL (213)
    on left: 271, on right: 2 7 31 76 146 234 239 243 248 262


state 0

    0 $accept: . block $end

    error        shift, and go to state 1
    Y_PROCEDURE  shift, and go to state 2
    Y_BEGIN      shift, and go to state 3
    '.'          shift, and go to state 4

    $end       reduce using rule 1 (block)
    error      [reduce using rule 1 (block)]
    Y_OSESC    reduce using rule 1 (block)
    D_D        reduce using rule 1 (block)
    D_PEEK     reduce using rule 1 (block)
    Y_IDENT    reduce using rule 1 (block)
    Y_WHILE    reduce using rule 1 (block)
    Y_IF       reduce using rule 1 (block)
    Y_FOR      reduce using rule 1 (block)
    Y_BREAK    reduce using rule 1 (block)
    Y_NEXT     reduce using rule 1 (block)
    Y_SWITCH   reduce using rule 1 (block)
    Y_CASE     reduce using rule 1 (block)
    Y_DEFAULT  reduce using rule 1 (block)
    Y_RETURN   reduce using rule 1 (block)
    Y_GOTO     reduce using rule 1 (block)
    Y_BOOL     reduce using rule 1 (block)
    Y_INT      reduce using rule 1 (block)
    Y_REAL     reduce using rule 1 (block)
    Y_STRING   reduce using rule 1 (block)
    Y_FILE     reduce using rule 1 (block)
    Y_STRUCT   reduce using rule 1 (block)
    Y_GCUR     reduce using rule 1 (block)
    Y_IMCUR    reduce using rule 1 (block)
    Y_UKEY     reduce using rule 1 (block)
    Y_PSET     reduce using rule 1 (block)
    Y_IFERR    reduce using rule 1 (block)
    Y_IFNOERR  reduce using rule 1 (block)
    '='        reduce using rule 1 (block)
    '~'        reduce using rule 1 (block)
    '{'        reduce using rule 1 (block)
    ';'        reduce using rule 1 (block)

    block          go to state 5
    script_params  go to state 6
    script_body    go to state 7
    proc_stmt      go to state 8
    begin_stmt     go to state 9


state 1

    7 block: error . NL

    Y_NEWLINE  shift, and go to state 10

    NL  go to state 11


state 2

   18 proc_stmt: Y_PROCEDURE . @4 param bparam_list EOST

    $default  reduce using rule 17 (@4)

    @4  go to state 12


state 3

   76 begin_stmt: Y_BEGIN . NL

    Y_NEWLINE  shift, and go to state 10

    NL  go to state 13


state 4

    2 block: '.' . NL

    Y_NEWLINE  shift, and go to state 10

    NL  go to state 14


state 5

    0 $accept: block . $end
    4 block: block . @1 debug xstmt

    $end  shift, and go to state 15

    $default  reduce using rule 3 (@1)

    @1  go to state 16


state 6

    5 block: script_params .

    $default  reduce using rule 5 (block)


state 7

    6 block: script_body .

    $default  reduce using rule 6 (block)


state 8

   14 script_params: proc_stmt . var_decls begin_stmt

    error      shift, and go to state 17
    Y_NEWLINE  shift, and go to state 10
    Y_BOOL     shift, and go to state 18
    Y_INT      shift, and go to state 19
    Y_REAL     shift, and go to state 20
    Y_STRING   shift, and go to state 21
    Y_FILE     shift, and go to state 22
    Y_STRUCT   shift, and go to state 23
    Y_GCUR     shift, and go to state 24
    Y_IMCUR    shift, and go to state 25
    Y_UKEY     shift, and go to state 26
    Y_PSET     shift, and go to state 27
    ';'        shift, and go to state 28

    Y_BEGIN  reduce using rule 25 (var_decls)

    var_decls       go to state 29
    var_decl_block  go to state 30
    var_decl_line   go to state 31
    var_decl_stmt   go to state 32
    typedefs        go to state 33
    EOST            go to state 34
    NL              go to state 35


state 9

   16 script_body: begin_stmt . @3 s_list opnl end_stmt

    $default  reduce using rule 15 (@3)

    @3  go to state 36


state 10

  271 NL: Y_NEWLINE .

    $default  reduce using rule 271 (NL)


state 11

    7 block: error NL .

    $default  reduce using rule 7 (block)


state 12

   18 proc_stmt: Y_PROCEDURE @4 . param bparam_list EOST

    Y_IDENT  shift, and go to state 37

    param  go to state 38


state 13

   76 begin_stmt: Y_BEGIN NL .

    $default  reduce using rule 76 (begin_stmt)


state 14

    2 block: '.' NL .

    $default  reduce using rule 2 (block)


state 15

    0 $accept: block $end .

    $default  accept


state 16

    4 block: block @1 . debug xstmt

    D_D     shift, and go to state 39
    D_PEEK  shift, and go to state 40
    '~'     shift, and go to state 41

    $default  reduce using rule 8 (debug)

    debug  go to state 42
    D_XXX  go to state 43


state 17

   31 var_decl_line: error . NL

    Y_NEWLINE  shift, and go to state 10

    NL  go to state 44


state 18

   34 typedefs: Y_BOOL .

    $default  reduce using rule 34 (typedefs)


state 19

   42 typedefs: Y_INT .

    $default  reduce using rule 42 (typedefs)


state 20

   36 typedefs: Y_REAL .

    $default  reduce using rule 36 (typedefs)


state 21

   35 typedefs: Y_STRING .

    $default  reduce using rule 35 (typedefs)


state 22

   37 typedefs: Y_FILE .

    $default  reduce using rule 37 (typedefs)


state 23

   43 typedefs: Y_STRUCT .

    $default  reduce using rule 43 (typedefs)


state 24

   38 typedefs: Y_GCUR .

    $default  reduce using rule 38 (typedefs)


state 25

   39 typedefs: Y_IMCUR .

    $default  reduce using rule 39 (typedefs)


state 26

   40 typedefs: Y_UKEY .

    $default  reduce using rule 40 (typedefs)


state 27

   41 typedefs: Y_PSET .

    $default  reduce using rule 41 (typedefs)


state 28

  263 EOST: ';' .

    $default  reduce using rule 263 (EOST)


state 29

   14 script_params: proc_stmt var_decls . begin_stmt

    Y_BEGIN  shift, and go to state 3

    begin_stmt  go to state 45


state 30

   26 var_decls: var_decl_block .
   28 var_decl_block: var_decl_block . var_decl_line

    error      shift, and go to state 17
    Y_NEWLINE  shift, and go to state 10
    Y_BOOL     shift, and go to state 18
    Y_INT      shift, and go to state 19
    Y_REAL     shift, and go to state 20
    Y_STRING   shift, and go to state 21
    Y_FILE     shift, and go to state 22
    Y_STRUCT   shift, and go to state 23
    Y_GCUR     shift, and go to state 24
    Y_IMCUR    shift, and go to state 25
    Y_UKEY     shift, and go to state 26
    Y_PSET     shift, and go to state 27
    ';'        shift, and go to state 28

    Y_BEGIN  reduce using rule 26 (var_decls)

    var_decl_line  go to state 46
    var_decl_stmt  go to state 32
    typedefs       go to state 33
    EOST           go to state 34
    NL             go to state 35


state 31

   27 var_decl_block: var_decl_line .

    $default  reduce using rule 27 (var_decl_block)


state 32

   30 var_decl_line: var_decl_stmt .

    $default  reduce using rule 30 (var_decl_line)


state 33

   33 var_decl_stmt: typedefs . @5 var_decl_list EOST

    $default  reduce using rule 32 (@5)

    @5  go to state 47


state 34

   29 var_decl_line: EOST .

    $default  reduce using rule 29 (var_decl_line)


state 35

  262 EOST: NL .

    $default  reduce using rule 262 (EOST)


state 36

   16 script_body: begin_stmt @3 . s_list opnl end_stmt

    $default  reduce using rule 150 (s_list)

    s_list  go to state 48


state 37

  260 param: Y_IDENT .

    $default  reduce using rule 260 (param)


state 38

   18 proc_stmt: Y_PROCEDURE @4 param . bparam_list EOST

    '('  shift, and go to state 49

    $default  reduce using rule 19 (bparam_list)

    bparam_list  go to state 50
    LP           go to state 51


state 39

   11 D_XXX: D_D .

    $default  reduce using rule 11 (D_XXX)


state 40

   12 D_XXX: D_PEEK . Y_CONSTANT

    Y_CONSTANT  shift, and go to state 52


state 41

   13 D_XXX: '~' .

    $default  reduce using rule 13 (D_XXX)


state 42

    4 block: block @1 debug . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 240 (@36)
    Y_IDENT    reduce using rule 240 (@36)
    Y_WHILE    reduce using rule 240 (@36)
    Y_IF       reduce using rule 240 (@36)
    Y_FOR      reduce using rule 240 (@36)
    Y_BREAK    reduce using rule 240 (@36)
    Y_NEXT     reduce using rule 240 (@36)
    Y_SWITCH   reduce using rule 240 (@36)
    Y_CASE     reduce using rule 240 (@36)
    Y_DEFAULT  reduce using rule 240 (@36)
    Y_RETURN   reduce using rule 240 (@36)
    Y_GOTO     reduce using rule 240 (@36)
    Y_IFERR    reduce using rule 240 (@36)
    Y_IFNOERR  reduce using rule 240 (@36)
    '='        reduce using rule 240 (@36)
    '{'        reduce using rule 240 (@36)
    ';'        reduce using rule 240 (@36)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 55
    @36            go to state 56


state 43

   10 debug: D_XXX . EOST @2 debug

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 57
    NL    go to state 35


state 44

   31 var_decl_line: error NL .

    $default  reduce using rule 31 (var_decl_line)


state 45

   14 script_params: proc_stmt var_decls begin_stmt .

    $default  reduce using rule 14 (script_params)


state 46

   28 var_decl_block: var_decl_block var_decl_line .

    $default  reduce using rule 28 (var_decl_block)


state 47

   33 var_decl_stmt: typedefs @5 . var_decl_list EOST

    Y_IDENT  shift, and go to state 37
    '*'      shift, and go to state 58

    var_decl_list  go to state 59
    var_decl_plus  go to state 60
    var_decl       go to state 61
    var_def        go to state 62
    var_name       go to state 63
    param          go to state 64


state 48

   16 script_body: begin_stmt @3 s_list . opnl end_stmt
  151 s_list: s_list . opnl xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 65
    NL    go to state 66


state 49

  269 LP: '(' .

    $default  reduce using rule 269 (LP)


state 50

   18 proc_stmt: Y_PROCEDURE @4 param bparam_list . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 67
    NL    go to state 35


state 51

   20 bparam_list: LP . param_list RP

    Y_IDENT  shift, and go to state 37

    $default  reduce using rule 21 (param_list)

    param_list   go to state 68
    xparam_list  go to state 69
    param        go to state 70


state 52

   12 D_XXX: D_PEEK Y_CONSTANT .

    $default  reduce using rule 12 (D_XXX)


state 53

  243 xstmt: error . NL

    Y_NEWLINE  shift, and go to state 10

    NL  go to state 71


state 54

  242 xstmt: var_decl_stmt .

    $default  reduce using rule 242 (xstmt)


state 55

    4 block: block @1 debug xstmt .

    $default  reduce using rule 4 (block)


state 56

  241 xstmt: @36 . stmt

    Y_OSESC    shift, and go to state 72
    Y_IDENT    shift, and go to state 73
    Y_WHILE    shift, and go to state 74
    Y_IF       shift, and go to state 75
    Y_FOR      shift, and go to state 76
    Y_BREAK    shift, and go to state 77
    Y_NEXT     shift, and go to state 78
    Y_SWITCH   shift, and go to state 79
    Y_CASE     shift, and go to state 80
    Y_DEFAULT  shift, and go to state 81
    Y_RETURN   shift, and go to state 82
    Y_GOTO     shift, and go to state 83
    Y_IFERR    shift, and go to state 84
    Y_IFNOERR  shift, and go to state 85
    '='        shift, and go to state 86
    '{'        shift, and go to state 87
    ';'        shift, and go to state 88

    stmt        go to state 89
    c_stmt      go to state 90
    c_blk       go to state 91
    assign      go to state 92
    equals      go to state 93
    cmdlist     go to state 94
    command     go to state 95
    immed       go to state 96
    inspect     go to state 97
    osesc       go to state 98
    popstk      go to state 99
    iferr       go to state 100
    iferr_stat  go to state 101
    iferr_else  go to state 102
    iferr_tok   go to state 103
    if          go to state 104
    if_stat     go to state 105
    ifelse      go to state 106
    while       go to state 107
    for         go to state 108
    switch      go to state 109
    case        go to state 110
    default     go to state 111
    next        go to state 112
    break       go to state 113
    return      go to state 114
    label_stmt  go to state 115
    goto        go to state 116
    nullstmt    go to state 117
    ref         go to state 118
    param       go to state 119
    tasknam     go to state 120


state 57

   10 debug: D_XXX EOST . @2 debug

    $default  reduce using rule 9 (@2)

    @2  go to state 121


state 58

   55 var_name: '*' . param

    Y_IDENT  shift, and go to state 37

    param  go to state 122


state 59

   33 var_decl_stmt: typedefs @5 var_decl_list . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 123
    NL    go to state 35


state 60

   44 var_decl_list: var_decl_plus .
   45              | var_decl_plus . DELIM var_decl_list

    ','  shift, and go to state 124

    $default  reduce using rule 44 (var_decl_list)

    DELIM  go to state 125


state 61

   46 var_decl_plus: var_decl .
   47              | var_decl . '{' options_list ';' '}'

    '{'  shift, and go to state 126

    $default  reduce using rule 46 (var_decl_plus)


state 62

   48 var_decl: var_def .
   50         | var_def . '=' @6 init_list

    '='  shift, and go to state 127

    $default  reduce using rule 48 (var_decl)


state 63

   51 var_def: var_name .
   53        | var_name . @7 '[' init_index_list ']'

    '['       reduce using rule 52 (@7)
    $default  reduce using rule 51 (var_def)

    @7  go to state 128


state 64

   54 var_name: param .

    $default  reduce using rule 54 (var_name)


state 65

   16 script_body: begin_stmt @3 s_list opnl . end_stmt
  151 s_list: s_list opnl . xstmt

    error     shift, and go to state 53
    Y_END     shift, and go to state 129
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 240 (@36)
    Y_IDENT    reduce using rule 240 (@36)
    Y_WHILE    reduce using rule 240 (@36)
    Y_IF       reduce using rule 240 (@36)
    Y_FOR      reduce using rule 240 (@36)
    Y_BREAK    reduce using rule 240 (@36)
    Y_NEXT     reduce using rule 240 (@36)
    Y_SWITCH   reduce using rule 240 (@36)
    Y_CASE     reduce using rule 240 (@36)
    Y_DEFAULT  reduce using rule 240 (@36)
    Y_RETURN   reduce using rule 240 (@36)
    Y_GOTO     reduce using rule 240 (@36)
    Y_IFERR    reduce using rule 240 (@36)
    Y_IFNOERR  reduce using rule 240 (@36)
    '='        reduce using rule 240 (@36)
    '{'        reduce using rule 240 (@36)
    ';'        reduce using rule 240 (@36)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    end_stmt       go to state 130
    xstmt          go to state 131
    @36            go to state 56


state 66

  248 opnl: NL .

    $default  reduce using rule 248 (opnl)


state 67

   18 proc_stmt: Y_PROCEDURE @4 param bparam_list EOST .

    $default  reduce using rule 18 (proc_stmt)


state 68

   20 bparam_list: LP param_list . RP

    ')'  shift, and go to state 132

    RP  go to state 133


state 69

   22 param_list: xparam_list .
   24 xparam_list: xparam_list . DELIM param

    ','  shift, and go to state 124

    $default  reduce using rule 22 (param_list)

    DELIM  go to state 134


state 70

   23 xparam_list: param .

    $default  reduce using rule 23 (xparam_list)


state 71

  243 xstmt: error NL .

    $default  reduce using rule 243 (xstmt)


state 72

  195 osesc: Y_OSESC .

    $default  reduce using rule 195 (osesc)


state 73

  236 label_stmt: Y_IDENT . ':' opnl @35 xstmt
  260 param: Y_IDENT .
  261 tasknam: Y_IDENT .

    ':'  shift, and go to state 135

    '='        reduce using rule 260 (param)
    YOP_AOCAT  reduce using rule 260 (param)
    YOP_AODIV  reduce using rule 260 (param)
    YOP_AOMUL  reduce using rule 260 (param)
    YOP_AOSUB  reduce using rule 260 (param)
    YOP_AOADD  reduce using rule 260 (param)
    '['        reduce using rule 260 (param)
    $default   reduce using rule 261 (tasknam)


state 74

  214 while: Y_WHILE . LP @26 expr RP @27 opnl xstmt

    '('  shift, and go to state 49

    LP  go to state 136


state 75

  209 if_stat: Y_IF . LP expr RP @24 opnl xstmt

    '('  shift, and go to state 49

    LP  go to state 137


state 76

  218 for: Y_FOR . LP opnl xassign ';' opnl @28 xexpr ';' opnl @29 xassign RP opnl @30 stmt

    '('  shift, and go to state 49

    LP  go to state 138


state 77

  231 break: Y_BREAK .

    $default  reduce using rule 231 (break)


state 78

  230 next: Y_NEXT .

    $default  reduce using rule 230 (next)


state 79

  224 switch: Y_SWITCH . opnl LP opnl expr opnl RP opnl @31 xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 139
    NL    go to state 66


state 80

  227 case: Y_CASE . @32 const_expr_list ':' opnl @33 xstmt

    $default  reduce using rule 225 (@32)

    @32  go to state 140


state 81

  229 default: Y_DEFAULT . ':' opnl @34 xstmt

    ':'  shift, and go to state 141


state 82

  232 return: Y_RETURN .
  233       | Y_RETURN . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    $default  reduce using rule 232 (return)

    expr      go to state 156
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 83

  237 goto: Y_GOTO . Y_IDENT

    Y_IDENT  shift, and go to state 163


state 84

  203 iferr_tok: Y_IFERR .

    $default  reduce using rule 203 (iferr_tok)


state 85

  204 iferr_tok: Y_IFNOERR .

    $default  reduce using rule 204 (iferr_tok)


state 86

  156 equals: '=' .

    $default  reduce using rule 156 (equals)


state 87

  149 c_blk: '{' . @13 s_list opnl @14 '}'

    $default  reduce using rule 147 (@13)

    @13  go to state 164


state 88

  238 nullstmt: ';' .
  239         | ';' . NL

    Y_NEWLINE  shift, and go to state 10

    Y_NEWLINE  [reduce using rule 238 (nullstmt)]
    $default   reduce using rule 238 (nullstmt)

    NL  go to state 165


state 89

  241 xstmt: @36 stmt .

    $default  reduce using rule 241 (xstmt)


state 90

  123 stmt: c_stmt .

    $default  reduce using rule 123 (stmt)


state 91

  145 c_stmt: c_blk .
  146       | c_blk . NL

    Y_NEWLINE  shift, and go to state 10

    Y_NEWLINE  [reduce using rule 145 (c_stmt)]
    $default   reduce using rule 145 (c_stmt)

    NL  go to state 166


state 92

  124 stmt: assign . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 167
    NL    go to state 35


state 93

  192 immed: equals . expr0
  193      | equals . ref
  196 popstk: equals .

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    $default  reduce using rule 196 (popstk)

    expr      go to state 168
    expr0     go to state 169
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 170
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 94

  125 stmt: cmdlist . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 171
    NL    go to state 35


state 95

  163 cmdlist: command . @16 cmdpipe

    $default  reduce using rule 162 (@16)

    @16  go to state 172


state 96

  126 stmt: immed . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 173
    NL    go to state 35


state 97

  127 stmt: inspect . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 174
    NL    go to state 35


state 98

  128 stmt: osesc . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 175
    NL    go to state 35


state 99

  129 stmt: popstk . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 176
    NL    go to state 35


state 100

  132 stmt: iferr .

    $default  reduce using rule 132 (stmt)


state 101

  197 iferr: iferr_stat .
  202 iferr_else: iferr_stat . Y_ELSE @23 opnl xstmt

    Y_ELSE  shift, and go to state 177

    Y_ELSE    [reduce using rule 197 (iferr)]
    $default  reduce using rule 197 (iferr)


state 102

  133 stmt: iferr_else .

    $default  reduce using rule 133 (stmt)


state 103

  200 iferr_stat: iferr_tok . @21 c_blk @22 op_then opnl xstmt

    $default  reduce using rule 198 (@21)

    @21  go to state 178


state 104

  130 stmt: if .

    $default  reduce using rule 130 (stmt)


state 105

  207 if: if_stat .
  211 ifelse: if_stat . Y_ELSE @25 opnl xstmt

    Y_ELSE  shift, and go to state 179

    Y_ELSE    [reduce using rule 207 (if)]
    $default  reduce using rule 207 (if)


state 106

  131 stmt: ifelse .

    $default  reduce using rule 131 (stmt)


state 107

  134 stmt: while .

    $default  reduce using rule 134 (stmt)


state 108

  135 stmt: for .

    $default  reduce using rule 135 (stmt)


state 109

  136 stmt: switch .

    $default  reduce using rule 136 (stmt)


state 110

  137 stmt: case .

    $default  reduce using rule 137 (stmt)


state 111

  138 stmt: default .

    $default  reduce using rule 138 (stmt)


state 112

  139 stmt: next . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 180
    NL    go to state 35


state 113

  140 stmt: break . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 181
    NL    go to state 35


state 114

  142 stmt: return . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 182
    NL    go to state 35


state 115

  143 stmt: label_stmt .

    $default  reduce using rule 143 (stmt)


state 116

  141 stmt: goto . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 183
    NL    go to state 35


state 117

  144 stmt: nullstmt .

    $default  reduce using rule 144 (stmt)


state 118

  152 assign: ref . equals expr0
  153       | ref . equals ref
  155       | ref . @15 assign_oper expr
  194 inspect: ref . equals

    '='  shift, and go to state 86

    $default  reduce using rule 154 (@15)

    @15     go to state 184
    equals  go to state 185


state 119

  249 ref: param .
  251    | param . @37 '[' index_list ']'

    '['       reduce using rule 250 (@37)
    $default  reduce using rule 249 (ref)

    @37  go to state 186


state 120

  171 command: tasknam . @18 BARG @19 args EARG

    $default  reduce using rule 169 (@18)

    @18  go to state 187


state 121

   10 debug: D_XXX EOST @2 . debug

    D_D     shift, and go to state 39
    D_PEEK  shift, and go to state 40
    '~'     shift, and go to state 41

    $default  reduce using rule 8 (debug)

    debug  go to state 188
    D_XXX  go to state 43


state 122

   55 var_name: '*' param .

    $default  reduce using rule 55 (var_name)


state 123

   33 var_decl_stmt: typedefs @5 var_decl_list EOST .

    $default  reduce using rule 33 (var_decl_stmt)


state 124

  264 DELIM: ',' .

    $default  reduce using rule 264 (DELIM)


state 125

   45 var_decl_list: var_decl_plus DELIM . var_decl_list

    Y_IDENT  shift, and go to state 37
    '*'      shift, and go to state 58

    var_decl_list  go to state 189
    var_decl_plus  go to state 60
    var_decl       go to state 61
    var_def        go to state 62
    var_name       go to state 63
    param          go to state 64


state 126

   47 var_decl_plus: var_decl '{' . options_list ';' '}'

    Y_CONSTANT  shift, and go to state 190
    Y_IDENT     shift, and go to state 191
    '+'         shift, and go to state 192
    '-'         shift, and go to state 193

    init_list     go to state 194
    init_elem     go to state 195
    const         go to state 196
    number        go to state 197
    sign          go to state 198
    options_list  go to state 199
    options       go to state 200
    option        go to state 201


state 127

   50 var_decl: var_def '=' . @6 init_list

    $default  reduce using rule 49 (@6)

    @6  go to state 202


state 128

   53 var_def: var_name @7 . '[' init_index_list ']'

    '['  shift, and go to state 203


state 129

  234 end_stmt: Y_END . NL

    Y_NEWLINE  shift, and go to state 10

    NL  go to state 204


state 130

   16 script_body: begin_stmt @3 s_list opnl end_stmt .

    $default  reduce using rule 16 (script_body)


state 131

  151 s_list: s_list opnl xstmt .

    $default  reduce using rule 151 (s_list)


state 132

  270 RP: ')' .

    $default  reduce using rule 270 (RP)


state 133

   20 bparam_list: LP param_list RP .

    $default  reduce using rule 20 (bparam_list)


state 134

   24 xparam_list: xparam_list DELIM . param

    Y_IDENT  shift, and go to state 37

    param  go to state 205


state 135

  236 label_stmt: Y_IDENT ':' . opnl @35 xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 206
    NL    go to state 66


state 136

  214 while: Y_WHILE LP . @26 expr RP @27 opnl xstmt

    $default  reduce using rule 212 (@26)

    @26  go to state 207


state 137

  209 if_stat: Y_IF LP . expr RP @24 opnl xstmt

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 208
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 138

  218 for: Y_FOR LP . opnl xassign ';' opnl @28 xexpr ';' opnl @29 xassign RP opnl @30 stmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 209
    NL    go to state 66


state 139

  224 switch: Y_SWITCH opnl . LP opnl expr opnl RP opnl @31 xstmt

    '('  shift, and go to state 49

    LP  go to state 210


state 140

  227 case: Y_CASE @32 . const_expr_list ':' opnl @33 xstmt

    Y_CONSTANT  shift, and go to state 211
    '+'         shift, and go to state 192
    '-'         shift, and go to state 193

    const            go to state 212
    number           go to state 197
    sign             go to state 198
    const_expr_list  go to state 213
    const_expr       go to state 214


state 141

  229 default: Y_DEFAULT ':' . opnl @34 xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 215
    NL    go to state 66


state 142

  104 expr1: Y_SCAN . LP @8 scanarg RP

    '('  shift, and go to state 49

    LP  go to state 216


state 143

  106 expr1: Y_SCANF . LP @9 scanfmt DELIM scanarg RP

    '('  shift, and go to state 49

    LP  go to state 217


state 144

  108 expr1: Y_FSCAN . LP @10 scanarg RP

    '('  shift, and go to state 49

    LP  go to state 218


state 145

  110 expr1: Y_FSCANF . LP Y_IDENT DELIM @11 scanfmt DELIM scanarg RP

    '('  shift, and go to state 49

    LP  go to state 219


state 146

   80 expr0: Y_CONSTANT .

    $default  reduce using rule 80 (expr0)


state 147

  259 intrins: Y_IDENT .
  260 param: Y_IDENT .

    '('       reduce using rule 259 (intrins)
    $default  reduce using rule 260 (param)


state 148

  114 intrinsx: Y_INT .

    $default  reduce using rule 114 (intrinsx)


state 149

  115 intrinsx: Y_REAL .

    $default  reduce using rule 115 (intrinsx)


state 150

   81 expr0: Y_GCUR .

    $default  reduce using rule 81 (expr0)


state 151

   82 expr0: Y_IMCUR .

    $default  reduce using rule 82 (expr0)


state 152

   83 expr0: Y_UKEY .

    $default  reduce using rule 83 (expr0)


state 153

   84 expr0: Y_PSET .

    $default  reduce using rule 84 (expr0)


state 154

  102 expr1: '-' . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 220
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 155

  101 expr1: YOP_NOT . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 221
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 156

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  233 return: Y_RETURN expr .

    YOP_OR      shift, and go to state 222
    YOP_AND     shift, and go to state 223
    YOP_NE      shift, and go to state 224
    YOP_EQ      shift, and go to state 225
    '<'         shift, and go to state 226
    '>'         shift, and go to state 227
    YOP_GE      shift, and go to state 228
    YOP_LE      shift, and go to state 229
    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236

    $default  reduce using rule 233 (return)


state 157

   77 expr: expr0 .

    $default  reduce using rule 77 (expr)


state 158

   79 expr0: expr1 .

    $default  reduce using rule 79 (expr0)


state 159

  112 expr1: intrinsx . LP @12 intrarg RP

    '('  shift, and go to state 49

    LP  go to state 237


state 160

   78 expr: ref .

    $default  reduce using rule 78 (expr)


state 161

  113 intrinsx: intrins .

    $default  reduce using rule 113 (intrinsx)


state 162

   85 expr1: LP . expr RP

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 238
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 163

  237 goto: Y_GOTO Y_IDENT .

    $default  reduce using rule 237 (goto)


state 164

  149 c_blk: '{' @13 . s_list opnl @14 '}'

    $default  reduce using rule 150 (s_list)

    s_list  go to state 239


state 165

  239 nullstmt: ';' NL .

    $default  reduce using rule 239 (nullstmt)


state 166

  146 c_stmt: c_blk NL .

    $default  reduce using rule 146 (c_stmt)


state 167

  124 stmt: assign EOST .

    $default  reduce using rule 124 (stmt)


state 168

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_OR      shift, and go to state 222
    YOP_AND     shift, and go to state 223
    YOP_NE      shift, and go to state 224
    YOP_EQ      shift, and go to state 225
    '<'         shift, and go to state 226
    '>'         shift, and go to state 227
    YOP_GE      shift, and go to state 228
    YOP_LE      shift, and go to state 229
    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236


state 169

   77 expr: expr0 .
  192 immed: equals expr0 .

    Y_NEWLINE  reduce using rule 192 (immed)
    ';'        reduce using rule 192 (immed)
    $default   reduce using rule 77 (expr)


state 170

   78 expr: ref .
  193 immed: equals ref .

    Y_NEWLINE  reduce using rule 193 (immed)
    ';'        reduce using rule 193 (immed)
    $default   reduce using rule 78 (expr)


state 171

  125 stmt: cmdlist EOST .

    $default  reduce using rule 125 (stmt)


state 172

  163 cmdlist: command @16 . cmdpipe

    $default  reduce using rule 164 (cmdpipe)

    cmdpipe  go to state 240


state 173

  126 stmt: immed EOST .

    $default  reduce using rule 126 (stmt)


state 174

  127 stmt: inspect EOST .

    $default  reduce using rule 127 (stmt)


state 175

  128 stmt: osesc EOST .

    $default  reduce using rule 128 (stmt)


state 176

  129 stmt: popstk EOST .

    $default  reduce using rule 129 (stmt)


state 177

  202 iferr_else: iferr_stat Y_ELSE . @23 opnl xstmt

    $default  reduce using rule 201 (@23)

    @23  go to state 241


state 178

  200 iferr_stat: iferr_tok @21 . c_blk @22 op_then opnl xstmt

    '{'  shift, and go to state 87

    c_blk  go to state 242


state 179

  211 ifelse: if_stat Y_ELSE . @25 opnl xstmt

    $default  reduce using rule 210 (@25)

    @25  go to state 243


state 180

  139 stmt: next EOST .

    $default  reduce using rule 139 (stmt)


state 181

  140 stmt: break EOST .

    $default  reduce using rule 140 (stmt)


state 182

  142 stmt: return EOST .

    $default  reduce using rule 142 (stmt)


state 183

  141 stmt: goto EOST .

    $default  reduce using rule 141 (stmt)


state 184

  155 assign: ref @15 . assign_oper expr

    YOP_AOCAT  shift, and go to state 244
    YOP_AODIV  shift, and go to state 245
    YOP_AOMUL  shift, and go to state 246
    YOP_AOSUB  shift, and go to state 247
    YOP_AOADD  shift, and go to state 248

    assign_oper  go to state 249


state 185

  152 assign: ref equals . expr0
  153       | ref equals . ref
  194 inspect: ref equals .

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    $default  reduce using rule 194 (inspect)

    expr      go to state 168
    expr0     go to state 250
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 251
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 186

  251 ref: param @37 . '[' index_list ']'

    '['  shift, and go to state 252


state 187

  171 command: tasknam @18 . BARG @19 args EARG

    '('  shift, and go to state 49

    '('       [reduce using rule 265 (BARG)]
    $default  reduce using rule 265 (BARG)

    BARG  go to state 253
    LP    go to state 254


state 188

   10 debug: D_XXX EOST @2 debug .

    $default  reduce using rule 10 (debug)


state 189

   45 var_decl_list: var_decl_plus DELIM var_decl_list .

    $default  reduce using rule 45 (var_decl_list)


state 190

   64 init_elem: Y_CONSTANT . LP const RP
   65 const: Y_CONSTANT .

    '('  shift, and go to state 49

    $default  reduce using rule 65 (const)

    LP  go to state 255


state 191

   75 option: Y_IDENT . '=' const

    '='  shift, and go to state 256


state 192

   68 sign: '+' .

    $default  reduce using rule 68 (sign)


state 193

   69 sign: '-' .

    $default  reduce using rule 69 (sign)


state 194

   62 init_list: init_list . DELIM init_elem
   70 options_list: init_list . DELIM options
   71             | init_list .

    ','  shift, and go to state 124

    $default  reduce using rule 71 (options_list)

    DELIM  go to state 257


state 195

   61 init_list: init_elem .

    $default  reduce using rule 61 (init_list)


state 196

   63 init_elem: const .

    $default  reduce using rule 63 (init_elem)


state 197

   66 const: number .

    $default  reduce using rule 66 (const)


state 198

   67 number: sign . Y_CONSTANT

    Y_CONSTANT  shift, and go to state 258


state 199

   47 var_decl_plus: var_decl '{' options_list . ';' '}'

    ';'  shift, and go to state 259


state 200

   72 options_list: options .
   74 options: options . DELIM option

    ','  shift, and go to state 124

    $default  reduce using rule 72 (options_list)

    DELIM  go to state 260


state 201

   73 options: option .

    $default  reduce using rule 73 (options)


state 202

   50 var_decl: var_def '=' @6 . init_list

    Y_CONSTANT  shift, and go to state 190
    '+'         shift, and go to state 192
    '-'         shift, and go to state 193

    init_list  go to state 261
    init_elem  go to state 195
    const      go to state 196
    number     go to state 197
    sign       go to state 198


state 203

   53 var_def: var_name @7 '[' . init_index_list ']'

    Y_CONSTANT  shift, and go to state 211
    '+'         shift, and go to state 192
    '-'         shift, and go to state 193

    $default  reduce using rule 56 (init_index_list)

    init_index_list   go to state 262
    init_index_range  go to state 263
    const             go to state 264
    number            go to state 197
    sign              go to state 198


state 204

  234 end_stmt: Y_END NL .

    $default  reduce using rule 234 (end_stmt)


state 205

   24 xparam_list: xparam_list DELIM param .

    $default  reduce using rule 24 (xparam_list)


state 206

  236 label_stmt: Y_IDENT ':' opnl . @35 xstmt

    $default  reduce using rule 235 (@35)

    @35  go to state 265


state 207

  214 while: Y_WHILE LP @26 . expr RP @27 opnl xstmt

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 266
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 208

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  209 if_stat: Y_IF LP expr . RP @24 opnl xstmt

    YOP_OR      shift, and go to state 222
    YOP_AND     shift, and go to state 223
    YOP_NE      shift, and go to state 224
    YOP_EQ      shift, and go to state 225
    '<'         shift, and go to state 226
    '>'         shift, and go to state 227
    YOP_GE      shift, and go to state 228
    YOP_LE      shift, and go to state 229
    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236
    ')'         shift, and go to state 132

    RP  go to state 267


state 209

  218 for: Y_FOR LP opnl . xassign ';' opnl @28 xexpr ';' opnl @29 xassign RP opnl @30 stmt

    Y_IDENT  shift, and go to state 37

    $default  reduce using rule 220 (xassign)

    assign   go to state 268
    xassign  go to state 269
    ref      go to state 270
    param    go to state 119


state 210

  224 switch: Y_SWITCH opnl LP . opnl expr opnl RP opnl @31 xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 271
    NL    go to state 66


state 211

   65 const: Y_CONSTANT .

    $default  reduce using rule 65 (const)


state 212

  246 const_expr: const .

    $default  reduce using rule 246 (const_expr)


state 213

  227 case: Y_CASE @32 const_expr_list . ':' opnl @33 xstmt

    ':'  shift, and go to state 272


state 214

  244 const_expr_list: const_expr .
  245                | const_expr . DELIM const_expr_list

    ','  shift, and go to state 124

    $default  reduce using rule 244 (const_expr_list)

    DELIM  go to state 273


state 215

  229 default: Y_DEFAULT ':' opnl . @34 xstmt

    $default  reduce using rule 228 (@34)

    @34  go to state 274


state 216

  104 expr1: Y_SCAN LP . @8 scanarg RP

    $default  reduce using rule 103 (@8)

    @8  go to state 275


state 217

  106 expr1: Y_SCANF LP . @9 scanfmt DELIM scanarg RP

    $default  reduce using rule 105 (@9)

    @9  go to state 276


state 218

  108 expr1: Y_FSCAN LP . @10 scanarg RP

    $default  reduce using rule 107 (@10)

    @10  go to state 277


state 219

  110 expr1: Y_FSCANF LP . Y_IDENT DELIM @11 scanfmt DELIM scanarg RP

    Y_IDENT  shift, and go to state 278


state 220

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  102      | '-' expr .

    YOP_POW  shift, and go to state 236

    $default  reduce using rule 102 (expr1)


state 221

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  101      | YOP_NOT expr .

    YOP_POW  shift, and go to state 236

    $default  reduce using rule 101 (expr1)


state 222

   99 expr1: expr YOP_OR . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 279
    NL    go to state 66


state 223

  100 expr1: expr YOP_AND . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 280
    NL    go to state 66


state 224

   98 expr1: expr YOP_NE . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 281
    NL    go to state 66


state 225

   97 expr1: expr YOP_EQ . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 282
    NL    go to state 66


state 226

   93 expr1: expr '<' . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 283
    NL    go to state 66


state 227

   94 expr1: expr '>' . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 284
    NL    go to state 66


state 228

   96 expr1: expr YOP_GE . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 285
    NL    go to state 66


state 229

   95 expr1: expr YOP_LE . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 286
    NL    go to state 66


state 230

   92 expr1: expr YOP_CONCAT . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 287
    NL    go to state 66


state 231

   86 expr1: expr '+' . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 288
    NL    go to state 66


state 232

   87 expr1: expr '-' . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 289
    NL    go to state 66


state 233

   88 expr1: expr '*' . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 290
    NL    go to state 66


state 234

   89 expr1: expr '/' . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 291
    NL    go to state 66


state 235

   91 expr1: expr '%' . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 292
    NL    go to state 66


state 236

   90 expr1: expr YOP_POW . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 293
    NL    go to state 66


state 237

  112 expr1: intrinsx LP . @12 intrarg RP

    $default  reduce using rule 111 (@12)

    @12  go to state 294


state 238

   85 expr1: LP expr . RP
   86      | expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_OR      shift, and go to state 222
    YOP_AND     shift, and go to state 223
    YOP_NE      shift, and go to state 224
    YOP_EQ      shift, and go to state 225
    '<'         shift, and go to state 226
    '>'         shift, and go to state 227
    YOP_GE      shift, and go to state 228
    YOP_LE      shift, and go to state 229
    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236
    ')'         shift, and go to state 132

    RP  go to state 295


state 239

  149 c_blk: '{' @13 s_list . opnl @14 '}'
  151 s_list: s_list . opnl xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 296
    NL    go to state 66


state 240

  163 cmdlist: command @16 cmdpipe .
  166 cmdpipe: cmdpipe . pipe @17 command

    Y_ALLPIPE  shift, and go to state 297
    '|'        shift, and go to state 298

    $default  reduce using rule 163 (cmdlist)

    pipe  go to state 299


state 241

  202 iferr_else: iferr_stat Y_ELSE @23 . opnl xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 300
    NL    go to state 66


state 242

  200 iferr_stat: iferr_tok @21 c_blk . @22 op_then opnl xstmt

    $default  reduce using rule 199 (@22)

    @22  go to state 301


state 243

  211 ifelse: if_stat Y_ELSE @25 . opnl xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 302
    NL    go to state 66


state 244

  161 assign_oper: YOP_AOCAT .

    $default  reduce using rule 161 (assign_oper)


state 245

  160 assign_oper: YOP_AODIV .

    $default  reduce using rule 160 (assign_oper)


state 246

  159 assign_oper: YOP_AOMUL .

    $default  reduce using rule 159 (assign_oper)


state 247

  158 assign_oper: YOP_AOSUB .

    $default  reduce using rule 158 (assign_oper)


state 248

  157 assign_oper: YOP_AOADD .

    $default  reduce using rule 157 (assign_oper)


state 249

  155 assign: ref @15 assign_oper . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 303
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 250

   77 expr: expr0 .
  152 assign: ref equals expr0 .

    Y_NEWLINE  reduce using rule 152 (assign)
    ';'        reduce using rule 152 (assign)
    ')'        reduce using rule 152 (assign)
    $default   reduce using rule 77 (expr)


state 251

   78 expr: ref .
  153 assign: ref equals ref .

    Y_NEWLINE  reduce using rule 153 (assign)
    ';'        reduce using rule 153 (assign)
    ')'        reduce using rule 153 (assign)
    $default   reduce using rule 78 (expr)


state 252

  251 ref: param @37 '[' . index_list ']'

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 304
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 305
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr        go to state 168
    expr0       go to state 157
    expr1       go to state 306
    intrinsx    go to state 159
    ref         go to state 307
    index_list  go to state 308
    index       go to state 309
    intrins     go to state 161
    param       go to state 119
    LP          go to state 162


state 253

  171 command: tasknam @18 BARG . @19 args EARG

    $default  reduce using rule 170 (@19)

    @19  go to state 310


state 254

  266 BARG: LP .

    $default  reduce using rule 266 (BARG)


state 255

   64 init_elem: Y_CONSTANT LP . const RP

    Y_CONSTANT  shift, and go to state 211
    '+'         shift, and go to state 192
    '-'         shift, and go to state 193

    const   go to state 311
    number  go to state 197
    sign    go to state 198


state 256

   75 option: Y_IDENT '=' . const

    Y_CONSTANT  shift, and go to state 211
    '+'         shift, and go to state 192
    '-'         shift, and go to state 193

    const   go to state 312
    number  go to state 197
    sign    go to state 198


state 257

   62 init_list: init_list DELIM . init_elem
   70 options_list: init_list DELIM . options

    Y_CONSTANT  shift, and go to state 190
    Y_IDENT     shift, and go to state 191
    '+'         shift, and go to state 192
    '-'         shift, and go to state 193

    init_elem  go to state 313
    const      go to state 196
    number     go to state 197
    sign       go to state 198
    options    go to state 314
    option     go to state 201


state 258

   67 number: sign Y_CONSTANT .

    $default  reduce using rule 67 (number)


state 259

   47 var_decl_plus: var_decl '{' options_list ';' . '}'

    '}'  shift, and go to state 315


state 260

   74 options: options DELIM . option

    Y_IDENT  shift, and go to state 191

    option  go to state 316


state 261

   50 var_decl: var_def '=' @6 init_list .
   62 init_list: init_list . DELIM init_elem

    ','  shift, and go to state 124

    ','       [reduce using rule 50 (var_decl)]
    $default  reduce using rule 50 (var_decl)

    DELIM  go to state 317


state 262

   53 var_def: var_name @7 '[' init_index_list . ']'
   58 init_index_list: init_index_list . DELIM init_index_range

    ']'  shift, and go to state 318
    ','  shift, and go to state 124

    DELIM  go to state 319


state 263

   57 init_index_list: init_index_range .

    $default  reduce using rule 57 (init_index_list)


state 264

   59 init_index_range: const .
   60                 | const . ':' const

    ':'  shift, and go to state 320

    $default  reduce using rule 59 (init_index_range)


state 265

  236 label_stmt: Y_IDENT ':' opnl @35 . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 240 (@36)
    Y_IDENT    reduce using rule 240 (@36)
    Y_WHILE    reduce using rule 240 (@36)
    Y_IF       reduce using rule 240 (@36)
    Y_FOR      reduce using rule 240 (@36)
    Y_BREAK    reduce using rule 240 (@36)
    Y_NEXT     reduce using rule 240 (@36)
    Y_SWITCH   reduce using rule 240 (@36)
    Y_CASE     reduce using rule 240 (@36)
    Y_DEFAULT  reduce using rule 240 (@36)
    Y_RETURN   reduce using rule 240 (@36)
    Y_GOTO     reduce using rule 240 (@36)
    Y_IFERR    reduce using rule 240 (@36)
    Y_IFNOERR  reduce using rule 240 (@36)
    '='        reduce using rule 240 (@36)
    '{'        reduce using rule 240 (@36)
    ';'        reduce using rule 240 (@36)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 321
    @36            go to state 56


state 266

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  214 while: Y_WHILE LP @26 expr . RP @27 opnl xstmt

    YOP_OR      shift, and go to state 222
    YOP_AND     shift, and go to state 223
    YOP_NE      shift, and go to state 224
    YOP_EQ      shift, and go to state 225
    '<'         shift, and go to state 226
    '>'         shift, and go to state 227
    YOP_GE      shift, and go to state 228
    YOP_LE      shift, and go to state 229
    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236
    ')'         shift, and go to state 132

    RP  go to state 322


state 267

  209 if_stat: Y_IF LP expr RP . @24 opnl xstmt

    $default  reduce using rule 208 (@24)

    @24  go to state 323


state 268

  219 xassign: assign .

    $default  reduce using rule 219 (xassign)


state 269

  218 for: Y_FOR LP opnl xassign . ';' opnl @28 xexpr ';' opnl @29 xassign RP opnl @30 stmt

    ';'  shift, and go to state 324


state 270

  152 assign: ref . equals expr0
  153       | ref . equals ref
  155       | ref . @15 assign_oper expr

    '='  shift, and go to state 86

    $default  reduce using rule 154 (@15)

    @15     go to state 184
    equals  go to state 325


state 271

  224 switch: Y_SWITCH opnl LP opnl . expr opnl RP opnl @31 xstmt

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 326
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 272

  227 case: Y_CASE @32 const_expr_list ':' . opnl @33 xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 327
    NL    go to state 66


state 273

  245 const_expr_list: const_expr DELIM . const_expr_list

    Y_CONSTANT  shift, and go to state 211
    '+'         shift, and go to state 192
    '-'         shift, and go to state 193

    const            go to state 212
    number           go to state 197
    sign             go to state 198
    const_expr_list  go to state 328
    const_expr       go to state 214


state 274

  229 default: Y_DEFAULT ':' opnl @34 . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 240 (@36)
    Y_IDENT    reduce using rule 240 (@36)
    Y_WHILE    reduce using rule 240 (@36)
    Y_IF       reduce using rule 240 (@36)
    Y_FOR      reduce using rule 240 (@36)
    Y_BREAK    reduce using rule 240 (@36)
    Y_NEXT     reduce using rule 240 (@36)
    Y_SWITCH   reduce using rule 240 (@36)
    Y_CASE     reduce using rule 240 (@36)
    Y_DEFAULT  reduce using rule 240 (@36)
    Y_RETURN   reduce using rule 240 (@36)
    Y_GOTO     reduce using rule 240 (@36)
    Y_IFERR    reduce using rule 240 (@36)
    Y_IFNOERR  reduce using rule 240 (@36)
    '='        reduce using rule 240 (@36)
    '{'        reduce using rule 240 (@36)
    ';'        reduce using rule 240 (@36)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 329
    @36            go to state 56


state 275

  104 expr1: Y_SCAN LP @8 . scanarg RP

    Y_IDENT  shift, and go to state 330

    $default  reduce using rule 117 (scanarg)

    scanarg  go to state 331


state 276

  106 expr1: Y_SCANF LP @9 . scanfmt DELIM scanarg RP

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 332
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    scanfmt   go to state 333
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 277

  108 expr1: Y_FSCAN LP @10 . scanarg RP

    Y_IDENT  shift, and go to state 330

    $default  reduce using rule 117 (scanarg)

    scanarg  go to state 334


state 278

  110 expr1: Y_FSCANF LP Y_IDENT . DELIM @11 scanfmt DELIM scanarg RP

    ','  shift, and go to state 124

    DELIM  go to state 335


state 279

   99 expr1: expr YOP_OR opnl . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 336
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 280

  100 expr1: expr YOP_AND opnl . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 337
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 281

   98 expr1: expr YOP_NE opnl . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 338
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 282

   97 expr1: expr YOP_EQ opnl . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 339
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 283

   93 expr1: expr '<' opnl . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 340
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 284

   94 expr1: expr '>' opnl . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 341
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 285

   96 expr1: expr YOP_GE opnl . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 342
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 286

   95 expr1: expr YOP_LE opnl . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 343
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 287

   92 expr1: expr YOP_CONCAT opnl . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 344
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 288

   86 expr1: expr '+' opnl . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 345
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 289

   87 expr1: expr '-' opnl . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 346
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 290

   88 expr1: expr '*' opnl . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 347
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 291

   89 expr1: expr '/' opnl . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 348
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 292

   91 expr1: expr '%' opnl . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 349
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 293

   90 expr1: expr YOP_POW opnl . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 350
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 294

  112 expr1: intrinsx LP @12 . intrarg RP

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    $default  reduce using rule 120 (intrarg)

    expr      go to state 351
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    intrarg   go to state 352
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 295

   85 expr1: LP expr RP .

    $default  reduce using rule 85 (expr1)


state 296

  149 c_blk: '{' @13 s_list opnl . @14 '}'
  151 s_list: s_list opnl . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 240 (@36)
    Y_IDENT    reduce using rule 240 (@36)
    Y_WHILE    reduce using rule 240 (@36)
    Y_IF       reduce using rule 240 (@36)
    Y_FOR      reduce using rule 240 (@36)
    Y_BREAK    reduce using rule 240 (@36)
    Y_NEXT     reduce using rule 240 (@36)
    Y_SWITCH   reduce using rule 240 (@36)
    Y_CASE     reduce using rule 240 (@36)
    Y_DEFAULT  reduce using rule 240 (@36)
    Y_RETURN   reduce using rule 240 (@36)
    Y_GOTO     reduce using rule 240 (@36)
    Y_IFERR    reduce using rule 240 (@36)
    Y_IFNOERR  reduce using rule 240 (@36)
    '='        reduce using rule 240 (@36)
    '{'        reduce using rule 240 (@36)
    ';'        reduce using rule 240 (@36)
    '}'        reduce using rule 148 (@14)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    @14            go to state 353
    xstmt          go to state 131
    @36            go to state 56


state 297

  168 pipe: Y_ALLPIPE . opnl

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 354
    NL    go to state 66


state 298

  167 pipe: '|' . opnl

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 355
    NL    go to state 66


state 299

  166 cmdpipe: cmdpipe pipe . @17 command

    $default  reduce using rule 165 (@17)

    @17  go to state 356


state 300

  202 iferr_else: iferr_stat Y_ELSE @23 opnl . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 240 (@36)
    Y_IDENT    reduce using rule 240 (@36)
    Y_WHILE    reduce using rule 240 (@36)
    Y_IF       reduce using rule 240 (@36)
    Y_FOR      reduce using rule 240 (@36)
    Y_BREAK    reduce using rule 240 (@36)
    Y_NEXT     reduce using rule 240 (@36)
    Y_SWITCH   reduce using rule 240 (@36)
    Y_CASE     reduce using rule 240 (@36)
    Y_DEFAULT  reduce using rule 240 (@36)
    Y_RETURN   reduce using rule 240 (@36)
    Y_GOTO     reduce using rule 240 (@36)
    Y_IFERR    reduce using rule 240 (@36)
    Y_IFNOERR  reduce using rule 240 (@36)
    '='        reduce using rule 240 (@36)
    '{'        reduce using rule 240 (@36)
    ';'        reduce using rule 240 (@36)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 357
    @36            go to state 56


state 301

  200 iferr_stat: iferr_tok @21 c_blk @22 . op_then opnl xstmt

    Y_THEN  shift, and go to state 358

    $default  reduce using rule 205 (op_then)

    op_then  go to state 359


state 302

  211 ifelse: if_stat Y_ELSE @25 opnl . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 240 (@36)
    Y_IDENT    reduce using rule 240 (@36)
    Y_WHILE    reduce using rule 240 (@36)
    Y_IF       reduce using rule 240 (@36)
    Y_FOR      reduce using rule 240 (@36)
    Y_BREAK    reduce using rule 240 (@36)
    Y_NEXT     reduce using rule 240 (@36)
    Y_SWITCH   reduce using rule 240 (@36)
    Y_CASE     reduce using rule 240 (@36)
    Y_DEFAULT  reduce using rule 240 (@36)
    Y_RETURN   reduce using rule 240 (@36)
    Y_GOTO     reduce using rule 240 (@36)
    Y_IFERR    reduce using rule 240 (@36)
    Y_IFNOERR  reduce using rule 240 (@36)
    '='        reduce using rule 240 (@36)
    '{'        reduce using rule 240 (@36)
    ';'        reduce using rule 240 (@36)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 360
    @36            go to state 56


state 303

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  155 assign: ref @15 assign_oper expr .

    YOP_OR      shift, and go to state 222
    YOP_AND     shift, and go to state 223
    YOP_NE      shift, and go to state 224
    YOP_EQ      shift, and go to state 225
    '<'         shift, and go to state 226
    '>'         shift, and go to state 227
    YOP_GE      shift, and go to state 228
    YOP_LE      shift, and go to state 229
    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236

    $default  reduce using rule 155 (assign)


state 304

   80 expr0: Y_CONSTANT .
  258 index: Y_CONSTANT .

    ']'       reduce using rule 258 (index)
    ','       reduce using rule 258 (index)
    $default  reduce using rule 80 (expr0)


state 305

  257 index: '*' .

    $default  reduce using rule 257 (index)


state 306

   79 expr0: expr1 .
  255 index: expr1 .

    ']'       reduce using rule 255 (index)
    ','       reduce using rule 255 (index)
    $default  reduce using rule 79 (expr0)


state 307

   78 expr: ref .
  256 index: ref .

    ']'       reduce using rule 256 (index)
    ','       reduce using rule 256 (index)
    $default  reduce using rule 78 (expr)


state 308

  251 ref: param @37 '[' index_list . ']'

    ']'  shift, and go to state 361


state 309

  252 index_list: index .
  254           | index . @38 DELIM index_list

    ','       reduce using rule 253 (@38)
    $default  reduce using rule 252 (index_list)

    @38  go to state 362


state 310

  171 command: tasknam @18 BARG @19 . args EARG

    Y_SCAN       shift, and go to state 142
    Y_SCANF      shift, and go to state 143
    Y_FSCAN      shift, and go to state 144
    Y_FSCANF     shift, and go to state 145
    Y_APPEND     shift, and go to state 363
    Y_ALLAPPEND  shift, and go to state 364
    Y_ALLREDIR   shift, and go to state 365
    Y_GSREDIR    shift, and go to state 366
    Y_CONSTANT   shift, and go to state 146
    Y_IDENT      shift, and go to state 147
    Y_INT        shift, and go to state 148
    Y_REAL       shift, and go to state 149
    Y_GCUR       shift, and go to state 150
    Y_IMCUR      shift, and go to state 151
    Y_UKEY       shift, and go to state 152
    Y_PSET       shift, and go to state 153
    '<'          shift, and go to state 367
    '>'          shift, and go to state 368
    '-'          shift, and go to state 154
    YOP_NOT      shift, and go to state 155
    ','          shift, and go to state 124
    '('          shift, and go to state 49

    ','       [reduce using rule 177 (arg)]
    $default  reduce using rule 177 (arg)

    expr      go to state 168
    expr0     go to state 369
    expr1     go to state 158
    intrinsx  go to state 159
    args      go to state 370
    arglist   go to state 371
    arg       go to state 372
    ref       go to state 373
    intrins   go to state 161
    param     go to state 374
    DELIM     go to state 375
    LP        go to state 162


state 311

   64 init_elem: Y_CONSTANT LP const . RP

    ')'  shift, and go to state 132

    RP  go to state 376


state 312

   75 option: Y_IDENT '=' const .

    $default  reduce using rule 75 (option)


state 313

   62 init_list: init_list DELIM init_elem .

    $default  reduce using rule 62 (init_list)


state 314

   70 options_list: init_list DELIM options .
   74 options: options . DELIM option

    ','  shift, and go to state 124

    $default  reduce using rule 70 (options_list)

    DELIM  go to state 260


state 315

   47 var_decl_plus: var_decl '{' options_list ';' '}' .

    $default  reduce using rule 47 (var_decl_plus)


state 316

   74 options: options DELIM option .

    $default  reduce using rule 74 (options)


state 317

   62 init_list: init_list DELIM . init_elem

    Y_CONSTANT  shift, and go to state 190
    '+'         shift, and go to state 192
    '-'         shift, and go to state 193

    init_elem  go to state 313
    const      go to state 196
    number     go to state 197
    sign       go to state 198


state 318

   53 var_def: var_name @7 '[' init_index_list ']' .

    $default  reduce using rule 53 (var_def)


state 319

   58 init_index_list: init_index_list DELIM . init_index_range

    Y_CONSTANT  shift, and go to state 211
    '+'         shift, and go to state 192
    '-'         shift, and go to state 193

    init_index_range  go to state 377
    const             go to state 264
    number            go to state 197
    sign              go to state 198


state 320

   60 init_index_range: const ':' . const

    Y_CONSTANT  shift, and go to state 211
    '+'         shift, and go to state 192
    '-'         shift, and go to state 193

    const   go to state 378
    number  go to state 197
    sign    go to state 198


state 321

  236 label_stmt: Y_IDENT ':' opnl @35 xstmt .

    $default  reduce using rule 236 (label_stmt)


state 322

  214 while: Y_WHILE LP @26 expr RP . @27 opnl xstmt

    $default  reduce using rule 213 (@27)

    @27  go to state 379


state 323

  209 if_stat: Y_IF LP expr RP @24 . opnl xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 380
    NL    go to state 66


state 324

  218 for: Y_FOR LP opnl xassign ';' . opnl @28 xexpr ';' opnl @29 xassign RP opnl @30 stmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 381
    NL    go to state 66


state 325

  152 assign: ref equals . expr0
  153       | ref equals . ref

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 168
    expr0     go to state 250
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 251
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 326

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  224 switch: Y_SWITCH opnl LP opnl expr . opnl RP opnl @31 xstmt

    Y_NEWLINE   shift, and go to state 10
    YOP_OR      shift, and go to state 222
    YOP_AND     shift, and go to state 223
    YOP_NE      shift, and go to state 224
    YOP_EQ      shift, and go to state 225
    '<'         shift, and go to state 226
    '>'         shift, and go to state 227
    YOP_GE      shift, and go to state 228
    YOP_LE      shift, and go to state 229
    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236

    $default  reduce using rule 247 (opnl)

    opnl  go to state 382
    NL    go to state 66


state 327

  227 case: Y_CASE @32 const_expr_list ':' opnl . @33 xstmt

    $default  reduce using rule 226 (@33)

    @33  go to state 383


state 328

  245 const_expr_list: const_expr DELIM const_expr_list .

    $default  reduce using rule 245 (const_expr_list)


state 329

  229 default: Y_DEFAULT ':' opnl @34 xstmt .

    $default  reduce using rule 229 (default)


state 330

  118 scanarg: Y_IDENT .
  119        | Y_IDENT . DELIM scanarg

    ','  shift, and go to state 124

    $default  reduce using rule 118 (scanarg)

    DELIM  go to state 384


state 331

  104 expr1: Y_SCAN LP @8 scanarg . RP

    ')'  shift, and go to state 132

    RP  go to state 385


state 332

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  116 scanfmt: expr .

    YOP_OR      shift, and go to state 222
    YOP_AND     shift, and go to state 223
    YOP_NE      shift, and go to state 224
    YOP_EQ      shift, and go to state 225
    '<'         shift, and go to state 226
    '>'         shift, and go to state 227
    YOP_GE      shift, and go to state 228
    YOP_LE      shift, and go to state 229
    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236

    $default  reduce using rule 116 (scanfmt)


state 333

  106 expr1: Y_SCANF LP @9 scanfmt . DELIM scanarg RP

    ','  shift, and go to state 124

    DELIM  go to state 386


state 334

  108 expr1: Y_FSCAN LP @10 scanarg . RP

    ')'  shift, and go to state 132

    RP  go to state 387


state 335

  110 expr1: Y_FSCANF LP Y_IDENT DELIM . @11 scanfmt DELIM scanarg RP

    $default  reduce using rule 109 (@11)

    @11  go to state 388


state 336

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
   99      | expr YOP_OR opnl expr .
  100      | expr . YOP_AND opnl expr

    YOP_AND     shift, and go to state 223
    YOP_NE      shift, and go to state 224
    YOP_EQ      shift, and go to state 225
    '<'         shift, and go to state 226
    '>'         shift, and go to state 227
    YOP_GE      shift, and go to state 228
    YOP_LE      shift, and go to state 229
    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236

    $default  reduce using rule 99 (expr1)


state 337

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  100      | expr YOP_AND opnl expr .

    YOP_NE      shift, and go to state 224
    YOP_EQ      shift, and go to state 225
    '<'         shift, and go to state 226
    '>'         shift, and go to state 227
    YOP_GE      shift, and go to state 228
    YOP_LE      shift, and go to state 229
    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236

    $default  reduce using rule 100 (expr1)


state 338

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   98      | expr YOP_NE opnl expr .
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    '<'         shift, and go to state 226
    '>'         shift, and go to state 227
    YOP_GE      shift, and go to state 228
    YOP_LE      shift, and go to state 229
    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236

    $default  reduce using rule 98 (expr1)


state 339

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   97      | expr YOP_EQ opnl expr .
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    '<'         shift, and go to state 226
    '>'         shift, and go to state 227
    YOP_GE      shift, and go to state 228
    YOP_LE      shift, and go to state 229
    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236

    $default  reduce using rule 97 (expr1)


state 340

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   93      | expr '<' opnl expr .
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236

    $default  reduce using rule 93 (expr1)


state 341

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   94      | expr '>' opnl expr .
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236

    $default  reduce using rule 94 (expr1)


state 342

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   96      | expr YOP_GE opnl expr .
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236

    $default  reduce using rule 96 (expr1)


state 343

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   95      | expr YOP_LE opnl expr .
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236

    $default  reduce using rule 95 (expr1)


state 344

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   92      | expr YOP_CONCAT opnl expr .
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    '+'      shift, and go to state 231
    '-'      shift, and go to state 232
    '*'      shift, and go to state 233
    '/'      shift, and go to state 234
    '%'      shift, and go to state 235
    YOP_POW  shift, and go to state 236

    $default  reduce using rule 92 (expr1)


state 345

   86 expr1: expr . '+' opnl expr
   86      | expr '+' opnl expr .
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    '*'      shift, and go to state 233
    '/'      shift, and go to state 234
    '%'      shift, and go to state 235
    YOP_POW  shift, and go to state 236

    $default  reduce using rule 86 (expr1)


state 346

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   87      | expr '-' opnl expr .
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    '*'      shift, and go to state 233
    '/'      shift, and go to state 234
    '%'      shift, and go to state 235
    YOP_POW  shift, and go to state 236

    $default  reduce using rule 87 (expr1)


state 347

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   88      | expr '*' opnl expr .
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_POW  shift, and go to state 236

    $default  reduce using rule 88 (expr1)


state 348

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   89      | expr '/' opnl expr .
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_POW  shift, and go to state 236

    $default  reduce using rule 89 (expr1)


state 349

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   91      | expr '%' opnl expr .
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_POW  shift, and go to state 236

    $default  reduce using rule 91 (expr1)


state 350

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   90      | expr YOP_POW opnl expr .
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    $default  reduce using rule 90 (expr1)


state 351

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  121 intrarg: expr .

    YOP_OR      shift, and go to state 222
    YOP_AND     shift, and go to state 223
    YOP_NE      shift, and go to state 224
    YOP_EQ      shift, and go to state 225
    '<'         shift, and go to state 226
    '>'         shift, and go to state 227
    YOP_GE      shift, and go to state 228
    YOP_LE      shift, and go to state 229
    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236

    $default  reduce using rule 121 (intrarg)


state 352

  112 expr1: intrinsx LP @12 intrarg . RP
  122 intrarg: intrarg . DELIM expr

    ','  shift, and go to state 124
    ')'  shift, and go to state 132

    DELIM  go to state 389
    RP     go to state 390


state 353

  149 c_blk: '{' @13 s_list opnl @14 . '}'

    '}'  shift, and go to state 391


state 354

  168 pipe: Y_ALLPIPE opnl .

    $default  reduce using rule 168 (pipe)


state 355

  167 pipe: '|' opnl .

    $default  reduce using rule 167 (pipe)


state 356

  166 cmdpipe: cmdpipe pipe @17 . command

    Y_IDENT  shift, and go to state 392

    command  go to state 393
    tasknam  go to state 120


state 357

  202 iferr_else: iferr_stat Y_ELSE @23 opnl xstmt .

    $default  reduce using rule 202 (iferr_else)


state 358

  206 op_then: Y_THEN .

    $default  reduce using rule 206 (op_then)


state 359

  200 iferr_stat: iferr_tok @21 c_blk @22 op_then . opnl xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 394
    NL    go to state 66


state 360

  211 ifelse: if_stat Y_ELSE @25 opnl xstmt .

    $default  reduce using rule 211 (ifelse)


state 361

  251 ref: param @37 '[' index_list ']' .

    $default  reduce using rule 251 (ref)


state 362

  254 index_list: index @38 . DELIM index_list

    ','  shift, and go to state 124

    DELIM  go to state 395


state 363

  187 arg: Y_APPEND . file

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 168
    expr0     go to state 396
    expr1     go to state 158
    intrinsx  go to state 159
    file      go to state 397
    ref       go to state 160
    intrins   go to state 161
    param     go to state 398
    LP        go to state 162


state 364

  188 arg: Y_ALLAPPEND . file

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 168
    expr0     go to state 396
    expr1     go to state 158
    intrinsx  go to state 159
    file      go to state 399
    ref       go to state 160
    intrins   go to state 161
    param     go to state 398
    LP        go to state 162


state 365

  186 arg: Y_ALLREDIR . file

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 168
    expr0     go to state 396
    expr1     go to state 158
    intrinsx  go to state 159
    file      go to state 400
    ref       go to state 160
    intrins   go to state 161
    param     go to state 398
    LP        go to state 162


state 366

  189 arg: Y_GSREDIR . file

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 168
    expr0     go to state 396
    expr1     go to state 158
    intrinsx  go to state 159
    file      go to state 401
    ref       go to state 160
    intrins   go to state 161
    param     go to state 398
    LP        go to state 162


state 367

  184 arg: '<' . file

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 168
    expr0     go to state 396
    expr1     go to state 158
    intrinsx  go to state 159
    file      go to state 402
    ref       go to state 160
    intrins   go to state 161
    param     go to state 398
    LP        go to state 162


state 368

  185 arg: '>' . file

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 168
    expr0     go to state 396
    expr1     go to state 158
    intrinsx  go to state 159
    file      go to state 403
    ref       go to state 160
    intrins   go to state 161
    param     go to state 398
    LP        go to state 162


state 369

   77 expr: expr0 .
  178 arg: expr0 .

    Y_ALLPIPE  reduce using rule 178 (arg)
    Y_NEWLINE  reduce using rule 178 (arg)
    ';'        reduce using rule 178 (arg)
    '|'        reduce using rule 178 (arg)
    ','        reduce using rule 178 (arg)
    ')'        reduce using rule 178 (arg)
    $default   reduce using rule 77 (expr)


state 370

  171 command: tasknam @18 BARG @19 args . EARG

    ')'  shift, and go to state 132

    $default  reduce using rule 267 (EARG)

    EARG  go to state 404
    RP    go to state 405


state 371

  174 args: arglist .
  176 arglist: arglist . DELIM arg

    ','  shift, and go to state 124

    $default  reduce using rule 174 (args)

    DELIM  go to state 406


state 372

  175 arglist: arg .

    $default  reduce using rule 175 (arglist)


state 373

   78 expr: ref .
  179 arg: ref .
  180    | ref . '=' expr0
  181    | ref . '=' ref

    '='  shift, and go to state 407

    Y_ALLPIPE  reduce using rule 179 (arg)
    Y_NEWLINE  reduce using rule 179 (arg)
    ';'        reduce using rule 179 (arg)
    '|'        reduce using rule 179 (arg)
    ','        reduce using rule 179 (arg)
    ')'        reduce using rule 179 (arg)
    $default   reduce using rule 78 (expr)


state 374

  182 arg: param . '+'
  183    | param . '-'
  249 ref: param .
  251    | param . @37 '[' index_list ']'

    '+'  shift, and go to state 408
    '-'  shift, and go to state 409

    '+'       [reduce using rule 249 (ref)]
    '-'       [reduce using rule 249 (ref)]
    '['       reduce using rule 250 (@37)
    $default  reduce using rule 249 (ref)

    @37  go to state 186


state 375

  173 args: DELIM . @20 arglist

    $default  reduce using rule 172 (@20)

    @20  go to state 410


state 376

   64 init_elem: Y_CONSTANT LP const RP .

    $default  reduce using rule 64 (init_elem)


state 377

   58 init_index_list: init_index_list DELIM init_index_range .

    $default  reduce using rule 58 (init_index_list)


state 378

   60 init_index_range: const ':' const .

    $default  reduce using rule 60 (init_index_range)


state 379

  214 while: Y_WHILE LP @26 expr RP @27 . opnl xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 411
    NL    go to state 66


state 380

  209 if_stat: Y_IF LP expr RP @24 opnl . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 240 (@36)
    Y_IDENT    reduce using rule 240 (@36)
    Y_WHILE    reduce using rule 240 (@36)
    Y_IF       reduce using rule 240 (@36)
    Y_FOR      reduce using rule 240 (@36)
    Y_BREAK    reduce using rule 240 (@36)
    Y_NEXT     reduce using rule 240 (@36)
    Y_SWITCH   reduce using rule 240 (@36)
    Y_CASE     reduce using rule 240 (@36)
    Y_DEFAULT  reduce using rule 240 (@36)
    Y_RETURN   reduce using rule 240 (@36)
    Y_GOTO     reduce using rule 240 (@36)
    Y_IFERR    reduce using rule 240 (@36)
    Y_IFNOERR  reduce using rule 240 (@36)
    '='        reduce using rule 240 (@36)
    '{'        reduce using rule 240 (@36)
    ';'        reduce using rule 240 (@36)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 412
    @36            go to state 56


state 381

  218 for: Y_FOR LP opnl xassign ';' opnl . @28 xexpr ';' opnl @29 xassign RP opnl @30 stmt

    $default  reduce using rule 215 (@28)

    @28  go to state 413


state 382

  224 switch: Y_SWITCH opnl LP opnl expr opnl . RP opnl @31 xstmt

    ')'  shift, and go to state 132

    RP  go to state 414


state 383

  227 case: Y_CASE @32 const_expr_list ':' opnl @33 . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 240 (@36)
    Y_IDENT    reduce using rule 240 (@36)
    Y_WHILE    reduce using rule 240 (@36)
    Y_IF       reduce using rule 240 (@36)
    Y_FOR      reduce using rule 240 (@36)
    Y_BREAK    reduce using rule 240 (@36)
    Y_NEXT     reduce using rule 240 (@36)
    Y_SWITCH   reduce using rule 240 (@36)
    Y_CASE     reduce using rule 240 (@36)
    Y_DEFAULT  reduce using rule 240 (@36)
    Y_RETURN   reduce using rule 240 (@36)
    Y_GOTO     reduce using rule 240 (@36)
    Y_IFERR    reduce using rule 240 (@36)
    Y_IFNOERR  reduce using rule 240 (@36)
    '='        reduce using rule 240 (@36)
    '{'        reduce using rule 240 (@36)
    ';'        reduce using rule 240 (@36)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 415
    @36            go to state 56


state 384

  119 scanarg: Y_IDENT DELIM . scanarg

    Y_IDENT  shift, and go to state 330

    $default  reduce using rule 117 (scanarg)

    scanarg  go to state 416


state 385

  104 expr1: Y_SCAN LP @8 scanarg RP .

    $default  reduce using rule 104 (expr1)


state 386

  106 expr1: Y_SCANF LP @9 scanfmt DELIM . scanarg RP

    Y_IDENT  shift, and go to state 330

    $default  reduce using rule 117 (scanarg)

    scanarg  go to state 417


state 387

  108 expr1: Y_FSCAN LP @10 scanarg RP .

    $default  reduce using rule 108 (expr1)


state 388

  110 expr1: Y_FSCANF LP Y_IDENT DELIM @11 . scanfmt DELIM scanarg RP

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 332
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    scanfmt   go to state 418
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 389

  122 intrarg: intrarg DELIM . expr

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 419
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 390

  112 expr1: intrinsx LP @12 intrarg RP .

    $default  reduce using rule 112 (expr1)


state 391

  149 c_blk: '{' @13 s_list opnl @14 '}' .

    $default  reduce using rule 149 (c_blk)


state 392

  261 tasknam: Y_IDENT .

    $default  reduce using rule 261 (tasknam)


state 393

  166 cmdpipe: cmdpipe pipe @17 command .

    $default  reduce using rule 166 (cmdpipe)


state 394

  200 iferr_stat: iferr_tok @21 c_blk @22 op_then opnl . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 240 (@36)
    Y_IDENT    reduce using rule 240 (@36)
    Y_WHILE    reduce using rule 240 (@36)
    Y_IF       reduce using rule 240 (@36)
    Y_FOR      reduce using rule 240 (@36)
    Y_BREAK    reduce using rule 240 (@36)
    Y_NEXT     reduce using rule 240 (@36)
    Y_SWITCH   reduce using rule 240 (@36)
    Y_CASE     reduce using rule 240 (@36)
    Y_DEFAULT  reduce using rule 240 (@36)
    Y_RETURN   reduce using rule 240 (@36)
    Y_GOTO     reduce using rule 240 (@36)
    Y_IFERR    reduce using rule 240 (@36)
    Y_IFNOERR  reduce using rule 240 (@36)
    '='        reduce using rule 240 (@36)
    '{'        reduce using rule 240 (@36)
    ';'        reduce using rule 240 (@36)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 420
    @36            go to state 56


state 395

  254 index_list: index @38 DELIM . index_list

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 304
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    '*'         shift, and go to state 305
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr        go to state 168
    expr0       go to state 157
    expr1       go to state 306
    intrinsx    go to state 159
    ref         go to state 307
    index_list  go to state 421
    index       go to state 309
    intrins     go to state 161
    param       go to state 119
    LP          go to state 162


state 396

   77 expr: expr0 .
  190 file: expr0 .

    Y_ALLPIPE  reduce using rule 190 (file)
    Y_NEWLINE  reduce using rule 190 (file)
    ';'        reduce using rule 190 (file)
    '|'        reduce using rule 190 (file)
    ','        reduce using rule 190 (file)
    ')'        reduce using rule 190 (file)
    $default   reduce using rule 77 (expr)


state 397

  187 arg: Y_APPEND file .

    $default  reduce using rule 187 (arg)


state 398

  191 file: param .
  249 ref: param .
  251    | param . @37 '[' index_list ']'

    Y_ALLPIPE  reduce using rule 191 (file)
    Y_NEWLINE  reduce using rule 191 (file)
    ';'        reduce using rule 191 (file)
    '['        reduce using rule 250 (@37)
    '|'        reduce using rule 191 (file)
    ','        reduce using rule 191 (file)
    ')'        reduce using rule 191 (file)
    $default   reduce using rule 249 (ref)

    @37  go to state 186


state 399

  188 arg: Y_ALLAPPEND file .

    $default  reduce using rule 188 (arg)


state 400

  186 arg: Y_ALLREDIR file .

    $default  reduce using rule 186 (arg)


state 401

  189 arg: Y_GSREDIR file .

    $default  reduce using rule 189 (arg)


state 402

  184 arg: '<' file .

    $default  reduce using rule 184 (arg)


state 403

  185 arg: '>' file .

    $default  reduce using rule 185 (arg)


state 404

  171 command: tasknam @18 BARG @19 args EARG .

    $default  reduce using rule 171 (command)


state 405

  268 EARG: RP .

    $default  reduce using rule 268 (EARG)


state 406

  176 arglist: arglist DELIM . arg

    Y_SCAN       shift, and go to state 142
    Y_SCANF      shift, and go to state 143
    Y_FSCAN      shift, and go to state 144
    Y_FSCANF     shift, and go to state 145
    Y_APPEND     shift, and go to state 363
    Y_ALLAPPEND  shift, and go to state 364
    Y_ALLREDIR   shift, and go to state 365
    Y_GSREDIR    shift, and go to state 366
    Y_CONSTANT   shift, and go to state 146
    Y_IDENT      shift, and go to state 147
    Y_INT        shift, and go to state 148
    Y_REAL       shift, and go to state 149
    Y_GCUR       shift, and go to state 150
    Y_IMCUR      shift, and go to state 151
    Y_UKEY       shift, and go to state 152
    Y_PSET       shift, and go to state 153
    '<'          shift, and go to state 367
    '>'          shift, and go to state 368
    '-'          shift, and go to state 154
    YOP_NOT      shift, and go to state 155
    '('          shift, and go to state 49

    $default  reduce using rule 177 (arg)

    expr      go to state 168
    expr0     go to state 369
    expr1     go to state 158
    intrinsx  go to state 159
    arg       go to state 422
    ref       go to state 373
    intrins   go to state 161
    param     go to state 374
    LP        go to state 162


state 407

  180 arg: ref '=' . expr0
  181    | ref '=' . ref

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    expr      go to state 168
    expr0     go to state 423
    expr1     go to state 158
    intrinsx  go to state 159
    ref       go to state 424
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 408

  182 arg: param '+' .

    $default  reduce using rule 182 (arg)


state 409

  183 arg: param '-' .

    $default  reduce using rule 183 (arg)


state 410

  173 args: DELIM @20 . arglist

    Y_SCAN       shift, and go to state 142
    Y_SCANF      shift, and go to state 143
    Y_FSCAN      shift, and go to state 144
    Y_FSCANF     shift, and go to state 145
    Y_APPEND     shift, and go to state 363
    Y_ALLAPPEND  shift, and go to state 364
    Y_ALLREDIR   shift, and go to state 365
    Y_GSREDIR    shift, and go to state 366
    Y_CONSTANT   shift, and go to state 146
    Y_IDENT      shift, and go to state 147
    Y_INT        shift, and go to state 148
    Y_REAL       shift, and go to state 149
    Y_GCUR       shift, and go to state 150
    Y_IMCUR      shift, and go to state 151
    Y_UKEY       shift, and go to state 152
    Y_PSET       shift, and go to state 153
    '<'          shift, and go to state 367
    '>'          shift, and go to state 368
    '-'          shift, and go to state 154
    YOP_NOT      shift, and go to state 155
    '('          shift, and go to state 49

    $default  reduce using rule 177 (arg)

    expr      go to state 168
    expr0     go to state 369
    expr1     go to state 158
    intrinsx  go to state 159
    arglist   go to state 425
    arg       go to state 372
    ref       go to state 373
    intrins   go to state 161
    param     go to state 374
    LP        go to state 162


state 411

  214 while: Y_WHILE LP @26 expr RP @27 opnl . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 240 (@36)
    Y_IDENT    reduce using rule 240 (@36)
    Y_WHILE    reduce using rule 240 (@36)
    Y_IF       reduce using rule 240 (@36)
    Y_FOR      reduce using rule 240 (@36)
    Y_BREAK    reduce using rule 240 (@36)
    Y_NEXT     reduce using rule 240 (@36)
    Y_SWITCH   reduce using rule 240 (@36)
    Y_CASE     reduce using rule 240 (@36)
    Y_DEFAULT  reduce using rule 240 (@36)
    Y_RETURN   reduce using rule 240 (@36)
    Y_GOTO     reduce using rule 240 (@36)
    Y_IFERR    reduce using rule 240 (@36)
    Y_IFNOERR  reduce using rule 240 (@36)
    '='        reduce using rule 240 (@36)
    '{'        reduce using rule 240 (@36)
    ';'        reduce using rule 240 (@36)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 426
    @36            go to state 56


state 412

  209 if_stat: Y_IF LP expr RP @24 opnl xstmt .

    $default  reduce using rule 209 (if_stat)


state 413

  218 for: Y_FOR LP opnl xassign ';' opnl @28 . xexpr ';' opnl @29 xassign RP opnl @30 stmt

    Y_SCAN      shift, and go to state 142
    Y_SCANF     shift, and go to state 143
    Y_FSCAN     shift, and go to state 144
    Y_FSCANF    shift, and go to state 145
    Y_CONSTANT  shift, and go to state 146
    Y_IDENT     shift, and go to state 147
    Y_INT       shift, and go to state 148
    Y_REAL      shift, and go to state 149
    Y_GCUR      shift, and go to state 150
    Y_IMCUR     shift, and go to state 151
    Y_UKEY      shift, and go to state 152
    Y_PSET      shift, and go to state 153
    '-'         shift, and go to state 154
    YOP_NOT     shift, and go to state 155
    '('         shift, and go to state 49

    $default  reduce using rule 222 (xexpr)

    expr      go to state 427
    expr0     go to state 157
    expr1     go to state 158
    intrinsx  go to state 159
    xexpr     go to state 428
    ref       go to state 160
    intrins   go to state 161
    param     go to state 119
    LP        go to state 162


state 414

  224 switch: Y_SWITCH opnl LP opnl expr opnl RP . opnl @31 xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 429
    NL    go to state 66


state 415

  227 case: Y_CASE @32 const_expr_list ':' opnl @33 xstmt .

    $default  reduce using rule 227 (case)


state 416

  119 scanarg: Y_IDENT DELIM scanarg .

    $default  reduce using rule 119 (scanarg)


state 417

  106 expr1: Y_SCANF LP @9 scanfmt DELIM scanarg . RP

    ')'  shift, and go to state 132

    RP  go to state 430


state 418

  110 expr1: Y_FSCANF LP Y_IDENT DELIM @11 scanfmt . DELIM scanarg RP

    ','  shift, and go to state 124

    DELIM  go to state 431


state 419

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  122 intrarg: intrarg DELIM expr .

    YOP_OR      shift, and go to state 222
    YOP_AND     shift, and go to state 223
    YOP_NE      shift, and go to state 224
    YOP_EQ      shift, and go to state 225
    '<'         shift, and go to state 226
    '>'         shift, and go to state 227
    YOP_GE      shift, and go to state 228
    YOP_LE      shift, and go to state 229
    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236

    $default  reduce using rule 122 (intrarg)


state 420

  200 iferr_stat: iferr_tok @21 c_blk @22 op_then opnl xstmt .

    $default  reduce using rule 200 (iferr_stat)


state 421

  254 index_list: index @38 DELIM index_list .

    $default  reduce using rule 254 (index_list)


state 422

  176 arglist: arglist DELIM arg .

    $default  reduce using rule 176 (arglist)


state 423

   77 expr: expr0 .
  180 arg: ref '=' expr0 .

    Y_ALLPIPE  reduce using rule 180 (arg)
    Y_NEWLINE  reduce using rule 180 (arg)
    ';'        reduce using rule 180 (arg)
    '|'        reduce using rule 180 (arg)
    ','        reduce using rule 180 (arg)
    ')'        reduce using rule 180 (arg)
    $default   reduce using rule 77 (expr)


state 424

   78 expr: ref .
  181 arg: ref '=' ref .

    Y_ALLPIPE  reduce using rule 181 (arg)
    Y_NEWLINE  reduce using rule 181 (arg)
    ';'        reduce using rule 181 (arg)
    '|'        reduce using rule 181 (arg)
    ','        reduce using rule 181 (arg)
    ')'        reduce using rule 181 (arg)
    $default   reduce using rule 78 (expr)


state 425

  173 args: DELIM @20 arglist .
  176 arglist: arglist . DELIM arg

    ','  shift, and go to state 124

    $default  reduce using rule 173 (args)

    DELIM  go to state 406


state 426

  214 while: Y_WHILE LP @26 expr RP @27 opnl xstmt .

    $default  reduce using rule 214 (while)


state 427

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  221 xexpr: expr .

    YOP_OR      shift, and go to state 222
    YOP_AND     shift, and go to state 223
    YOP_NE      shift, and go to state 224
    YOP_EQ      shift, and go to state 225
    '<'         shift, and go to state 226
    '>'         shift, and go to state 227
    YOP_GE      shift, and go to state 228
    YOP_LE      shift, and go to state 229
    YOP_CONCAT  shift, and go to state 230
    '+'         shift, and go to state 231
    '-'         shift, and go to state 232
    '*'         shift, and go to state 233
    '/'         shift, and go to state 234
    '%'         shift, and go to state 235
    YOP_POW     shift, and go to state 236

    $default  reduce using rule 221 (xexpr)


state 428

  218 for: Y_FOR LP opnl xassign ';' opnl @28 xexpr . ';' opnl @29 xassign RP opnl @30 stmt

    ';'  shift, and go to state 432


state 429

  224 switch: Y_SWITCH opnl LP opnl expr opnl RP opnl . @31 xstmt

    $default  reduce using rule 223 (@31)

    @31  go to state 433


state 430

  106 expr1: Y_SCANF LP @9 scanfmt DELIM scanarg RP .

    $default  reduce using rule 106 (expr1)


state 431

  110 expr1: Y_FSCANF LP Y_IDENT DELIM @11 scanfmt DELIM . scanarg RP

    Y_IDENT  shift, and go to state 330

    $default  reduce using rule 117 (scanarg)

    scanarg  go to state 434


state 432

  218 for: Y_FOR LP opnl xassign ';' opnl @28 xexpr ';' . opnl @29 xassign RP opnl @30 stmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 435
    NL    go to state 66


state 433

  224 switch: Y_SWITCH opnl LP opnl expr opnl RP opnl @31 . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 240 (@36)
    Y_IDENT    reduce using rule 240 (@36)
    Y_WHILE    reduce using rule 240 (@36)
    Y_IF       reduce using rule 240 (@36)
    Y_FOR      reduce using rule 240 (@36)
    Y_BREAK    reduce using rule 240 (@36)
    Y_NEXT     reduce using rule 240 (@36)
    Y_SWITCH   reduce using rule 240 (@36)
    Y_CASE     reduce using rule 240 (@36)
    Y_DEFAULT  reduce using rule 240 (@36)
    Y_RETURN   reduce using rule 240 (@36)
    Y_GOTO     reduce using rule 240 (@36)
    Y_IFERR    reduce using rule 240 (@36)
    Y_IFNOERR  reduce using rule 240 (@36)
    '='        reduce using rule 240 (@36)
    '{'        reduce using rule 240 (@36)
    ';'        reduce using rule 240 (@36)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 436
    @36            go to state 56


state 434

  110 expr1: Y_FSCANF LP Y_IDENT DELIM @11 scanfmt DELIM scanarg . RP

    ')'  shift, and go to state 132

    RP  go to state 437


state 435

  218 for: Y_FOR LP opnl xassign ';' opnl @28 xexpr ';' opnl . @29 xassign RP opnl @30 stmt

    $default  reduce using rule 216 (@29)

    @29  go to state 438


state 436

  224 switch: Y_SWITCH opnl LP opnl expr opnl RP opnl @31 xstmt .

    $default  reduce using rule 224 (switch)


state 437

  110 expr1: Y_FSCANF LP Y_IDENT DELIM @11 scanfmt DELIM scanarg RP .

    $default  reduce using rule 110 (expr1)


state 438

  218 for: Y_FOR LP opnl xassign ';' opnl @28 xexpr ';' opnl @29 . xassign RP opnl @30 stmt

    Y_IDENT  shift, and go to state 37

    $default  reduce using rule 220 (xassign)

    assign   go to state 268
    xassign  go to state 439
    ref      go to state 270
    param    go to state 119


state 439

  218 for: Y_FOR LP opnl xassign ';' opnl @28 xexpr ';' opnl @29 xassign . RP opnl @30 stmt

    ')'  shift, and go to state 132

    RP  go to state 440


state 440

  218 for: Y_FOR LP opnl xassign ';' opnl @28 xexpr ';' opnl @29 xassign RP . opnl @30 stmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 247 (opnl)

    opnl  go to state 441
    NL    go to state 66


state 441

  218 for: Y_FOR LP opnl xassign ';' opnl @28 xexpr ';' opnl @29 xassign RP opnl . @30 stmt

    $default  reduce using rule 217 (@30)

    @30  go to state 442


state 442

  218 for: Y_FOR LP opnl xassign ';' opnl @28 xexpr ';' opnl @29 xassign RP opnl @30 . stmt

    Y_OSESC    shift, and go to state 72
    Y_IDENT    shift, and go to state 73
    Y_WHILE    shift, and go to state 74
    Y_IF       shift, and go to state 75
    Y_FOR      shift, and go to state 76
    Y_BREAK    shift, and go to state 77
    Y_NEXT     shift, and go to state 78
    Y_SWITCH   shift, and go to state 79
    Y_CASE     shift, and go to state 80
    Y_DEFAULT  shift, and go to state 81
    Y_RETURN   shift, and go to state 82
    Y_GOTO     shift, and go to state 83
    Y_IFERR    shift, and go to state 84
    Y_IFNOERR  shift, and go to state 85
    '='        shift, and go to state 86
    '{'        shift, and go to state 87
    ';'        shift, and go to state 88

    stmt        go to state 443
    c_stmt      go to state 90
    c_blk       go to state 91
    assign      go to state 92
    equals      go to state 93
    cmdlist     go to state 94
    command     go to state 95
    immed       go to state 96
    inspect     go to state 97
    osesc       go to state 98
    popstk      go to state 99
    iferr       go to state 100
    iferr_stat  go to state 101
    iferr_else  go to state 102
    iferr_tok   go to state 103
    if          go to state 104
    if_stat     go to state 105
    ifelse      go to state 106
    while       go to state 107
    for         go to state 108
    switch      go to state 109
    case        go to state 110
    default     go to state 111
    next        go to state 112
    break       go to state 113
    return      go to state 114
    label_stmt  go to state 115
    goto        go to state 116
    nullstmt    go to state 117
    ref         go to state 118
    param       go to state 119
    tasknam     go to state 120


state 443

  218 for: Y_FOR LP opnl xassign ';' opnl @28 xexpr ';' opnl @29 xassign RP opnl @30 stmt .

    $default  reduce using rule 218 (for)
