# Make IMARITH.

$checkout libpkg.a pkg$images/
$update   libpkg.a
$checkin  libpkg.a pkg$images/
$exit

generic:
	$set	GEN = "$$generic -k"

	$ifolder (imexpr.x, imexpr.gx)
	    $(GEN) imexpr.gx -o imexpr.x $endif

        $ifolder (generic/icaclip.x, icaclip.gx)
	    $(GEN) icaclip.gx -o generic/icaclip.x $endif
        $ifolder (generic/icaverage.x, icaverage.gx)
	    $(GEN) icaverage.gx -o generic/icaverage.x $endif
        $ifolder (generic/iccclip.x, iccclip.gx)
	    $(GEN) iccclip.gx -o generic/iccclip.x $endif
        $ifolder (generic/icgdata.x, icgdata.gx)
	    $(GEN) icgdata.gx -o generic/icgdata.x $endif
        $ifolder (generic/icgrow.x, icgrow.gx)
	    $(GEN) icgrow.gx -o generic/icgrow.x $endif
        $ifolder (generic/icmedian.x, icmedian.gx)
	    $(GEN) icmedian.gx -o generic/icmedian.x $endif
        $ifolder (generic/icmm.x, icmm.gx)
	    $(GEN) icmm.gx -o generic/icmm.x $endif
        $ifolder (generic/icombine.x, icombine.gx)
	    $(GEN) icombine.gx -o generic/icombine.x $endif
        $ifolder (generic/icpclip.x, icpclip.gx)
	    $(GEN) icpclip.gx -o generic/icpclip.x $endif
        $ifolder (generic/icsclip.x, icsclip.gx)
	    $(GEN) icsclip.gx -o generic/icsclip.x $endif
        $ifolder (generic/icsigma.x, icsigma.gx)
	    $(GEN) icsigma.gx -o generic/icsigma.x $endif
        $ifolder (generic/icsort.x, icsort.gx)
	    $(GEN) icsort.gx -o generic/icsort.x $endif
        $ifolder (generic/icstat.x, icstat.gx)
	    $(GEN) icstat.gx -o generic/icstat.x $endif

        $ifolder (generic/imsum.x, imsum.gx)
	    $(GEN) imsum.gx  -o generic/imsum.x  $endif
        $ifolder (generic/imaadd.x, imaadd.gx)
	    (GEN) imaadd.gx -o generic/imaadd.x $endif
        $ifolder (generic/imadiv.x, imadiv.gx)
	    (GEN) imadiv.gx -o generic/imadiv.x $endif
        $ifolder (generic/imamax.x, imamax.gx)
	    (GEN) imamax.gx -o generic/imamax.x $endif
        $ifolder (generic/imamin.x, imamin.gx)
	    (GEN) imamin.gx -o generic/imamin.x $endif
        $ifolder (generic/imamul.x, imamul.gx)
	    (GEN) imamul.gx -o generic/imamul.x $endif
        $ifolder (generic/imasub.x, imasub.gx)
	    (GEN) imasub.gx -o generic/imasub.x $endif
        $ifolder (generic/imanl.x, imanl.gx)
	    (GEN) imanl.gx -o generic/imanl.x $endif
	;

libpkg.a:
	$ifeq (USE_GENERIC, yes) $call generic $endif
	@generic

	iclog.x		icmask.com icombine.com icombine.h <imhdr.h> <imset.h>\
			<mach.h>
	icmask.x	icmask.com icombine.com icombine.h <imhdr.h> <pmset.h>
	icscale.x	icombine.com icombine.h <error.h> <imhdr.h> <imset.h>
	icsection.x	<ctype.h>
	icsetout.x	icombine.com <imhdr.h>
	gettok.x	<error.h> <ctype.h> <fset.h> gettok.h
	imexpr.x	<ctotok.h> <imhdr.h> <ctype.h> <mach.h> <imset.h>\
			<fset.h> <lexnum.h> <evvexpr.h> gettok.h
	t_imarith.x	<imhdr.h> <error.h> <lexnum.h>
	t_imcombine.x	icombine.com icombine.h <error.h> <imhdr.h> <mach.h>
	t_imdivide.x	<imhdr.h>
	t_imsum.x	<imhdr.h>
	;
