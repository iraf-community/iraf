data	(font[i], i=1,7)      / 00000B,
				00000B,
				00000B,
				00000B,
				00000B,
				00000B,
				00000B /    # (space)

data	(font[i], i=8,14)     / 00100B,
				00100B,
				00100B,
				00100B,
				00100B,
				00000B,
				00100B /    # !

data	(font[i], i=15,21)    / 01010B,
				01010B,
				01010B,
				00000B,
				00000B,
				00000B,
				00000B /    # "

data	(font[i], i=22,28)    / 01010B,
				01010B,
				11111B,
				01010B,
				11111B,
				01010B,
				01010B /    # #

data	(font[i], i=29,35)    / 00100B,
				01111B,
				10100B,
				01110B,
				00101B,
				11110B,
				00100B /    # $

data	(font[i], i=36,42)    / 11000B,
				11001B,
				00010B,
				00100B,
				01000B,
				10011B,
				00011B /    # %

data	(font[i], i=43,49)    / 01000B,
				10100B,
				10100B,
				01000B,
				10101B,
				10010B,
				01101B /    # &

data	(font[i], i=50,56)    / 00100B,
				00100B,
				00100B,
				00000B,
				00000B,
				00000B,
				00000B /    # '

data	(font[i], i=57,63)    / 00100B,
				01000B,
				10000B,
				10000B,
				10000B,
				01000B,
				00100B /    # (

data	(font[i], i=64,70)    / 00100B,
				00010B,
				00001B,
				00001B,
				00001B,
				00010B,
				00100B /    # )

data	(font[i], i=71,77)    / 00100B,
				10101B,
				01110B,
				00100B,
				01110B,
				10101B,
				00100B /    # *

data	(font[i], i=78,84)    / 00000B,
				00100B,
				00100B,
				11111B,
				00100B,
				00100B,
				00000B /    # +

data	(font[i], i=85,91)    / 00000B,
				00000B,
				00000B,
				00000B,
				00100B,
				00100B,
				01000B /    # ,

data	(font[i], i=92,98)    / 00000B,
				00000B,
				00000B,
				11111B,
				00000B,
				00000B,
				00000B /    # -

data	(font[i], i=99,105)   / 00000B,
				00000B,
				00000B,
				00000B,
				00000B,
				00000B,
				00100B /    # .

data	(font[i], i=106,112)  / 00000B,
				00001B,
				00010B,
				00100B,
				01000B,
				10000B,
				00000B /    # /

data	(font[i], i=113,119)  / 01110B,
				10001B,
				10011B,
				10101B,
				11001B,
				10001B,
				01110B /    # 0

data	(font[i], i=120,126)  / 00100B,
				01100B,
				00100B,
				00100B,
				00100B,
				00100B,
				01110B /    # 1

data	(font[i], i=127,133)  / 01110B,
				10001B,
				00001B,
				00110B,
				01000B,
				10000B,
				11111B /    # 2

data	(font[i], i=134,140)  / 11111B,
				00001B,
				00010B,
				00110B,
				00001B,
				10001B,
				11111B /    # 3

data	(font[i], i=141,147)  / 00010B,
				00110B,
				01010B,
				11111B,
				00010B,
				00010B,
				00010B /    # 4

data	(font[i], i=148,154)  / 11111B,
				10000B,
				11110B,
				00001B,
				00001B,
				10001B,
				01110B /    # 5

data	(font[i], i=155,161)  / 00111B,
				01000B,
				10000B,
				11110B,
				10001B,
				10001B,
				01110B /    # 6

data	(font[i], i=162,168)  / 11111B,
				00001B,
				00010B,
				00100B,
				01000B,
				01000B,
				01000B /    # 7

data	(font[i], i=169,175)  / 01110B,
				10001B,
				10001B,
				01110B,
				10001B,
				10001B,
				01110B /    # 8

data	(font[i], i=176,182)  / 01110B,
				10001B,
				10001B,
				01111B,
				00001B,
				00010B,
				11100B /    # 9

data	(font[i], i=183,189)  / 00000B,
				00000B,
				00100B,
				00000B,
				00100B,
				00000B,
				00000B /    # :

data	(font[i], i=190,196)  / 00000B,
				00000B,
				00100B,
				00000B,
				00100B,
				00100B,
				01000B /    # ;

data	(font[i], i=197,203)  / 00010B,
				00100B,
				01000B,
				10000B,
				01000B,
				00100B,
				00010B /    # <

data	(font[i], i=204,210)  / 00000B,
				00000B,
				11111B,
				00000B,
				11111B,
				00000B,
				00000B /    # =

data	(font[i], i=211,217)  / 01000B,
				00100B,
				00010B,
				00001B,
				00010B,
				00100B,
				01000B /    # >

data	(font[i], i=218,224)  / 01110B,
				10001B,
				00010B,
				00100B,
				00100B,
				00000B,
				00100B /    # ?

data	(font[i], i=225,231)  / 01110B,
				10001B,
				10101B,
				10111B,
				10110B,
				10000B,
				01111B /    # @

data	(font[i], i=232,238)  / 00100B,
				01010B,
				10001B,
				10001B,
				11111B,
				10001B,
				10001B /    # A

data	(font[i], i=239,245)  / 11110B,
				10001B,
				10001B,
				11110B,
				10001B,
				10001B,
				11110B /    # B

data	(font[i], i=246,252)  / 01110B,
				10001B,
				10000B,
				10000B,
				10000B,
				10001B,
				01110B /    # C

data	(font[i], i=253,259)  / 11110B,
				10001B,
				10001B,
				10001B,
				10001B,
				10001B,
				11110B /    # D

data	(font[i], i=260,266)  / 11111B,
				10000B,
				10000B,
				11110B,
				10000B,
				10000B,
				11111B /    # E

data	(font[i], i=267,273)  / 11111B,
				10000B,
				10000B,
				11110B,
				10000B,
				10000B,
				10000B /    # F

data	(font[i], i=274,280)  / 01111B,
				10000B,
				10000B,
				10000B,
				10011B,
				10001B,
				01111B /    # G

data	(font[i], i=281,287)  / 10001B,
				10001B,
				10001B,
				11111B,
				10001B,
				10001B,
				10001B /    # H

data	(font[i], i=288,294)  / 01110B,
				00100B,
				00100B,
				00100B,
				00100B,
				00100B,
				01110B /    # I

data	(font[i], i=295,301)  / 00001B,
				00001B,
				00001B,
				00001B,
				00001B,
				10001B,
				01110B /    # J

data	(font[i], i=302,308)  / 10001B,
				10010B,
				10100B,
				11000B,
				10100B,
				10010B,
				10001B /    # K

data	(font[i], i=309,315)  / 10000B,
				10000B,
				10000B,
				10000B,
				10000B,
				10000B,
				11111B /    # L

data	(font[i], i=316,322)  / 10001B,
				11011B,
				10101B,
				10101B,
				10001B,
				10001B,
				10001B /    # M

data	(font[i], i=323,329)  / 10001B,
				10001B,
				11001B,
				10101B,
				10011B,
				10001B,
				10001B /    # N

data	(font[i], i=330,336)  / 01110B,
				10001B,
				10001B,
				10001B,
				10001B,
				10001B,
				01110B /    # O

data	(font[i], i=337,343)  / 11110B,
				10001B,
				10001B,
				11110B,
				10000B,
				10000B,
				10000B /    # P

data	(font[i], i=344,350)  / 01110B,
				10001B,
				10001B,
				10001B,
				10101B,
				10010B,
				01101B /    # Q

data	(font[i], i=351,357)  / 11110B,
				10001B,
				10001B,
				11110B,
				10100B,
				10010B,
				10001B /    # R

data	(font[i], i=358,364)  / 01110B,
				10001B,
				10000B,
				01110B,
				00001B,
				10001B,
				01110B /    # S

data	(font[i], i=365,371)  / 11111B,
				00100B,
				00100B,
				00100B,
				00100B,
				00100B,
				00100B /    # T

data	(font[i], i=372,378)  / 10001B,
				10001B,
				10001B,
				10001B,
				10001B,
				10001B,
				01110B /    # U

data	(font[i], i=379,385)  / 10001B,
				10001B,
				10001B,
				10001B,
				10001B,
				01010B,
				00100B /    # V

data	(font[i], i=386,392)  / 10001B,
				10001B,
				10001B,
				10101B,
				10101B,
				11011B,
				10001B /    # W

data	(font[i], i=393,399)  / 10001B,
				10001B,
				01010B,
				00100B,
				01010B,
				10001B,
				10001B /    # X

data	(font[i], i=400,406)  / 10001B,
				10001B,
				01010B,
				00100B,
				00100B,
				00100B,
				00100B /    # Y

data	(font[i], i=407,413)  / 11111B,
				00001B,
				00010B,
				00100B,
				01000B,
				10000B,
				11111B /    # Z

data	(font[i], i=414,420)  / 11111B,
				11000B,
				11000B,
				11000B,
				11000B,
				11000B,
				11111B /    # [

data	(font[i], i=421,427)  / 00000B,
				10000B,
				01000B,
				00100B,
				00010B,
				00001B,
				00000B /    # \

data	(font[i], i=428,434)  / 11111B,
				00011B,
				00011B,
				00011B,
				00011B,
				00011B,
				11111B /    # ]

data	(font[i], i=435,441)  / 00000B,
				00000B,
				00100B,
				01010B,
				10001B,
				00000B,
				00000B /    # ^

data	(font[i], i=442,448)  / 00000B,
				00000B,
				00000B,
				00000B,
				00000B,
				00000B,
				11111B /    # _

data	(font[i], i=449,455)  / 11111B,
				10001B,
				11011B,
				10101B,
				11011B,
				10001B,
				11111B /    # (unknown)
