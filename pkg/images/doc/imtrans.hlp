.help imtranspose Aug84 images
.ih
NAME
imtranspose -- transpose two dimensional images
.ih
USAGE	
.nf
imtranspose input output
.fi
.ih
PARAMETERS
.ls input
Images to be transposed.
.le
.ls output
Output transposed images.  The number of output images must be the same as the
number of input images.
.le
.ls len_blk = 512
The one dimensional length of the transpose blocks.
.le
.ih
DESCRIPTION
Each of the input images, which may be given as a general image template
including sections, is transposed to the corresponding output image list,
which may also be given as an image template with sections ignored.
The input and output images are paired in order and, thus, the number of
input and output images must be the same.  If an input image name (without
an image section) and an output image name are the same then the input
image is transposed to a temporary file which replaces the input image
when the copy is successfully concluded.
Note that this is the only case where clobber checking is bypassed; that
is, if an output image name is not equal to the input image name and if a
file already exists with the output image name then a clobber error will
occur if clobber checking is in effect.

The transpose is done in square blocks whose dimensions are \fIlen_blk\fR.
By using a flip in the section for the input image with the transpose a
rotation of the image may be produced.
.ih
EXAMPLES
1. To transpose an image:

	cl> imtranspose image1 image2

2. To rotate an image 90 degrees:

	cl> imtranspose image1[*,-*] image2

3. To transpose a set of images to form the new images trans001, trans002, and
trans003:

	cl> imtranspose images* trans001,trans002,trans003

4. To transpose a set of images in place:

	cl> imtranspose frame* frame*

5. To rotate an image in place:

	cl> imtranspose image[*,-*] image
.ih
BUGS

It is currently not legal to transpose images with a wcs type of
MULTISPEC.
.ih
SEE ALSO
.endhelp
