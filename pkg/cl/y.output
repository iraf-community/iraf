State 0 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce
State 89 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 179 conflicts: 1 shift/reduce
State 250 conflicts: 1 shift/reduce
State 298 conflicts: 1 shift/reduce
State 359 conflicts: 2 shift/reduce


Grammar

    0 $accept: block $end

    1 block: /* empty */
    2      | '.' NL

    3 @1: /* empty */

    4 block: block @1 debug xstmt
    5      | script_params
    6      | script_body
    7      | error NL

    8 debug: /* empty */

    9 @2: /* empty */

   10 debug: D_XXX EOST @2 debug

   11 D_XXX: D_D
   12      | D_PEEK Y_CONSTANT
   13      | '~'

   14 script_params: proc_stmt var_decls begin_stmt

   15 @3: /* empty */

   16 script_body: begin_stmt @3 s_list opnl end_stmt

   17 @4: /* empty */

   18 proc_stmt: Y_PROCEDURE @4 param bparam_list EOST

   19 bparam_list: /* empty */
   20            | LP param_list RP

   21 param_list: /* empty */
   22           | xparam_list

   23 xparam_list: param
   24            | xparam_list DELIM param

   25 var_decls: /* empty */
   26          | var_decl_block

   27 var_decl_block: var_decl_line
   28               | var_decl_block var_decl_line

   29 var_decl_line: EOST
   30              | var_decl_stmt
   31              | error NL

   32 @5: /* empty */

   33 var_decl_stmt: typedefs @5 var_decl_list EOST

   34 typedefs: Y_BOOL
   35         | Y_STRING
   36         | Y_REAL
   37         | Y_FILE
   38         | Y_GCUR
   39         | Y_IMCUR
   40         | Y_UKEY
   41         | Y_PSET
   42         | Y_INT
   43         | Y_STRUCT

   44 var_decl_list: var_decl_plus
   45              | var_decl_plus DELIM var_decl_list

   46 var_decl_plus: var_decl
   47              | var_decl '{' options_list ';' '}'

   48 var_decl: var_def

   49 @6: /* empty */

   50 var_decl: var_def '=' @6 init_list

   51 var_def: var_name

   52 @7: /* empty */

   53 var_def: var_name @7 '[' init_index_list ']'

   54 var_name: param
   55         | '*' param

   56 init_index_list: /* empty */
   57                | init_index_range
   58                | init_index_list DELIM init_index_range

   59 init_index_range: const
   60                 | const ':' const

   61 init_list: init_elem
   62          | init_list DELIM init_elem

   63 init_elem: const
   64          | Y_CONSTANT LP const RP

   65 const: Y_CONSTANT
   66      | number

   67 number: sign Y_CONSTANT

   68 sign: '+'
   69     | '-'

   70 options_list: init_list DELIM options
   71             | init_list
   72             | options

   73 options: option
   74        | options DELIM option

   75 option: Y_IDENT '=' const

   76 begin_stmt: Y_BEGIN NL

   77 expr: expr0
   78     | ref

   79 expr0: expr1
   80      | Y_CONSTANT
   81      | Y_GCUR
   82      | Y_IMCUR
   83      | Y_UKEY
   84      | Y_PSET

   85 expr1: LP expr RP
   86      | expr '+' opnl expr
   87      | expr '-' opnl expr
   88      | expr '*' opnl expr
   89      | expr '/' opnl expr
   90      | expr YOP_POW opnl expr
   91      | expr '%' opnl expr
   92      | expr YOP_CONCAT opnl expr
   93      | expr '<' opnl expr
   94      | expr '>' opnl expr
   95      | expr YOP_LE opnl expr
   96      | expr YOP_GE opnl expr
   97      | expr YOP_EQ opnl expr
   98      | expr YOP_NE opnl expr
   99      | expr YOP_OR opnl expr
  100      | expr YOP_AND opnl expr
  101      | YOP_NOT expr
  102      | '-' expr

  103 @8: /* empty */

  104 expr1: Y_SCAN LP @8 scanarg RP

  105 @9: /* empty */

  106 expr1: Y_SCANF LP @9 scanfmt DELIM scanarg RP

  107 @10: /* empty */

  108 expr1: Y_FSCAN LP @10 scanarg RP

  109 @11: /* empty */

  110 expr1: Y_FSCANF LP Y_IDENT DELIM @11 scanfmt DELIM scanarg RP

  111 @12: /* empty */

  112 expr1: intrinsx LP @12 intrarg RP

  113 intrinsx: intrins
  114         | Y_INT
  115         | Y_REAL

  116 scanfmt: expr

  117 scanarg: /* empty */
  118        | Y_IDENT
  119        | Y_IDENT DELIM scanarg

  120 intrarg: /* empty */
  121        | expr
  122        | intrarg DELIM expr

  123 stmt: c_stmt
  124     | assign EOST
  125     | cmdlist EOST
  126     | immed EOST
  127     | inspect EOST
  128     | osesc EOST
  129     | popstk EOST
  130     | if
  131     | ifelse
  132     | while
  133     | for
  134     | switch
  135     | case
  136     | default
  137     | next EOST
  138     | break EOST
  139     | goto EOST
  140     | return EOST
  141     | label_stmt
  142     | nullstmt

  143 c_stmt: c_blk
  144       | c_blk NL

  145 @13: /* empty */

  146 @14: /* empty */

  147 c_blk: '{' @13 s_list opnl @14 '}'

  148 s_list: /* empty */
  149       | s_list opnl xstmt

  150 assign: ref equals expr0
  151       | ref equals ref

  152 @15: /* empty */

  153 assign: ref @15 assign_oper expr

  154 equals: '='

  155 assign_oper: YOP_AOADD
  156            | YOP_AOSUB
  157            | YOP_AOMUL
  158            | YOP_AODIV
  159            | YOP_AOCAT

  160 @16: /* empty */

  161 cmdlist: command @16 cmdpipe

  162 cmdpipe: /* empty */

  163 @17: /* empty */

  164 cmdpipe: cmdpipe pipe @17 command

  165 pipe: '|' opnl
  166     | Y_ALLPIPE opnl

  167 @18: /* empty */

  168 @19: /* empty */

  169 command: tasknam @18 BARG @19 args EARG

  170 @20: /* empty */

  171 args: DELIM @20 arglist
  172     | arglist

  173 arglist: arg
  174        | arglist DELIM arg

  175 arg: /* empty */
  176    | expr0
  177    | ref
  178    | ref '=' expr0
  179    | ref '=' ref
  180    | param '+'
  181    | param '-'
  182    | '<' file
  183    | '>' file
  184    | Y_ALLREDIR file
  185    | Y_APPEND file
  186    | Y_ALLAPPEND file
  187    | Y_GSREDIR file

  188 file: expr0
  189     | param

  190 immed: equals expr0
  191      | equals ref

  192 inspect: ref equals

  193 osesc: Y_OSESC

  194 popstk: equals

  195 if: if_stat

  196 @21: /* empty */

  197 if_stat: Y_IF LP expr RP @21 opnl xstmt

  198 @22: /* empty */

  199 ifelse: if_stat Y_ELSE @22 opnl xstmt

  200 @23: /* empty */

  201 @24: /* empty */

  202 while: Y_WHILE LP @23 expr RP @24 opnl xstmt

  203 @25: /* empty */

  204 @26: /* empty */

  205 @27: /* empty */

  206 for: Y_FOR LP opnl xassign ';' opnl @25 xexpr ';' opnl @26 xassign RP opnl @27 stmt

  207 xassign: assign
  208        | /* empty */

  209 xexpr: expr
  210      | /* empty */

  211 @28: /* empty */

  212 switch: Y_SWITCH opnl LP opnl expr opnl RP opnl @28 xstmt

  213 @29: /* empty */

  214 @30: /* empty */

  215 case: Y_CASE @29 const_expr_list ':' opnl @30 xstmt

  216 @31: /* empty */

  217 default: Y_DEFAULT ':' opnl @31 xstmt

  218 next: Y_NEXT

  219 break: Y_BREAK

  220 return: Y_RETURN
  221       | Y_RETURN expr

  222 end_stmt: Y_END NL

  223 @32: /* empty */

  224 label_stmt: Y_IDENT ':' opnl @32 xstmt

  225 goto: Y_GOTO Y_IDENT

  226 nullstmt: ';'
  227         | ';' NL

  228 @33: /* empty */

  229 xstmt: @33 stmt
  230      | var_decl_stmt
  231      | error NL

  232 const_expr_list: const_expr
  233                | const_expr DELIM const_expr_list

  234 const_expr: Y_CONSTANT

  235 opnl: /* empty */
  236     | NL

  237 ref: param

  238 @34: /* empty */

  239 ref: param @34 '[' index_list ']'

  240 index_list: index

  241 @35: /* empty */

  242 index_list: index @35 DELIM index_list

  243 index: expr1
  244      | ref
  245      | '*'
  246      | Y_CONSTANT

  247 intrins: Y_IDENT

  248 param: Y_IDENT

  249 tasknam: Y_IDENT

  250 EOST: NL
  251     | ';'

  252 DELIM: ','

  253 BARG: /* empty */
  254     | LP

  255 EARG: /* empty */
  256     | RP

  257 LP: '('

  258 RP: ')'

  259 NL: Y_NEWLINE


Terminals, with rules where they appear

$end (0) 0
'%' (37) 91
'(' (40) 257
')' (41) 258
'*' (42) 55 88 245
'+' (43) 68 86 180
',' (44) 252
'-' (45) 69 87 102 181
'.' (46) 2
'/' (47) 89
':' (58) 60 215 217 224
';' (59) 47 206 226 227 251
'<' (60) 93 182
'=' (61) 50 75 154 178 179
'>' (62) 94 183
'[' (91) 53 239
']' (93) 53 239
'{' (123) 47 147
'|' (124) 165
'}' (125) 47 147
'~' (126) 13
error (256) 7 31 231
Y_SCAN (258) 104
Y_SCANF (259) 106
Y_FSCAN (260) 108
Y_FSCANF (261) 110
Y_OSESC (262) 193
Y_APPEND (263) 185
Y_ALLAPPEND (264) 186
Y_ALLREDIR (265) 184
Y_GSREDIR (266) 187
Y_ALLPIPE (267) 166
D_D (268) 11
D_PEEK (269) 12
Y_NEWLINE (270) 259
Y_CONSTANT (271) 12 64 65 67 80 234 246
Y_IDENT (272) 75 110 118 119 224 225 247 248 249
Y_WHILE (273) 202
Y_IF (274) 197
Y_ELSE (275) 199
Y_FOR (276) 206
Y_BREAK (277) 219
Y_NEXT (278) 218
Y_SWITCH (279) 212
Y_CASE (280) 215
Y_DEFAULT (281) 217
Y_RETURN (282) 220 221
Y_GOTO (283) 225
Y_PROCEDURE (284) 18
Y_BEGIN (285) 76
Y_END (286) 222
Y_BOOL (287) 34
Y_INT (288) 42 114
Y_REAL (289) 36 115
Y_STRING (290) 35
Y_FILE (291) 37
Y_STRUCT (292) 43
Y_GCUR (293) 38 81
Y_IMCUR (294) 39 82
Y_UKEY (295) 40 83
Y_PSET (296) 41 84
YOP_AOCAT (297) 159
YOP_AODIV (298) 158
YOP_AOMUL (299) 157
YOP_AOSUB (300) 156
YOP_AOADD (301) 155
YOP_OR (302) 99
YOP_AND (303) 100
YOP_NE (304) 98
YOP_EQ (305) 97
YOP_GE (306) 96
YOP_LE (307) 95
YOP_CONCAT (308) 92
UMINUS (309)
YOP_NOT (310) 101
YOP_POW (311) 90


Nonterminals, with rules where they appear

$accept (77)
    on left: 0
block (78)
    on left: 1 2 4 5 6 7, on right: 0 4
@1 (79)
    on left: 3, on right: 4
debug (80)
    on left: 8 10, on right: 4 10
@2 (81)
    on left: 9, on right: 10
D_XXX (82)
    on left: 11 12 13, on right: 10
script_params (83)
    on left: 14, on right: 5
script_body (84)
    on left: 16, on right: 6
@3 (85)
    on left: 15, on right: 16
proc_stmt (86)
    on left: 18, on right: 14
@4 (87)
    on left: 17, on right: 18
bparam_list (88)
    on left: 19 20, on right: 18
param_list (89)
    on left: 21 22, on right: 20
xparam_list (90)
    on left: 23 24, on right: 22 24
var_decls (91)
    on left: 25 26, on right: 14
var_decl_block (92)
    on left: 27 28, on right: 26 28
var_decl_line (93)
    on left: 29 30 31, on right: 27 28
var_decl_stmt (94)
    on left: 33, on right: 30 230
@5 (95)
    on left: 32, on right: 33
typedefs (96)
    on left: 34 35 36 37 38 39 40 41 42 43, on right: 33
var_decl_list (97)
    on left: 44 45, on right: 33 45
var_decl_plus (98)
    on left: 46 47, on right: 44 45
var_decl (99)
    on left: 48 50, on right: 46 47
@6 (100)
    on left: 49, on right: 50
var_def (101)
    on left: 51 53, on right: 48 50
@7 (102)
    on left: 52, on right: 53
var_name (103)
    on left: 54 55, on right: 51 53
init_index_list (104)
    on left: 56 57 58, on right: 53 58
init_index_range (105)
    on left: 59 60, on right: 57 58
init_list (106)
    on left: 61 62, on right: 50 62 70 71
init_elem (107)
    on left: 63 64, on right: 61 62
const (108)
    on left: 65 66, on right: 59 60 63 64 75
number (109)
    on left: 67, on right: 66
sign (110)
    on left: 68 69, on right: 67
options_list (111)
    on left: 70 71 72, on right: 47
options (112)
    on left: 73 74, on right: 70 72 74
option (113)
    on left: 75, on right: 73 74
begin_stmt (114)
    on left: 76, on right: 14 16
expr (115)
    on left: 77 78, on right: 85 86 87 88 89 90 91 92 93 94 95 96 97
    98 99 100 101 102 116 121 122 153 197 202 209 212 221
expr0 (116)
    on left: 79 80 81 82 83 84, on right: 77 150 176 178 188 190
expr1 (117)
    on left: 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102
    104 106 108 110 112, on right: 79 243
@8 (118)
    on left: 103, on right: 104
@9 (119)
    on left: 105, on right: 106
@10 (120)
    on left: 107, on right: 108
@11 (121)
    on left: 109, on right: 110
@12 (122)
    on left: 111, on right: 112
intrinsx (123)
    on left: 113 114 115, on right: 112
scanfmt (124)
    on left: 116, on right: 106 110
scanarg (125)
    on left: 117 118 119, on right: 104 106 108 110 119
intrarg (126)
    on left: 120 121 122, on right: 112 122
stmt (127)
    on left: 123 124 125 126 127 128 129 130 131 132 133 134 135 136
    137 138 139 140 141 142, on right: 206 229
c_stmt (128)
    on left: 143 144, on right: 123
c_blk (129)
    on left: 147, on right: 143 144
@13 (130)
    on left: 145, on right: 147
@14 (131)
    on left: 146, on right: 147
s_list (132)
    on left: 148 149, on right: 16 147 149
assign (133)
    on left: 150 151 153, on right: 124 207
@15 (134)
    on left: 152, on right: 153
equals (135)
    on left: 154, on right: 150 151 190 191 192 194
assign_oper (136)
    on left: 155 156 157 158 159, on right: 153
cmdlist (137)
    on left: 161, on right: 125
@16 (138)
    on left: 160, on right: 161
cmdpipe (139)
    on left: 162 164, on right: 161 164
@17 (140)
    on left: 163, on right: 164
pipe (141)
    on left: 165 166, on right: 164
command (142)
    on left: 169, on right: 161 164
@18 (143)
    on left: 167, on right: 169
@19 (144)
    on left: 168, on right: 169
args (145)
    on left: 171 172, on right: 169
@20 (146)
    on left: 170, on right: 171
arglist (147)
    on left: 173 174, on right: 171 172 174
arg (148)
    on left: 175 176 177 178 179 180 181 182 183 184 185 186 187,
    on right: 173 174
file (149)
    on left: 188 189, on right: 182 183 184 185 186 187
immed (150)
    on left: 190 191, on right: 126
inspect (151)
    on left: 192, on right: 127
osesc (152)
    on left: 193, on right: 128
popstk (153)
    on left: 194, on right: 129
if (154)
    on left: 195, on right: 130
if_stat (155)
    on left: 197, on right: 195 199
@21 (156)
    on left: 196, on right: 197
ifelse (157)
    on left: 199, on right: 131
@22 (158)
    on left: 198, on right: 199
while (159)
    on left: 202, on right: 132
@23 (160)
    on left: 200, on right: 202
@24 (161)
    on left: 201, on right: 202
for (162)
    on left: 206, on right: 133
@25 (163)
    on left: 203, on right: 206
@26 (164)
    on left: 204, on right: 206
@27 (165)
    on left: 205, on right: 206
xassign (166)
    on left: 207 208, on right: 206
xexpr (167)
    on left: 209 210, on right: 206
switch (168)
    on left: 212, on right: 134
@28 (169)
    on left: 211, on right: 212
case (170)
    on left: 215, on right: 135
@29 (171)
    on left: 213, on right: 215
@30 (172)
    on left: 214, on right: 215
default (173)
    on left: 217, on right: 136
@31 (174)
    on left: 216, on right: 217
next (175)
    on left: 218, on right: 137
break (176)
    on left: 219, on right: 138
return (177)
    on left: 220 221, on right: 140
end_stmt (178)
    on left: 222, on right: 16
label_stmt (179)
    on left: 224, on right: 141
@32 (180)
    on left: 223, on right: 224
goto (181)
    on left: 225, on right: 139
nullstmt (182)
    on left: 226 227, on right: 142
xstmt (183)
    on left: 229 230 231, on right: 4 149 197 199 202 212 215 217 224
@33 (184)
    on left: 228, on right: 229
const_expr_list (185)
    on left: 232 233, on right: 215 233
const_expr (186)
    on left: 234, on right: 232 233
opnl (187)
    on left: 235 236, on right: 16 86 87 88 89 90 91 92 93 94 95 96
    97 98 99 100 147 149 165 166 197 199 202 206 212 215 217 224
ref (188)
    on left: 237 239, on right: 78 150 151 153 177 178 179 191 192
    244
@34 (189)
    on left: 238, on right: 239
index_list (190)
    on left: 240 242, on right: 239 242
@35 (191)
    on left: 241, on right: 242
index (192)
    on left: 243 244 245 246, on right: 240 242
intrins (193)
    on left: 247, on right: 113
param (194)
    on left: 248, on right: 18 23 24 54 55 180 181 189 237 239
tasknam (195)
    on left: 249, on right: 169
EOST (196)
    on left: 250 251, on right: 10 18 29 33 124 125 126 127 128 129
    137 138 139 140
DELIM (197)
    on left: 252, on right: 24 45 58 62 70 74 106 110 119 122 171 174
    233 242
BARG (198)
    on left: 253 254, on right: 169
EARG (199)
    on left: 255 256, on right: 169
LP (200)
    on left: 257, on right: 20 64 85 104 106 108 110 112 197 202 206
    212 254
RP (201)
    on left: 258, on right: 20 64 85 104 106 108 110 112 197 202 206
    212 256
NL (202)
    on left: 259, on right: 2 7 31 76 144 222 227 231 236 250


state 0

    0 $accept: . block $end

    error        shift, and go to state 1
    Y_PROCEDURE  shift, and go to state 2
    Y_BEGIN      shift, and go to state 3
    '.'          shift, and go to state 4

    $end       reduce using rule 1 (block)
    error      [reduce using rule 1 (block)]
    Y_OSESC    reduce using rule 1 (block)
    D_D        reduce using rule 1 (block)
    D_PEEK     reduce using rule 1 (block)
    Y_IDENT    reduce using rule 1 (block)
    Y_WHILE    reduce using rule 1 (block)
    Y_IF       reduce using rule 1 (block)
    Y_FOR      reduce using rule 1 (block)
    Y_BREAK    reduce using rule 1 (block)
    Y_NEXT     reduce using rule 1 (block)
    Y_SWITCH   reduce using rule 1 (block)
    Y_CASE     reduce using rule 1 (block)
    Y_DEFAULT  reduce using rule 1 (block)
    Y_RETURN   reduce using rule 1 (block)
    Y_GOTO     reduce using rule 1 (block)
    Y_BOOL     reduce using rule 1 (block)
    Y_INT      reduce using rule 1 (block)
    Y_REAL     reduce using rule 1 (block)
    Y_STRING   reduce using rule 1 (block)
    Y_FILE     reduce using rule 1 (block)
    Y_STRUCT   reduce using rule 1 (block)
    Y_GCUR     reduce using rule 1 (block)
    Y_IMCUR    reduce using rule 1 (block)
    Y_UKEY     reduce using rule 1 (block)
    Y_PSET     reduce using rule 1 (block)
    '='        reduce using rule 1 (block)
    '~'        reduce using rule 1 (block)
    '{'        reduce using rule 1 (block)
    ';'        reduce using rule 1 (block)

    block          go to state 5
    script_params  go to state 6
    script_body    go to state 7
    proc_stmt      go to state 8
    begin_stmt     go to state 9


state 1

    7 block: error . NL

    Y_NEWLINE  shift, and go to state 10

    NL  go to state 11


state 2

   18 proc_stmt: Y_PROCEDURE . @4 param bparam_list EOST

    $default  reduce using rule 17 (@4)

    @4  go to state 12


state 3

   76 begin_stmt: Y_BEGIN . NL

    Y_NEWLINE  shift, and go to state 10

    NL  go to state 13


state 4

    2 block: '.' . NL

    Y_NEWLINE  shift, and go to state 10

    NL  go to state 14


state 5

    0 $accept: block . $end
    4 block: block . @1 debug xstmt

    $end  shift, and go to state 15

    $default  reduce using rule 3 (@1)

    @1  go to state 16


state 6

    5 block: script_params .

    $default  reduce using rule 5 (block)


state 7

    6 block: script_body .

    $default  reduce using rule 6 (block)


state 8

   14 script_params: proc_stmt . var_decls begin_stmt

    error      shift, and go to state 17
    Y_NEWLINE  shift, and go to state 10
    Y_BOOL     shift, and go to state 18
    Y_INT      shift, and go to state 19
    Y_REAL     shift, and go to state 20
    Y_STRING   shift, and go to state 21
    Y_FILE     shift, and go to state 22
    Y_STRUCT   shift, and go to state 23
    Y_GCUR     shift, and go to state 24
    Y_IMCUR    shift, and go to state 25
    Y_UKEY     shift, and go to state 26
    Y_PSET     shift, and go to state 27
    ';'        shift, and go to state 28

    Y_BEGIN  reduce using rule 25 (var_decls)

    var_decls       go to state 29
    var_decl_block  go to state 30
    var_decl_line   go to state 31
    var_decl_stmt   go to state 32
    typedefs        go to state 33
    EOST            go to state 34
    NL              go to state 35


state 9

   16 script_body: begin_stmt . @3 s_list opnl end_stmt

    $default  reduce using rule 15 (@3)

    @3  go to state 36


state 10

  259 NL: Y_NEWLINE .

    $default  reduce using rule 259 (NL)


state 11

    7 block: error NL .

    $default  reduce using rule 7 (block)


state 12

   18 proc_stmt: Y_PROCEDURE @4 . param bparam_list EOST

    Y_IDENT  shift, and go to state 37

    param  go to state 38


state 13

   76 begin_stmt: Y_BEGIN NL .

    $default  reduce using rule 76 (begin_stmt)


state 14

    2 block: '.' NL .

    $default  reduce using rule 2 (block)


state 15

    0 $accept: block $end .

    $default  accept


state 16

    4 block: block @1 . debug xstmt

    D_D     shift, and go to state 39
    D_PEEK  shift, and go to state 40
    '~'     shift, and go to state 41

    $default  reduce using rule 8 (debug)

    debug  go to state 42
    D_XXX  go to state 43


state 17

   31 var_decl_line: error . NL

    Y_NEWLINE  shift, and go to state 10

    NL  go to state 44


state 18

   34 typedefs: Y_BOOL .

    $default  reduce using rule 34 (typedefs)


state 19

   42 typedefs: Y_INT .

    $default  reduce using rule 42 (typedefs)


state 20

   36 typedefs: Y_REAL .

    $default  reduce using rule 36 (typedefs)


state 21

   35 typedefs: Y_STRING .

    $default  reduce using rule 35 (typedefs)


state 22

   37 typedefs: Y_FILE .

    $default  reduce using rule 37 (typedefs)


state 23

   43 typedefs: Y_STRUCT .

    $default  reduce using rule 43 (typedefs)


state 24

   38 typedefs: Y_GCUR .

    $default  reduce using rule 38 (typedefs)


state 25

   39 typedefs: Y_IMCUR .

    $default  reduce using rule 39 (typedefs)


state 26

   40 typedefs: Y_UKEY .

    $default  reduce using rule 40 (typedefs)


state 27

   41 typedefs: Y_PSET .

    $default  reduce using rule 41 (typedefs)


state 28

  251 EOST: ';' .

    $default  reduce using rule 251 (EOST)


state 29

   14 script_params: proc_stmt var_decls . begin_stmt

    Y_BEGIN  shift, and go to state 3

    begin_stmt  go to state 45


state 30

   26 var_decls: var_decl_block .
   28 var_decl_block: var_decl_block . var_decl_line

    error      shift, and go to state 17
    Y_NEWLINE  shift, and go to state 10
    Y_BOOL     shift, and go to state 18
    Y_INT      shift, and go to state 19
    Y_REAL     shift, and go to state 20
    Y_STRING   shift, and go to state 21
    Y_FILE     shift, and go to state 22
    Y_STRUCT   shift, and go to state 23
    Y_GCUR     shift, and go to state 24
    Y_IMCUR    shift, and go to state 25
    Y_UKEY     shift, and go to state 26
    Y_PSET     shift, and go to state 27
    ';'        shift, and go to state 28

    Y_BEGIN  reduce using rule 26 (var_decls)

    var_decl_line  go to state 46
    var_decl_stmt  go to state 32
    typedefs       go to state 33
    EOST           go to state 34
    NL             go to state 35


state 31

   27 var_decl_block: var_decl_line .

    $default  reduce using rule 27 (var_decl_block)


state 32

   30 var_decl_line: var_decl_stmt .

    $default  reduce using rule 30 (var_decl_line)


state 33

   33 var_decl_stmt: typedefs . @5 var_decl_list EOST

    $default  reduce using rule 32 (@5)

    @5  go to state 47


state 34

   29 var_decl_line: EOST .

    $default  reduce using rule 29 (var_decl_line)


state 35

  250 EOST: NL .

    $default  reduce using rule 250 (EOST)


state 36

   16 script_body: begin_stmt @3 . s_list opnl end_stmt

    $default  reduce using rule 148 (s_list)

    s_list  go to state 48


state 37

  248 param: Y_IDENT .

    $default  reduce using rule 248 (param)


state 38

   18 proc_stmt: Y_PROCEDURE @4 param . bparam_list EOST

    '('  shift, and go to state 49

    $default  reduce using rule 19 (bparam_list)

    bparam_list  go to state 50
    LP           go to state 51


state 39

   11 D_XXX: D_D .

    $default  reduce using rule 11 (D_XXX)


state 40

   12 D_XXX: D_PEEK . Y_CONSTANT

    Y_CONSTANT  shift, and go to state 52


state 41

   13 D_XXX: '~' .

    $default  reduce using rule 13 (D_XXX)


state 42

    4 block: block @1 debug . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 228 (@33)
    Y_IDENT    reduce using rule 228 (@33)
    Y_WHILE    reduce using rule 228 (@33)
    Y_IF       reduce using rule 228 (@33)
    Y_FOR      reduce using rule 228 (@33)
    Y_BREAK    reduce using rule 228 (@33)
    Y_NEXT     reduce using rule 228 (@33)
    Y_SWITCH   reduce using rule 228 (@33)
    Y_CASE     reduce using rule 228 (@33)
    Y_DEFAULT  reduce using rule 228 (@33)
    Y_RETURN   reduce using rule 228 (@33)
    Y_GOTO     reduce using rule 228 (@33)
    '='        reduce using rule 228 (@33)
    '{'        reduce using rule 228 (@33)
    ';'        reduce using rule 228 (@33)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 55
    @33            go to state 56


state 43

   10 debug: D_XXX . EOST @2 debug

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 57
    NL    go to state 35


state 44

   31 var_decl_line: error NL .

    $default  reduce using rule 31 (var_decl_line)


state 45

   14 script_params: proc_stmt var_decls begin_stmt .

    $default  reduce using rule 14 (script_params)


state 46

   28 var_decl_block: var_decl_block var_decl_line .

    $default  reduce using rule 28 (var_decl_block)


state 47

   33 var_decl_stmt: typedefs @5 . var_decl_list EOST

    Y_IDENT  shift, and go to state 37
    '*'      shift, and go to state 58

    var_decl_list  go to state 59
    var_decl_plus  go to state 60
    var_decl       go to state 61
    var_def        go to state 62
    var_name       go to state 63
    param          go to state 64


state 48

   16 script_body: begin_stmt @3 s_list . opnl end_stmt
  149 s_list: s_list . opnl xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 65
    NL    go to state 66


state 49

  257 LP: '(' .

    $default  reduce using rule 257 (LP)


state 50

   18 proc_stmt: Y_PROCEDURE @4 param bparam_list . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 67
    NL    go to state 35


state 51

   20 bparam_list: LP . param_list RP

    Y_IDENT  shift, and go to state 37

    $default  reduce using rule 21 (param_list)

    param_list   go to state 68
    xparam_list  go to state 69
    param        go to state 70


state 52

   12 D_XXX: D_PEEK Y_CONSTANT .

    $default  reduce using rule 12 (D_XXX)


state 53

  231 xstmt: error . NL

    Y_NEWLINE  shift, and go to state 10

    NL  go to state 71


state 54

  230 xstmt: var_decl_stmt .

    $default  reduce using rule 230 (xstmt)


state 55

    4 block: block @1 debug xstmt .

    $default  reduce using rule 4 (block)


state 56

  229 xstmt: @33 . stmt

    Y_OSESC    shift, and go to state 72
    Y_IDENT    shift, and go to state 73
    Y_WHILE    shift, and go to state 74
    Y_IF       shift, and go to state 75
    Y_FOR      shift, and go to state 76
    Y_BREAK    shift, and go to state 77
    Y_NEXT     shift, and go to state 78
    Y_SWITCH   shift, and go to state 79
    Y_CASE     shift, and go to state 80
    Y_DEFAULT  shift, and go to state 81
    Y_RETURN   shift, and go to state 82
    Y_GOTO     shift, and go to state 83
    '='        shift, and go to state 84
    '{'        shift, and go to state 85
    ';'        shift, and go to state 86

    stmt        go to state 87
    c_stmt      go to state 88
    c_blk       go to state 89
    assign      go to state 90
    equals      go to state 91
    cmdlist     go to state 92
    command     go to state 93
    immed       go to state 94
    inspect     go to state 95
    osesc       go to state 96
    popstk      go to state 97
    if          go to state 98
    if_stat     go to state 99
    ifelse      go to state 100
    while       go to state 101
    for         go to state 102
    switch      go to state 103
    case        go to state 104
    default     go to state 105
    next        go to state 106
    break       go to state 107
    return      go to state 108
    label_stmt  go to state 109
    goto        go to state 110
    nullstmt    go to state 111
    ref         go to state 112
    param       go to state 113
    tasknam     go to state 114


state 57

   10 debug: D_XXX EOST . @2 debug

    $default  reduce using rule 9 (@2)

    @2  go to state 115


state 58

   55 var_name: '*' . param

    Y_IDENT  shift, and go to state 37

    param  go to state 116


state 59

   33 var_decl_stmt: typedefs @5 var_decl_list . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 117
    NL    go to state 35


state 60

   44 var_decl_list: var_decl_plus .
   45              | var_decl_plus . DELIM var_decl_list

    ','  shift, and go to state 118

    $default  reduce using rule 44 (var_decl_list)

    DELIM  go to state 119


state 61

   46 var_decl_plus: var_decl .
   47              | var_decl . '{' options_list ';' '}'

    '{'  shift, and go to state 120

    $default  reduce using rule 46 (var_decl_plus)


state 62

   48 var_decl: var_def .
   50         | var_def . '=' @6 init_list

    '='  shift, and go to state 121

    $default  reduce using rule 48 (var_decl)


state 63

   51 var_def: var_name .
   53        | var_name . @7 '[' init_index_list ']'

    '['       reduce using rule 52 (@7)
    $default  reduce using rule 51 (var_def)

    @7  go to state 122


state 64

   54 var_name: param .

    $default  reduce using rule 54 (var_name)


state 65

   16 script_body: begin_stmt @3 s_list opnl . end_stmt
  149 s_list: s_list opnl . xstmt

    error     shift, and go to state 53
    Y_END     shift, and go to state 123
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 228 (@33)
    Y_IDENT    reduce using rule 228 (@33)
    Y_WHILE    reduce using rule 228 (@33)
    Y_IF       reduce using rule 228 (@33)
    Y_FOR      reduce using rule 228 (@33)
    Y_BREAK    reduce using rule 228 (@33)
    Y_NEXT     reduce using rule 228 (@33)
    Y_SWITCH   reduce using rule 228 (@33)
    Y_CASE     reduce using rule 228 (@33)
    Y_DEFAULT  reduce using rule 228 (@33)
    Y_RETURN   reduce using rule 228 (@33)
    Y_GOTO     reduce using rule 228 (@33)
    '='        reduce using rule 228 (@33)
    '{'        reduce using rule 228 (@33)
    ';'        reduce using rule 228 (@33)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    end_stmt       go to state 124
    xstmt          go to state 125
    @33            go to state 56


state 66

  236 opnl: NL .

    $default  reduce using rule 236 (opnl)


state 67

   18 proc_stmt: Y_PROCEDURE @4 param bparam_list EOST .

    $default  reduce using rule 18 (proc_stmt)


state 68

   20 bparam_list: LP param_list . RP

    ')'  shift, and go to state 126

    RP  go to state 127


state 69

   22 param_list: xparam_list .
   24 xparam_list: xparam_list . DELIM param

    ','  shift, and go to state 118

    $default  reduce using rule 22 (param_list)

    DELIM  go to state 128


state 70

   23 xparam_list: param .

    $default  reduce using rule 23 (xparam_list)


state 71

  231 xstmt: error NL .

    $default  reduce using rule 231 (xstmt)


state 72

  193 osesc: Y_OSESC .

    $default  reduce using rule 193 (osesc)


state 73

  224 label_stmt: Y_IDENT . ':' opnl @32 xstmt
  248 param: Y_IDENT .
  249 tasknam: Y_IDENT .

    ':'  shift, and go to state 129

    '='        reduce using rule 248 (param)
    YOP_AOCAT  reduce using rule 248 (param)
    YOP_AODIV  reduce using rule 248 (param)
    YOP_AOMUL  reduce using rule 248 (param)
    YOP_AOSUB  reduce using rule 248 (param)
    YOP_AOADD  reduce using rule 248 (param)
    '['        reduce using rule 248 (param)
    $default   reduce using rule 249 (tasknam)


state 74

  202 while: Y_WHILE . LP @23 expr RP @24 opnl xstmt

    '('  shift, and go to state 49

    LP  go to state 130


state 75

  197 if_stat: Y_IF . LP expr RP @21 opnl xstmt

    '('  shift, and go to state 49

    LP  go to state 131


state 76

  206 for: Y_FOR . LP opnl xassign ';' opnl @25 xexpr ';' opnl @26 xassign RP opnl @27 stmt

    '('  shift, and go to state 49

    LP  go to state 132


state 77

  219 break: Y_BREAK .

    $default  reduce using rule 219 (break)


state 78

  218 next: Y_NEXT .

    $default  reduce using rule 218 (next)


state 79

  212 switch: Y_SWITCH . opnl LP opnl expr opnl RP opnl @28 xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 133
    NL    go to state 66


state 80

  215 case: Y_CASE . @29 const_expr_list ':' opnl @30 xstmt

    $default  reduce using rule 213 (@29)

    @29  go to state 134


state 81

  217 default: Y_DEFAULT . ':' opnl @31 xstmt

    ':'  shift, and go to state 135


state 82

  220 return: Y_RETURN .
  221       | Y_RETURN . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    $default  reduce using rule 220 (return)

    expr      go to state 150
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 83

  225 goto: Y_GOTO . Y_IDENT

    Y_IDENT  shift, and go to state 157


state 84

  154 equals: '=' .

    $default  reduce using rule 154 (equals)


state 85

  147 c_blk: '{' . @13 s_list opnl @14 '}'

    $default  reduce using rule 145 (@13)

    @13  go to state 158


state 86

  226 nullstmt: ';' .
  227         | ';' . NL

    Y_NEWLINE  shift, and go to state 10

    Y_NEWLINE  [reduce using rule 226 (nullstmt)]
    $default   reduce using rule 226 (nullstmt)

    NL  go to state 159


state 87

  229 xstmt: @33 stmt .

    $default  reduce using rule 229 (xstmt)


state 88

  123 stmt: c_stmt .

    $default  reduce using rule 123 (stmt)


state 89

  143 c_stmt: c_blk .
  144       | c_blk . NL

    Y_NEWLINE  shift, and go to state 10

    Y_NEWLINE  [reduce using rule 143 (c_stmt)]
    $default   reduce using rule 143 (c_stmt)

    NL  go to state 160


state 90

  124 stmt: assign . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 161
    NL    go to state 35


state 91

  190 immed: equals . expr0
  191      | equals . ref
  194 popstk: equals .

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    $default  reduce using rule 194 (popstk)

    expr      go to state 162
    expr0     go to state 163
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 164
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 92

  125 stmt: cmdlist . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 165
    NL    go to state 35


state 93

  161 cmdlist: command . @16 cmdpipe

    $default  reduce using rule 160 (@16)

    @16  go to state 166


state 94

  126 stmt: immed . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 167
    NL    go to state 35


state 95

  127 stmt: inspect . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 168
    NL    go to state 35


state 96

  128 stmt: osesc . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 169
    NL    go to state 35


state 97

  129 stmt: popstk . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 170
    NL    go to state 35


state 98

  130 stmt: if .

    $default  reduce using rule 130 (stmt)


state 99

  195 if: if_stat .
  199 ifelse: if_stat . Y_ELSE @22 opnl xstmt

    Y_ELSE  shift, and go to state 171

    Y_ELSE    [reduce using rule 195 (if)]
    $default  reduce using rule 195 (if)


state 100

  131 stmt: ifelse .

    $default  reduce using rule 131 (stmt)


state 101

  132 stmt: while .

    $default  reduce using rule 132 (stmt)


state 102

  133 stmt: for .

    $default  reduce using rule 133 (stmt)


state 103

  134 stmt: switch .

    $default  reduce using rule 134 (stmt)


state 104

  135 stmt: case .

    $default  reduce using rule 135 (stmt)


state 105

  136 stmt: default .

    $default  reduce using rule 136 (stmt)


state 106

  137 stmt: next . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 172
    NL    go to state 35


state 107

  138 stmt: break . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 173
    NL    go to state 35


state 108

  140 stmt: return . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 174
    NL    go to state 35


state 109

  141 stmt: label_stmt .

    $default  reduce using rule 141 (stmt)


state 110

  139 stmt: goto . EOST

    Y_NEWLINE  shift, and go to state 10
    ';'        shift, and go to state 28

    EOST  go to state 175
    NL    go to state 35


state 111

  142 stmt: nullstmt .

    $default  reduce using rule 142 (stmt)


state 112

  150 assign: ref . equals expr0
  151       | ref . equals ref
  153       | ref . @15 assign_oper expr
  192 inspect: ref . equals

    '='  shift, and go to state 84

    $default  reduce using rule 152 (@15)

    @15     go to state 176
    equals  go to state 177


state 113

  237 ref: param .
  239    | param . @34 '[' index_list ']'

    '['       reduce using rule 238 (@34)
    $default  reduce using rule 237 (ref)

    @34  go to state 178


state 114

  169 command: tasknam . @18 BARG @19 args EARG

    $default  reduce using rule 167 (@18)

    @18  go to state 179


state 115

   10 debug: D_XXX EOST @2 . debug

    D_D     shift, and go to state 39
    D_PEEK  shift, and go to state 40
    '~'     shift, and go to state 41

    $default  reduce using rule 8 (debug)

    debug  go to state 180
    D_XXX  go to state 43


state 116

   55 var_name: '*' param .

    $default  reduce using rule 55 (var_name)


state 117

   33 var_decl_stmt: typedefs @5 var_decl_list EOST .

    $default  reduce using rule 33 (var_decl_stmt)


state 118

  252 DELIM: ',' .

    $default  reduce using rule 252 (DELIM)


state 119

   45 var_decl_list: var_decl_plus DELIM . var_decl_list

    Y_IDENT  shift, and go to state 37
    '*'      shift, and go to state 58

    var_decl_list  go to state 181
    var_decl_plus  go to state 60
    var_decl       go to state 61
    var_def        go to state 62
    var_name       go to state 63
    param          go to state 64


state 120

   47 var_decl_plus: var_decl '{' . options_list ';' '}'

    Y_CONSTANT  shift, and go to state 182
    Y_IDENT     shift, and go to state 183
    '+'         shift, and go to state 184
    '-'         shift, and go to state 185

    init_list     go to state 186
    init_elem     go to state 187
    const         go to state 188
    number        go to state 189
    sign          go to state 190
    options_list  go to state 191
    options       go to state 192
    option        go to state 193


state 121

   50 var_decl: var_def '=' . @6 init_list

    $default  reduce using rule 49 (@6)

    @6  go to state 194


state 122

   53 var_def: var_name @7 . '[' init_index_list ']'

    '['  shift, and go to state 195


state 123

  222 end_stmt: Y_END . NL

    Y_NEWLINE  shift, and go to state 10

    NL  go to state 196


state 124

   16 script_body: begin_stmt @3 s_list opnl end_stmt .

    $default  reduce using rule 16 (script_body)


state 125

  149 s_list: s_list opnl xstmt .

    $default  reduce using rule 149 (s_list)


state 126

  258 RP: ')' .

    $default  reduce using rule 258 (RP)


state 127

   20 bparam_list: LP param_list RP .

    $default  reduce using rule 20 (bparam_list)


state 128

   24 xparam_list: xparam_list DELIM . param

    Y_IDENT  shift, and go to state 37

    param  go to state 197


state 129

  224 label_stmt: Y_IDENT ':' . opnl @32 xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 198
    NL    go to state 66


state 130

  202 while: Y_WHILE LP . @23 expr RP @24 opnl xstmt

    $default  reduce using rule 200 (@23)

    @23  go to state 199


state 131

  197 if_stat: Y_IF LP . expr RP @21 opnl xstmt

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 200
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 132

  206 for: Y_FOR LP . opnl xassign ';' opnl @25 xexpr ';' opnl @26 xassign RP opnl @27 stmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 201
    NL    go to state 66


state 133

  212 switch: Y_SWITCH opnl . LP opnl expr opnl RP opnl @28 xstmt

    '('  shift, and go to state 49

    LP  go to state 202


state 134

  215 case: Y_CASE @29 . const_expr_list ':' opnl @30 xstmt

    Y_CONSTANT  shift, and go to state 203

    const_expr_list  go to state 204
    const_expr       go to state 205


state 135

  217 default: Y_DEFAULT ':' . opnl @31 xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 206
    NL    go to state 66


state 136

  104 expr1: Y_SCAN . LP @8 scanarg RP

    '('  shift, and go to state 49

    LP  go to state 207


state 137

  106 expr1: Y_SCANF . LP @9 scanfmt DELIM scanarg RP

    '('  shift, and go to state 49

    LP  go to state 208


state 138

  108 expr1: Y_FSCAN . LP @10 scanarg RP

    '('  shift, and go to state 49

    LP  go to state 209


state 139

  110 expr1: Y_FSCANF . LP Y_IDENT DELIM @11 scanfmt DELIM scanarg RP

    '('  shift, and go to state 49

    LP  go to state 210


state 140

   80 expr0: Y_CONSTANT .

    $default  reduce using rule 80 (expr0)


state 141

  247 intrins: Y_IDENT .
  248 param: Y_IDENT .

    '('       reduce using rule 247 (intrins)
    $default  reduce using rule 248 (param)


state 142

  114 intrinsx: Y_INT .

    $default  reduce using rule 114 (intrinsx)


state 143

  115 intrinsx: Y_REAL .

    $default  reduce using rule 115 (intrinsx)


state 144

   81 expr0: Y_GCUR .

    $default  reduce using rule 81 (expr0)


state 145

   82 expr0: Y_IMCUR .

    $default  reduce using rule 82 (expr0)


state 146

   83 expr0: Y_UKEY .

    $default  reduce using rule 83 (expr0)


state 147

   84 expr0: Y_PSET .

    $default  reduce using rule 84 (expr0)


state 148

  102 expr1: '-' . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 211
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 149

  101 expr1: YOP_NOT . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 212
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 150

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  221 return: Y_RETURN expr .

    YOP_OR      shift, and go to state 213
    YOP_AND     shift, and go to state 214
    YOP_NE      shift, and go to state 215
    YOP_EQ      shift, and go to state 216
    '<'         shift, and go to state 217
    '>'         shift, and go to state 218
    YOP_GE      shift, and go to state 219
    YOP_LE      shift, and go to state 220
    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227

    $default  reduce using rule 221 (return)


state 151

   77 expr: expr0 .

    $default  reduce using rule 77 (expr)


state 152

   79 expr0: expr1 .

    $default  reduce using rule 79 (expr0)


state 153

  112 expr1: intrinsx . LP @12 intrarg RP

    '('  shift, and go to state 49

    LP  go to state 228


state 154

   78 expr: ref .

    $default  reduce using rule 78 (expr)


state 155

  113 intrinsx: intrins .

    $default  reduce using rule 113 (intrinsx)


state 156

   85 expr1: LP . expr RP

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 229
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 157

  225 goto: Y_GOTO Y_IDENT .

    $default  reduce using rule 225 (goto)


state 158

  147 c_blk: '{' @13 . s_list opnl @14 '}'

    $default  reduce using rule 148 (s_list)

    s_list  go to state 230


state 159

  227 nullstmt: ';' NL .

    $default  reduce using rule 227 (nullstmt)


state 160

  144 c_stmt: c_blk NL .

    $default  reduce using rule 144 (c_stmt)


state 161

  124 stmt: assign EOST .

    $default  reduce using rule 124 (stmt)


state 162

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_OR      shift, and go to state 213
    YOP_AND     shift, and go to state 214
    YOP_NE      shift, and go to state 215
    YOP_EQ      shift, and go to state 216
    '<'         shift, and go to state 217
    '>'         shift, and go to state 218
    YOP_GE      shift, and go to state 219
    YOP_LE      shift, and go to state 220
    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227


state 163

   77 expr: expr0 .
  190 immed: equals expr0 .

    Y_NEWLINE  reduce using rule 190 (immed)
    ';'        reduce using rule 190 (immed)
    $default   reduce using rule 77 (expr)


state 164

   78 expr: ref .
  191 immed: equals ref .

    Y_NEWLINE  reduce using rule 191 (immed)
    ';'        reduce using rule 191 (immed)
    $default   reduce using rule 78 (expr)


state 165

  125 stmt: cmdlist EOST .

    $default  reduce using rule 125 (stmt)


state 166

  161 cmdlist: command @16 . cmdpipe

    $default  reduce using rule 162 (cmdpipe)

    cmdpipe  go to state 231


state 167

  126 stmt: immed EOST .

    $default  reduce using rule 126 (stmt)


state 168

  127 stmt: inspect EOST .

    $default  reduce using rule 127 (stmt)


state 169

  128 stmt: osesc EOST .

    $default  reduce using rule 128 (stmt)


state 170

  129 stmt: popstk EOST .

    $default  reduce using rule 129 (stmt)


state 171

  199 ifelse: if_stat Y_ELSE . @22 opnl xstmt

    $default  reduce using rule 198 (@22)

    @22  go to state 232


state 172

  137 stmt: next EOST .

    $default  reduce using rule 137 (stmt)


state 173

  138 stmt: break EOST .

    $default  reduce using rule 138 (stmt)


state 174

  140 stmt: return EOST .

    $default  reduce using rule 140 (stmt)


state 175

  139 stmt: goto EOST .

    $default  reduce using rule 139 (stmt)


state 176

  153 assign: ref @15 . assign_oper expr

    YOP_AOCAT  shift, and go to state 233
    YOP_AODIV  shift, and go to state 234
    YOP_AOMUL  shift, and go to state 235
    YOP_AOSUB  shift, and go to state 236
    YOP_AOADD  shift, and go to state 237

    assign_oper  go to state 238


state 177

  150 assign: ref equals . expr0
  151       | ref equals . ref
  192 inspect: ref equals .

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    $default  reduce using rule 192 (inspect)

    expr      go to state 162
    expr0     go to state 239
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 240
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 178

  239 ref: param @34 . '[' index_list ']'

    '['  shift, and go to state 241


state 179

  169 command: tasknam @18 . BARG @19 args EARG

    '('  shift, and go to state 49

    '('       [reduce using rule 253 (BARG)]
    $default  reduce using rule 253 (BARG)

    BARG  go to state 242
    LP    go to state 243


state 180

   10 debug: D_XXX EOST @2 debug .

    $default  reduce using rule 10 (debug)


state 181

   45 var_decl_list: var_decl_plus DELIM var_decl_list .

    $default  reduce using rule 45 (var_decl_list)


state 182

   64 init_elem: Y_CONSTANT . LP const RP
   65 const: Y_CONSTANT .

    '('  shift, and go to state 49

    $default  reduce using rule 65 (const)

    LP  go to state 244


state 183

   75 option: Y_IDENT . '=' const

    '='  shift, and go to state 245


state 184

   68 sign: '+' .

    $default  reduce using rule 68 (sign)


state 185

   69 sign: '-' .

    $default  reduce using rule 69 (sign)


state 186

   62 init_list: init_list . DELIM init_elem
   70 options_list: init_list . DELIM options
   71             | init_list .

    ','  shift, and go to state 118

    $default  reduce using rule 71 (options_list)

    DELIM  go to state 246


state 187

   61 init_list: init_elem .

    $default  reduce using rule 61 (init_list)


state 188

   63 init_elem: const .

    $default  reduce using rule 63 (init_elem)


state 189

   66 const: number .

    $default  reduce using rule 66 (const)


state 190

   67 number: sign . Y_CONSTANT

    Y_CONSTANT  shift, and go to state 247


state 191

   47 var_decl_plus: var_decl '{' options_list . ';' '}'

    ';'  shift, and go to state 248


state 192

   72 options_list: options .
   74 options: options . DELIM option

    ','  shift, and go to state 118

    $default  reduce using rule 72 (options_list)

    DELIM  go to state 249


state 193

   73 options: option .

    $default  reduce using rule 73 (options)


state 194

   50 var_decl: var_def '=' @6 . init_list

    Y_CONSTANT  shift, and go to state 182
    '+'         shift, and go to state 184
    '-'         shift, and go to state 185

    init_list  go to state 250
    init_elem  go to state 187
    const      go to state 188
    number     go to state 189
    sign       go to state 190


state 195

   53 var_def: var_name @7 '[' . init_index_list ']'

    Y_CONSTANT  shift, and go to state 251
    '+'         shift, and go to state 184
    '-'         shift, and go to state 185

    $default  reduce using rule 56 (init_index_list)

    init_index_list   go to state 252
    init_index_range  go to state 253
    const             go to state 254
    number            go to state 189
    sign              go to state 190


state 196

  222 end_stmt: Y_END NL .

    $default  reduce using rule 222 (end_stmt)


state 197

   24 xparam_list: xparam_list DELIM param .

    $default  reduce using rule 24 (xparam_list)


state 198

  224 label_stmt: Y_IDENT ':' opnl . @32 xstmt

    $default  reduce using rule 223 (@32)

    @32  go to state 255


state 199

  202 while: Y_WHILE LP @23 . expr RP @24 opnl xstmt

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 256
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 200

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  197 if_stat: Y_IF LP expr . RP @21 opnl xstmt

    YOP_OR      shift, and go to state 213
    YOP_AND     shift, and go to state 214
    YOP_NE      shift, and go to state 215
    YOP_EQ      shift, and go to state 216
    '<'         shift, and go to state 217
    '>'         shift, and go to state 218
    YOP_GE      shift, and go to state 219
    YOP_LE      shift, and go to state 220
    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227
    ')'         shift, and go to state 126

    RP  go to state 257


state 201

  206 for: Y_FOR LP opnl . xassign ';' opnl @25 xexpr ';' opnl @26 xassign RP opnl @27 stmt

    Y_IDENT  shift, and go to state 37

    $default  reduce using rule 208 (xassign)

    assign   go to state 258
    xassign  go to state 259
    ref      go to state 260
    param    go to state 113


state 202

  212 switch: Y_SWITCH opnl LP . opnl expr opnl RP opnl @28 xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 261
    NL    go to state 66


state 203

  234 const_expr: Y_CONSTANT .

    $default  reduce using rule 234 (const_expr)


state 204

  215 case: Y_CASE @29 const_expr_list . ':' opnl @30 xstmt

    ':'  shift, and go to state 262


state 205

  232 const_expr_list: const_expr .
  233                | const_expr . DELIM const_expr_list

    ','  shift, and go to state 118

    $default  reduce using rule 232 (const_expr_list)

    DELIM  go to state 263


state 206

  217 default: Y_DEFAULT ':' opnl . @31 xstmt

    $default  reduce using rule 216 (@31)

    @31  go to state 264


state 207

  104 expr1: Y_SCAN LP . @8 scanarg RP

    $default  reduce using rule 103 (@8)

    @8  go to state 265


state 208

  106 expr1: Y_SCANF LP . @9 scanfmt DELIM scanarg RP

    $default  reduce using rule 105 (@9)

    @9  go to state 266


state 209

  108 expr1: Y_FSCAN LP . @10 scanarg RP

    $default  reduce using rule 107 (@10)

    @10  go to state 267


state 210

  110 expr1: Y_FSCANF LP . Y_IDENT DELIM @11 scanfmt DELIM scanarg RP

    Y_IDENT  shift, and go to state 268


state 211

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  102      | '-' expr .

    YOP_POW  shift, and go to state 227

    $default  reduce using rule 102 (expr1)


state 212

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  101      | YOP_NOT expr .

    YOP_POW  shift, and go to state 227

    $default  reduce using rule 101 (expr1)


state 213

   99 expr1: expr YOP_OR . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 269
    NL    go to state 66


state 214

  100 expr1: expr YOP_AND . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 270
    NL    go to state 66


state 215

   98 expr1: expr YOP_NE . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 271
    NL    go to state 66


state 216

   97 expr1: expr YOP_EQ . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 272
    NL    go to state 66


state 217

   93 expr1: expr '<' . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 273
    NL    go to state 66


state 218

   94 expr1: expr '>' . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 274
    NL    go to state 66


state 219

   96 expr1: expr YOP_GE . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 275
    NL    go to state 66


state 220

   95 expr1: expr YOP_LE . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 276
    NL    go to state 66


state 221

   92 expr1: expr YOP_CONCAT . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 277
    NL    go to state 66


state 222

   86 expr1: expr '+' . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 278
    NL    go to state 66


state 223

   87 expr1: expr '-' . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 279
    NL    go to state 66


state 224

   88 expr1: expr '*' . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 280
    NL    go to state 66


state 225

   89 expr1: expr '/' . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 281
    NL    go to state 66


state 226

   91 expr1: expr '%' . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 282
    NL    go to state 66


state 227

   90 expr1: expr YOP_POW . opnl expr

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 283
    NL    go to state 66


state 228

  112 expr1: intrinsx LP . @12 intrarg RP

    $default  reduce using rule 111 (@12)

    @12  go to state 284


state 229

   85 expr1: LP expr . RP
   86      | expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_OR      shift, and go to state 213
    YOP_AND     shift, and go to state 214
    YOP_NE      shift, and go to state 215
    YOP_EQ      shift, and go to state 216
    '<'         shift, and go to state 217
    '>'         shift, and go to state 218
    YOP_GE      shift, and go to state 219
    YOP_LE      shift, and go to state 220
    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227
    ')'         shift, and go to state 126

    RP  go to state 285


state 230

  147 c_blk: '{' @13 s_list . opnl @14 '}'
  149 s_list: s_list . opnl xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 286
    NL    go to state 66


state 231

  161 cmdlist: command @16 cmdpipe .
  164 cmdpipe: cmdpipe . pipe @17 command

    Y_ALLPIPE  shift, and go to state 287
    '|'        shift, and go to state 288

    $default  reduce using rule 161 (cmdlist)

    pipe  go to state 289


state 232

  199 ifelse: if_stat Y_ELSE @22 . opnl xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 290
    NL    go to state 66


state 233

  159 assign_oper: YOP_AOCAT .

    $default  reduce using rule 159 (assign_oper)


state 234

  158 assign_oper: YOP_AODIV .

    $default  reduce using rule 158 (assign_oper)


state 235

  157 assign_oper: YOP_AOMUL .

    $default  reduce using rule 157 (assign_oper)


state 236

  156 assign_oper: YOP_AOSUB .

    $default  reduce using rule 156 (assign_oper)


state 237

  155 assign_oper: YOP_AOADD .

    $default  reduce using rule 155 (assign_oper)


state 238

  153 assign: ref @15 assign_oper . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 291
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 239

   77 expr: expr0 .
  150 assign: ref equals expr0 .

    Y_NEWLINE  reduce using rule 150 (assign)
    ';'        reduce using rule 150 (assign)
    ')'        reduce using rule 150 (assign)
    $default   reduce using rule 77 (expr)


state 240

   78 expr: ref .
  151 assign: ref equals ref .

    Y_NEWLINE  reduce using rule 151 (assign)
    ';'        reduce using rule 151 (assign)
    ')'        reduce using rule 151 (assign)
    $default   reduce using rule 78 (expr)


state 241

  239 ref: param @34 '[' . index_list ']'

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 292
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    '*'         shift, and go to state 293
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr        go to state 162
    expr0       go to state 151
    expr1       go to state 294
    intrinsx    go to state 153
    ref         go to state 295
    index_list  go to state 296
    index       go to state 297
    intrins     go to state 155
    param       go to state 113
    LP          go to state 156


state 242

  169 command: tasknam @18 BARG . @19 args EARG

    $default  reduce using rule 168 (@19)

    @19  go to state 298


state 243

  254 BARG: LP .

    $default  reduce using rule 254 (BARG)


state 244

   64 init_elem: Y_CONSTANT LP . const RP

    Y_CONSTANT  shift, and go to state 251
    '+'         shift, and go to state 184
    '-'         shift, and go to state 185

    const   go to state 299
    number  go to state 189
    sign    go to state 190


state 245

   75 option: Y_IDENT '=' . const

    Y_CONSTANT  shift, and go to state 251
    '+'         shift, and go to state 184
    '-'         shift, and go to state 185

    const   go to state 300
    number  go to state 189
    sign    go to state 190


state 246

   62 init_list: init_list DELIM . init_elem
   70 options_list: init_list DELIM . options

    Y_CONSTANT  shift, and go to state 182
    Y_IDENT     shift, and go to state 183
    '+'         shift, and go to state 184
    '-'         shift, and go to state 185

    init_elem  go to state 301
    const      go to state 188
    number     go to state 189
    sign       go to state 190
    options    go to state 302
    option     go to state 193


state 247

   67 number: sign Y_CONSTANT .

    $default  reduce using rule 67 (number)


state 248

   47 var_decl_plus: var_decl '{' options_list ';' . '}'

    '}'  shift, and go to state 303


state 249

   74 options: options DELIM . option

    Y_IDENT  shift, and go to state 183

    option  go to state 304


state 250

   50 var_decl: var_def '=' @6 init_list .
   62 init_list: init_list . DELIM init_elem

    ','  shift, and go to state 118

    ','       [reduce using rule 50 (var_decl)]
    $default  reduce using rule 50 (var_decl)

    DELIM  go to state 305


state 251

   65 const: Y_CONSTANT .

    $default  reduce using rule 65 (const)


state 252

   53 var_def: var_name @7 '[' init_index_list . ']'
   58 init_index_list: init_index_list . DELIM init_index_range

    ']'  shift, and go to state 306
    ','  shift, and go to state 118

    DELIM  go to state 307


state 253

   57 init_index_list: init_index_range .

    $default  reduce using rule 57 (init_index_list)


state 254

   59 init_index_range: const .
   60                 | const . ':' const

    ':'  shift, and go to state 308

    $default  reduce using rule 59 (init_index_range)


state 255

  224 label_stmt: Y_IDENT ':' opnl @32 . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 228 (@33)
    Y_IDENT    reduce using rule 228 (@33)
    Y_WHILE    reduce using rule 228 (@33)
    Y_IF       reduce using rule 228 (@33)
    Y_FOR      reduce using rule 228 (@33)
    Y_BREAK    reduce using rule 228 (@33)
    Y_NEXT     reduce using rule 228 (@33)
    Y_SWITCH   reduce using rule 228 (@33)
    Y_CASE     reduce using rule 228 (@33)
    Y_DEFAULT  reduce using rule 228 (@33)
    Y_RETURN   reduce using rule 228 (@33)
    Y_GOTO     reduce using rule 228 (@33)
    '='        reduce using rule 228 (@33)
    '{'        reduce using rule 228 (@33)
    ';'        reduce using rule 228 (@33)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 309
    @33            go to state 56


state 256

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  202 while: Y_WHILE LP @23 expr . RP @24 opnl xstmt

    YOP_OR      shift, and go to state 213
    YOP_AND     shift, and go to state 214
    YOP_NE      shift, and go to state 215
    YOP_EQ      shift, and go to state 216
    '<'         shift, and go to state 217
    '>'         shift, and go to state 218
    YOP_GE      shift, and go to state 219
    YOP_LE      shift, and go to state 220
    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227
    ')'         shift, and go to state 126

    RP  go to state 310


state 257

  197 if_stat: Y_IF LP expr RP . @21 opnl xstmt

    $default  reduce using rule 196 (@21)

    @21  go to state 311


state 258

  207 xassign: assign .

    $default  reduce using rule 207 (xassign)


state 259

  206 for: Y_FOR LP opnl xassign . ';' opnl @25 xexpr ';' opnl @26 xassign RP opnl @27 stmt

    ';'  shift, and go to state 312


state 260

  150 assign: ref . equals expr0
  151       | ref . equals ref
  153       | ref . @15 assign_oper expr

    '='  shift, and go to state 84

    $default  reduce using rule 152 (@15)

    @15     go to state 176
    equals  go to state 313


state 261

  212 switch: Y_SWITCH opnl LP opnl . expr opnl RP opnl @28 xstmt

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 314
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 262

  215 case: Y_CASE @29 const_expr_list ':' . opnl @30 xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 315
    NL    go to state 66


state 263

  233 const_expr_list: const_expr DELIM . const_expr_list

    Y_CONSTANT  shift, and go to state 203

    const_expr_list  go to state 316
    const_expr       go to state 205


state 264

  217 default: Y_DEFAULT ':' opnl @31 . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 228 (@33)
    Y_IDENT    reduce using rule 228 (@33)
    Y_WHILE    reduce using rule 228 (@33)
    Y_IF       reduce using rule 228 (@33)
    Y_FOR      reduce using rule 228 (@33)
    Y_BREAK    reduce using rule 228 (@33)
    Y_NEXT     reduce using rule 228 (@33)
    Y_SWITCH   reduce using rule 228 (@33)
    Y_CASE     reduce using rule 228 (@33)
    Y_DEFAULT  reduce using rule 228 (@33)
    Y_RETURN   reduce using rule 228 (@33)
    Y_GOTO     reduce using rule 228 (@33)
    '='        reduce using rule 228 (@33)
    '{'        reduce using rule 228 (@33)
    ';'        reduce using rule 228 (@33)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 317
    @33            go to state 56


state 265

  104 expr1: Y_SCAN LP @8 . scanarg RP

    Y_IDENT  shift, and go to state 318

    $default  reduce using rule 117 (scanarg)

    scanarg  go to state 319


state 266

  106 expr1: Y_SCANF LP @9 . scanfmt DELIM scanarg RP

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 320
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    scanfmt   go to state 321
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 267

  108 expr1: Y_FSCAN LP @10 . scanarg RP

    Y_IDENT  shift, and go to state 318

    $default  reduce using rule 117 (scanarg)

    scanarg  go to state 322


state 268

  110 expr1: Y_FSCANF LP Y_IDENT . DELIM @11 scanfmt DELIM scanarg RP

    ','  shift, and go to state 118

    DELIM  go to state 323


state 269

   99 expr1: expr YOP_OR opnl . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 324
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 270

  100 expr1: expr YOP_AND opnl . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 325
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 271

   98 expr1: expr YOP_NE opnl . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 326
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 272

   97 expr1: expr YOP_EQ opnl . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 327
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 273

   93 expr1: expr '<' opnl . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 328
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 274

   94 expr1: expr '>' opnl . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 329
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 275

   96 expr1: expr YOP_GE opnl . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 330
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 276

   95 expr1: expr YOP_LE opnl . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 331
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 277

   92 expr1: expr YOP_CONCAT opnl . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 332
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 278

   86 expr1: expr '+' opnl . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 333
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 279

   87 expr1: expr '-' opnl . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 334
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 280

   88 expr1: expr '*' opnl . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 335
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 281

   89 expr1: expr '/' opnl . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 336
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 282

   91 expr1: expr '%' opnl . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 337
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 283

   90 expr1: expr YOP_POW opnl . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 338
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 284

  112 expr1: intrinsx LP @12 . intrarg RP

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    $default  reduce using rule 120 (intrarg)

    expr      go to state 339
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    intrarg   go to state 340
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 285

   85 expr1: LP expr RP .

    $default  reduce using rule 85 (expr1)


state 286

  147 c_blk: '{' @13 s_list opnl . @14 '}'
  149 s_list: s_list opnl . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 228 (@33)
    Y_IDENT    reduce using rule 228 (@33)
    Y_WHILE    reduce using rule 228 (@33)
    Y_IF       reduce using rule 228 (@33)
    Y_FOR      reduce using rule 228 (@33)
    Y_BREAK    reduce using rule 228 (@33)
    Y_NEXT     reduce using rule 228 (@33)
    Y_SWITCH   reduce using rule 228 (@33)
    Y_CASE     reduce using rule 228 (@33)
    Y_DEFAULT  reduce using rule 228 (@33)
    Y_RETURN   reduce using rule 228 (@33)
    Y_GOTO     reduce using rule 228 (@33)
    '='        reduce using rule 228 (@33)
    '{'        reduce using rule 228 (@33)
    ';'        reduce using rule 228 (@33)
    '}'        reduce using rule 146 (@14)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    @14            go to state 341
    xstmt          go to state 125
    @33            go to state 56


state 287

  166 pipe: Y_ALLPIPE . opnl

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 342
    NL    go to state 66


state 288

  165 pipe: '|' . opnl

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 343
    NL    go to state 66


state 289

  164 cmdpipe: cmdpipe pipe . @17 command

    $default  reduce using rule 163 (@17)

    @17  go to state 344


state 290

  199 ifelse: if_stat Y_ELSE @22 opnl . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 228 (@33)
    Y_IDENT    reduce using rule 228 (@33)
    Y_WHILE    reduce using rule 228 (@33)
    Y_IF       reduce using rule 228 (@33)
    Y_FOR      reduce using rule 228 (@33)
    Y_BREAK    reduce using rule 228 (@33)
    Y_NEXT     reduce using rule 228 (@33)
    Y_SWITCH   reduce using rule 228 (@33)
    Y_CASE     reduce using rule 228 (@33)
    Y_DEFAULT  reduce using rule 228 (@33)
    Y_RETURN   reduce using rule 228 (@33)
    Y_GOTO     reduce using rule 228 (@33)
    '='        reduce using rule 228 (@33)
    '{'        reduce using rule 228 (@33)
    ';'        reduce using rule 228 (@33)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 345
    @33            go to state 56


state 291

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  153 assign: ref @15 assign_oper expr .

    YOP_OR      shift, and go to state 213
    YOP_AND     shift, and go to state 214
    YOP_NE      shift, and go to state 215
    YOP_EQ      shift, and go to state 216
    '<'         shift, and go to state 217
    '>'         shift, and go to state 218
    YOP_GE      shift, and go to state 219
    YOP_LE      shift, and go to state 220
    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227

    $default  reduce using rule 153 (assign)


state 292

   80 expr0: Y_CONSTANT .
  246 index: Y_CONSTANT .

    ']'       reduce using rule 246 (index)
    ','       reduce using rule 246 (index)
    $default  reduce using rule 80 (expr0)


state 293

  245 index: '*' .

    $default  reduce using rule 245 (index)


state 294

   79 expr0: expr1 .
  243 index: expr1 .

    ']'       reduce using rule 243 (index)
    ','       reduce using rule 243 (index)
    $default  reduce using rule 79 (expr0)


state 295

   78 expr: ref .
  244 index: ref .

    ']'       reduce using rule 244 (index)
    ','       reduce using rule 244 (index)
    $default  reduce using rule 78 (expr)


state 296

  239 ref: param @34 '[' index_list . ']'

    ']'  shift, and go to state 346


state 297

  240 index_list: index .
  242           | index . @35 DELIM index_list

    ','       reduce using rule 241 (@35)
    $default  reduce using rule 240 (index_list)

    @35  go to state 347


state 298

  169 command: tasknam @18 BARG @19 . args EARG

    Y_SCAN       shift, and go to state 136
    Y_SCANF      shift, and go to state 137
    Y_FSCAN      shift, and go to state 138
    Y_FSCANF     shift, and go to state 139
    Y_APPEND     shift, and go to state 348
    Y_ALLAPPEND  shift, and go to state 349
    Y_ALLREDIR   shift, and go to state 350
    Y_GSREDIR    shift, and go to state 351
    Y_CONSTANT   shift, and go to state 140
    Y_IDENT      shift, and go to state 141
    Y_INT        shift, and go to state 142
    Y_REAL       shift, and go to state 143
    Y_GCUR       shift, and go to state 144
    Y_IMCUR      shift, and go to state 145
    Y_UKEY       shift, and go to state 146
    Y_PSET       shift, and go to state 147
    '<'          shift, and go to state 352
    '>'          shift, and go to state 353
    '-'          shift, and go to state 148
    YOP_NOT      shift, and go to state 149
    ','          shift, and go to state 118
    '('          shift, and go to state 49

    ','       [reduce using rule 175 (arg)]
    $default  reduce using rule 175 (arg)

    expr      go to state 162
    expr0     go to state 354
    expr1     go to state 152
    intrinsx  go to state 153
    args      go to state 355
    arglist   go to state 356
    arg       go to state 357
    ref       go to state 358
    intrins   go to state 155
    param     go to state 359
    DELIM     go to state 360
    LP        go to state 156


state 299

   64 init_elem: Y_CONSTANT LP const . RP

    ')'  shift, and go to state 126

    RP  go to state 361


state 300

   75 option: Y_IDENT '=' const .

    $default  reduce using rule 75 (option)


state 301

   62 init_list: init_list DELIM init_elem .

    $default  reduce using rule 62 (init_list)


state 302

   70 options_list: init_list DELIM options .
   74 options: options . DELIM option

    ','  shift, and go to state 118

    $default  reduce using rule 70 (options_list)

    DELIM  go to state 249


state 303

   47 var_decl_plus: var_decl '{' options_list ';' '}' .

    $default  reduce using rule 47 (var_decl_plus)


state 304

   74 options: options DELIM option .

    $default  reduce using rule 74 (options)


state 305

   62 init_list: init_list DELIM . init_elem

    Y_CONSTANT  shift, and go to state 182
    '+'         shift, and go to state 184
    '-'         shift, and go to state 185

    init_elem  go to state 301
    const      go to state 188
    number     go to state 189
    sign       go to state 190


state 306

   53 var_def: var_name @7 '[' init_index_list ']' .

    $default  reduce using rule 53 (var_def)


state 307

   58 init_index_list: init_index_list DELIM . init_index_range

    Y_CONSTANT  shift, and go to state 251
    '+'         shift, and go to state 184
    '-'         shift, and go to state 185

    init_index_range  go to state 362
    const             go to state 254
    number            go to state 189
    sign              go to state 190


state 308

   60 init_index_range: const ':' . const

    Y_CONSTANT  shift, and go to state 251
    '+'         shift, and go to state 184
    '-'         shift, and go to state 185

    const   go to state 363
    number  go to state 189
    sign    go to state 190


state 309

  224 label_stmt: Y_IDENT ':' opnl @32 xstmt .

    $default  reduce using rule 224 (label_stmt)


state 310

  202 while: Y_WHILE LP @23 expr RP . @24 opnl xstmt

    $default  reduce using rule 201 (@24)

    @24  go to state 364


state 311

  197 if_stat: Y_IF LP expr RP @21 . opnl xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 365
    NL    go to state 66


state 312

  206 for: Y_FOR LP opnl xassign ';' . opnl @25 xexpr ';' opnl @26 xassign RP opnl @27 stmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 366
    NL    go to state 66


state 313

  150 assign: ref equals . expr0
  151       | ref equals . ref

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 162
    expr0     go to state 239
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 240
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 314

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  212 switch: Y_SWITCH opnl LP opnl expr . opnl RP opnl @28 xstmt

    Y_NEWLINE   shift, and go to state 10
    YOP_OR      shift, and go to state 213
    YOP_AND     shift, and go to state 214
    YOP_NE      shift, and go to state 215
    YOP_EQ      shift, and go to state 216
    '<'         shift, and go to state 217
    '>'         shift, and go to state 218
    YOP_GE      shift, and go to state 219
    YOP_LE      shift, and go to state 220
    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227

    $default  reduce using rule 235 (opnl)

    opnl  go to state 367
    NL    go to state 66


state 315

  215 case: Y_CASE @29 const_expr_list ':' opnl . @30 xstmt

    $default  reduce using rule 214 (@30)

    @30  go to state 368


state 316

  233 const_expr_list: const_expr DELIM const_expr_list .

    $default  reduce using rule 233 (const_expr_list)


state 317

  217 default: Y_DEFAULT ':' opnl @31 xstmt .

    $default  reduce using rule 217 (default)


state 318

  118 scanarg: Y_IDENT .
  119        | Y_IDENT . DELIM scanarg

    ','  shift, and go to state 118

    $default  reduce using rule 118 (scanarg)

    DELIM  go to state 369


state 319

  104 expr1: Y_SCAN LP @8 scanarg . RP

    ')'  shift, and go to state 126

    RP  go to state 370


state 320

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  116 scanfmt: expr .

    YOP_OR      shift, and go to state 213
    YOP_AND     shift, and go to state 214
    YOP_NE      shift, and go to state 215
    YOP_EQ      shift, and go to state 216
    '<'         shift, and go to state 217
    '>'         shift, and go to state 218
    YOP_GE      shift, and go to state 219
    YOP_LE      shift, and go to state 220
    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227

    $default  reduce using rule 116 (scanfmt)


state 321

  106 expr1: Y_SCANF LP @9 scanfmt . DELIM scanarg RP

    ','  shift, and go to state 118

    DELIM  go to state 371


state 322

  108 expr1: Y_FSCAN LP @10 scanarg . RP

    ')'  shift, and go to state 126

    RP  go to state 372


state 323

  110 expr1: Y_FSCANF LP Y_IDENT DELIM . @11 scanfmt DELIM scanarg RP

    $default  reduce using rule 109 (@11)

    @11  go to state 373


state 324

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
   99      | expr YOP_OR opnl expr .
  100      | expr . YOP_AND opnl expr

    YOP_AND     shift, and go to state 214
    YOP_NE      shift, and go to state 215
    YOP_EQ      shift, and go to state 216
    '<'         shift, and go to state 217
    '>'         shift, and go to state 218
    YOP_GE      shift, and go to state 219
    YOP_LE      shift, and go to state 220
    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227

    $default  reduce using rule 99 (expr1)


state 325

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  100      | expr YOP_AND opnl expr .

    YOP_NE      shift, and go to state 215
    YOP_EQ      shift, and go to state 216
    '<'         shift, and go to state 217
    '>'         shift, and go to state 218
    YOP_GE      shift, and go to state 219
    YOP_LE      shift, and go to state 220
    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227

    $default  reduce using rule 100 (expr1)


state 326

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   98      | expr YOP_NE opnl expr .
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    '<'         shift, and go to state 217
    '>'         shift, and go to state 218
    YOP_GE      shift, and go to state 219
    YOP_LE      shift, and go to state 220
    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227

    $default  reduce using rule 98 (expr1)


state 327

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   97      | expr YOP_EQ opnl expr .
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    '<'         shift, and go to state 217
    '>'         shift, and go to state 218
    YOP_GE      shift, and go to state 219
    YOP_LE      shift, and go to state 220
    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227

    $default  reduce using rule 97 (expr1)


state 328

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   93      | expr '<' opnl expr .
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227

    $default  reduce using rule 93 (expr1)


state 329

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   94      | expr '>' opnl expr .
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227

    $default  reduce using rule 94 (expr1)


state 330

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   96      | expr YOP_GE opnl expr .
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227

    $default  reduce using rule 96 (expr1)


state 331

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   95      | expr YOP_LE opnl expr .
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227

    $default  reduce using rule 95 (expr1)


state 332

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   92      | expr YOP_CONCAT opnl expr .
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    '+'      shift, and go to state 222
    '-'      shift, and go to state 223
    '*'      shift, and go to state 224
    '/'      shift, and go to state 225
    '%'      shift, and go to state 226
    YOP_POW  shift, and go to state 227

    $default  reduce using rule 92 (expr1)


state 333

   86 expr1: expr . '+' opnl expr
   86      | expr '+' opnl expr .
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    '*'      shift, and go to state 224
    '/'      shift, and go to state 225
    '%'      shift, and go to state 226
    YOP_POW  shift, and go to state 227

    $default  reduce using rule 86 (expr1)


state 334

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   87      | expr '-' opnl expr .
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    '*'      shift, and go to state 224
    '/'      shift, and go to state 225
    '%'      shift, and go to state 226
    YOP_POW  shift, and go to state 227

    $default  reduce using rule 87 (expr1)


state 335

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   88      | expr '*' opnl expr .
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_POW  shift, and go to state 227

    $default  reduce using rule 88 (expr1)


state 336

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   89      | expr '/' opnl expr .
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_POW  shift, and go to state 227

    $default  reduce using rule 89 (expr1)


state 337

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   91      | expr '%' opnl expr .
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    YOP_POW  shift, and go to state 227

    $default  reduce using rule 91 (expr1)


state 338

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   90      | expr YOP_POW opnl expr .
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr

    $default  reduce using rule 90 (expr1)


state 339

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  121 intrarg: expr .

    YOP_OR      shift, and go to state 213
    YOP_AND     shift, and go to state 214
    YOP_NE      shift, and go to state 215
    YOP_EQ      shift, and go to state 216
    '<'         shift, and go to state 217
    '>'         shift, and go to state 218
    YOP_GE      shift, and go to state 219
    YOP_LE      shift, and go to state 220
    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227

    $default  reduce using rule 121 (intrarg)


state 340

  112 expr1: intrinsx LP @12 intrarg . RP
  122 intrarg: intrarg . DELIM expr

    ','  shift, and go to state 118
    ')'  shift, and go to state 126

    DELIM  go to state 374
    RP     go to state 375


state 341

  147 c_blk: '{' @13 s_list opnl @14 . '}'

    '}'  shift, and go to state 376


state 342

  166 pipe: Y_ALLPIPE opnl .

    $default  reduce using rule 166 (pipe)


state 343

  165 pipe: '|' opnl .

    $default  reduce using rule 165 (pipe)


state 344

  164 cmdpipe: cmdpipe pipe @17 . command

    Y_IDENT  shift, and go to state 377

    command  go to state 378
    tasknam  go to state 114


state 345

  199 ifelse: if_stat Y_ELSE @22 opnl xstmt .

    $default  reduce using rule 199 (ifelse)


state 346

  239 ref: param @34 '[' index_list ']' .

    $default  reduce using rule 239 (ref)


state 347

  242 index_list: index @35 . DELIM index_list

    ','  shift, and go to state 118

    DELIM  go to state 379


state 348

  185 arg: Y_APPEND . file

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 162
    expr0     go to state 380
    expr1     go to state 152
    intrinsx  go to state 153
    file      go to state 381
    ref       go to state 154
    intrins   go to state 155
    param     go to state 382
    LP        go to state 156


state 349

  186 arg: Y_ALLAPPEND . file

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 162
    expr0     go to state 380
    expr1     go to state 152
    intrinsx  go to state 153
    file      go to state 383
    ref       go to state 154
    intrins   go to state 155
    param     go to state 382
    LP        go to state 156


state 350

  184 arg: Y_ALLREDIR . file

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 162
    expr0     go to state 380
    expr1     go to state 152
    intrinsx  go to state 153
    file      go to state 384
    ref       go to state 154
    intrins   go to state 155
    param     go to state 382
    LP        go to state 156


state 351

  187 arg: Y_GSREDIR . file

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 162
    expr0     go to state 380
    expr1     go to state 152
    intrinsx  go to state 153
    file      go to state 385
    ref       go to state 154
    intrins   go to state 155
    param     go to state 382
    LP        go to state 156


state 352

  182 arg: '<' . file

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 162
    expr0     go to state 380
    expr1     go to state 152
    intrinsx  go to state 153
    file      go to state 386
    ref       go to state 154
    intrins   go to state 155
    param     go to state 382
    LP        go to state 156


state 353

  183 arg: '>' . file

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 162
    expr0     go to state 380
    expr1     go to state 152
    intrinsx  go to state 153
    file      go to state 387
    ref       go to state 154
    intrins   go to state 155
    param     go to state 382
    LP        go to state 156


state 354

   77 expr: expr0 .
  176 arg: expr0 .

    Y_ALLPIPE  reduce using rule 176 (arg)
    Y_NEWLINE  reduce using rule 176 (arg)
    ';'        reduce using rule 176 (arg)
    '|'        reduce using rule 176 (arg)
    ','        reduce using rule 176 (arg)
    ')'        reduce using rule 176 (arg)
    $default   reduce using rule 77 (expr)


state 355

  169 command: tasknam @18 BARG @19 args . EARG

    ')'  shift, and go to state 126

    $default  reduce using rule 255 (EARG)

    EARG  go to state 388
    RP    go to state 389


state 356

  172 args: arglist .
  174 arglist: arglist . DELIM arg

    ','  shift, and go to state 118

    $default  reduce using rule 172 (args)

    DELIM  go to state 390


state 357

  173 arglist: arg .

    $default  reduce using rule 173 (arglist)


state 358

   78 expr: ref .
  177 arg: ref .
  178    | ref . '=' expr0
  179    | ref . '=' ref

    '='  shift, and go to state 391

    Y_ALLPIPE  reduce using rule 177 (arg)
    Y_NEWLINE  reduce using rule 177 (arg)
    ';'        reduce using rule 177 (arg)
    '|'        reduce using rule 177 (arg)
    ','        reduce using rule 177 (arg)
    ')'        reduce using rule 177 (arg)
    $default   reduce using rule 78 (expr)


state 359

  180 arg: param . '+'
  181    | param . '-'
  237 ref: param .
  239    | param . @34 '[' index_list ']'

    '+'  shift, and go to state 392
    '-'  shift, and go to state 393

    '+'       [reduce using rule 237 (ref)]
    '-'       [reduce using rule 237 (ref)]
    '['       reduce using rule 238 (@34)
    $default  reduce using rule 237 (ref)

    @34  go to state 178


state 360

  171 args: DELIM . @20 arglist

    $default  reduce using rule 170 (@20)

    @20  go to state 394


state 361

   64 init_elem: Y_CONSTANT LP const RP .

    $default  reduce using rule 64 (init_elem)


state 362

   58 init_index_list: init_index_list DELIM init_index_range .

    $default  reduce using rule 58 (init_index_list)


state 363

   60 init_index_range: const ':' const .

    $default  reduce using rule 60 (init_index_range)


state 364

  202 while: Y_WHILE LP @23 expr RP @24 . opnl xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 395
    NL    go to state 66


state 365

  197 if_stat: Y_IF LP expr RP @21 opnl . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 228 (@33)
    Y_IDENT    reduce using rule 228 (@33)
    Y_WHILE    reduce using rule 228 (@33)
    Y_IF       reduce using rule 228 (@33)
    Y_FOR      reduce using rule 228 (@33)
    Y_BREAK    reduce using rule 228 (@33)
    Y_NEXT     reduce using rule 228 (@33)
    Y_SWITCH   reduce using rule 228 (@33)
    Y_CASE     reduce using rule 228 (@33)
    Y_DEFAULT  reduce using rule 228 (@33)
    Y_RETURN   reduce using rule 228 (@33)
    Y_GOTO     reduce using rule 228 (@33)
    '='        reduce using rule 228 (@33)
    '{'        reduce using rule 228 (@33)
    ';'        reduce using rule 228 (@33)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 396
    @33            go to state 56


state 366

  206 for: Y_FOR LP opnl xassign ';' opnl . @25 xexpr ';' opnl @26 xassign RP opnl @27 stmt

    $default  reduce using rule 203 (@25)

    @25  go to state 397


state 367

  212 switch: Y_SWITCH opnl LP opnl expr opnl . RP opnl @28 xstmt

    ')'  shift, and go to state 126

    RP  go to state 398


state 368

  215 case: Y_CASE @29 const_expr_list ':' opnl @30 . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 228 (@33)
    Y_IDENT    reduce using rule 228 (@33)
    Y_WHILE    reduce using rule 228 (@33)
    Y_IF       reduce using rule 228 (@33)
    Y_FOR      reduce using rule 228 (@33)
    Y_BREAK    reduce using rule 228 (@33)
    Y_NEXT     reduce using rule 228 (@33)
    Y_SWITCH   reduce using rule 228 (@33)
    Y_CASE     reduce using rule 228 (@33)
    Y_DEFAULT  reduce using rule 228 (@33)
    Y_RETURN   reduce using rule 228 (@33)
    Y_GOTO     reduce using rule 228 (@33)
    '='        reduce using rule 228 (@33)
    '{'        reduce using rule 228 (@33)
    ';'        reduce using rule 228 (@33)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 399
    @33            go to state 56


state 369

  119 scanarg: Y_IDENT DELIM . scanarg

    Y_IDENT  shift, and go to state 318

    $default  reduce using rule 117 (scanarg)

    scanarg  go to state 400


state 370

  104 expr1: Y_SCAN LP @8 scanarg RP .

    $default  reduce using rule 104 (expr1)


state 371

  106 expr1: Y_SCANF LP @9 scanfmt DELIM . scanarg RP

    Y_IDENT  shift, and go to state 318

    $default  reduce using rule 117 (scanarg)

    scanarg  go to state 401


state 372

  108 expr1: Y_FSCAN LP @10 scanarg RP .

    $default  reduce using rule 108 (expr1)


state 373

  110 expr1: Y_FSCANF LP Y_IDENT DELIM @11 . scanfmt DELIM scanarg RP

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 320
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    scanfmt   go to state 402
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 374

  122 intrarg: intrarg DELIM . expr

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 403
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 375

  112 expr1: intrinsx LP @12 intrarg RP .

    $default  reduce using rule 112 (expr1)


state 376

  147 c_blk: '{' @13 s_list opnl @14 '}' .

    $default  reduce using rule 147 (c_blk)


state 377

  249 tasknam: Y_IDENT .

    $default  reduce using rule 249 (tasknam)


state 378

  164 cmdpipe: cmdpipe pipe @17 command .

    $default  reduce using rule 164 (cmdpipe)


state 379

  242 index_list: index @35 DELIM . index_list

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 292
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    '*'         shift, and go to state 293
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr        go to state 162
    expr0       go to state 151
    expr1       go to state 294
    intrinsx    go to state 153
    ref         go to state 295
    index_list  go to state 404
    index       go to state 297
    intrins     go to state 155
    param       go to state 113
    LP          go to state 156


state 380

   77 expr: expr0 .
  188 file: expr0 .

    Y_ALLPIPE  reduce using rule 188 (file)
    Y_NEWLINE  reduce using rule 188 (file)
    ';'        reduce using rule 188 (file)
    '|'        reduce using rule 188 (file)
    ','        reduce using rule 188 (file)
    ')'        reduce using rule 188 (file)
    $default   reduce using rule 77 (expr)


state 381

  185 arg: Y_APPEND file .

    $default  reduce using rule 185 (arg)


state 382

  189 file: param .
  237 ref: param .
  239    | param . @34 '[' index_list ']'

    Y_ALLPIPE  reduce using rule 189 (file)
    Y_NEWLINE  reduce using rule 189 (file)
    ';'        reduce using rule 189 (file)
    '['        reduce using rule 238 (@34)
    '|'        reduce using rule 189 (file)
    ','        reduce using rule 189 (file)
    ')'        reduce using rule 189 (file)
    $default   reduce using rule 237 (ref)

    @34  go to state 178


state 383

  186 arg: Y_ALLAPPEND file .

    $default  reduce using rule 186 (arg)


state 384

  184 arg: Y_ALLREDIR file .

    $default  reduce using rule 184 (arg)


state 385

  187 arg: Y_GSREDIR file .

    $default  reduce using rule 187 (arg)


state 386

  182 arg: '<' file .

    $default  reduce using rule 182 (arg)


state 387

  183 arg: '>' file .

    $default  reduce using rule 183 (arg)


state 388

  169 command: tasknam @18 BARG @19 args EARG .

    $default  reduce using rule 169 (command)


state 389

  256 EARG: RP .

    $default  reduce using rule 256 (EARG)


state 390

  174 arglist: arglist DELIM . arg

    Y_SCAN       shift, and go to state 136
    Y_SCANF      shift, and go to state 137
    Y_FSCAN      shift, and go to state 138
    Y_FSCANF     shift, and go to state 139
    Y_APPEND     shift, and go to state 348
    Y_ALLAPPEND  shift, and go to state 349
    Y_ALLREDIR   shift, and go to state 350
    Y_GSREDIR    shift, and go to state 351
    Y_CONSTANT   shift, and go to state 140
    Y_IDENT      shift, and go to state 141
    Y_INT        shift, and go to state 142
    Y_REAL       shift, and go to state 143
    Y_GCUR       shift, and go to state 144
    Y_IMCUR      shift, and go to state 145
    Y_UKEY       shift, and go to state 146
    Y_PSET       shift, and go to state 147
    '<'          shift, and go to state 352
    '>'          shift, and go to state 353
    '-'          shift, and go to state 148
    YOP_NOT      shift, and go to state 149
    '('          shift, and go to state 49

    $default  reduce using rule 175 (arg)

    expr      go to state 162
    expr0     go to state 354
    expr1     go to state 152
    intrinsx  go to state 153
    arg       go to state 405
    ref       go to state 358
    intrins   go to state 155
    param     go to state 359
    LP        go to state 156


state 391

  178 arg: ref '=' . expr0
  179    | ref '=' . ref

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    expr      go to state 162
    expr0     go to state 406
    expr1     go to state 152
    intrinsx  go to state 153
    ref       go to state 407
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 392

  180 arg: param '+' .

    $default  reduce using rule 180 (arg)


state 393

  181 arg: param '-' .

    $default  reduce using rule 181 (arg)


state 394

  171 args: DELIM @20 . arglist

    Y_SCAN       shift, and go to state 136
    Y_SCANF      shift, and go to state 137
    Y_FSCAN      shift, and go to state 138
    Y_FSCANF     shift, and go to state 139
    Y_APPEND     shift, and go to state 348
    Y_ALLAPPEND  shift, and go to state 349
    Y_ALLREDIR   shift, and go to state 350
    Y_GSREDIR    shift, and go to state 351
    Y_CONSTANT   shift, and go to state 140
    Y_IDENT      shift, and go to state 141
    Y_INT        shift, and go to state 142
    Y_REAL       shift, and go to state 143
    Y_GCUR       shift, and go to state 144
    Y_IMCUR      shift, and go to state 145
    Y_UKEY       shift, and go to state 146
    Y_PSET       shift, and go to state 147
    '<'          shift, and go to state 352
    '>'          shift, and go to state 353
    '-'          shift, and go to state 148
    YOP_NOT      shift, and go to state 149
    '('          shift, and go to state 49

    $default  reduce using rule 175 (arg)

    expr      go to state 162
    expr0     go to state 354
    expr1     go to state 152
    intrinsx  go to state 153
    arglist   go to state 408
    arg       go to state 357
    ref       go to state 358
    intrins   go to state 155
    param     go to state 359
    LP        go to state 156


state 395

  202 while: Y_WHILE LP @23 expr RP @24 opnl . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 228 (@33)
    Y_IDENT    reduce using rule 228 (@33)
    Y_WHILE    reduce using rule 228 (@33)
    Y_IF       reduce using rule 228 (@33)
    Y_FOR      reduce using rule 228 (@33)
    Y_BREAK    reduce using rule 228 (@33)
    Y_NEXT     reduce using rule 228 (@33)
    Y_SWITCH   reduce using rule 228 (@33)
    Y_CASE     reduce using rule 228 (@33)
    Y_DEFAULT  reduce using rule 228 (@33)
    Y_RETURN   reduce using rule 228 (@33)
    Y_GOTO     reduce using rule 228 (@33)
    '='        reduce using rule 228 (@33)
    '{'        reduce using rule 228 (@33)
    ';'        reduce using rule 228 (@33)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 409
    @33            go to state 56


state 396

  197 if_stat: Y_IF LP expr RP @21 opnl xstmt .

    $default  reduce using rule 197 (if_stat)


state 397

  206 for: Y_FOR LP opnl xassign ';' opnl @25 . xexpr ';' opnl @26 xassign RP opnl @27 stmt

    Y_SCAN      shift, and go to state 136
    Y_SCANF     shift, and go to state 137
    Y_FSCAN     shift, and go to state 138
    Y_FSCANF    shift, and go to state 139
    Y_CONSTANT  shift, and go to state 140
    Y_IDENT     shift, and go to state 141
    Y_INT       shift, and go to state 142
    Y_REAL      shift, and go to state 143
    Y_GCUR      shift, and go to state 144
    Y_IMCUR     shift, and go to state 145
    Y_UKEY      shift, and go to state 146
    Y_PSET      shift, and go to state 147
    '-'         shift, and go to state 148
    YOP_NOT     shift, and go to state 149
    '('         shift, and go to state 49

    $default  reduce using rule 210 (xexpr)

    expr      go to state 410
    expr0     go to state 151
    expr1     go to state 152
    intrinsx  go to state 153
    xexpr     go to state 411
    ref       go to state 154
    intrins   go to state 155
    param     go to state 113
    LP        go to state 156


state 398

  212 switch: Y_SWITCH opnl LP opnl expr opnl RP . opnl @28 xstmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 412
    NL    go to state 66


state 399

  215 case: Y_CASE @29 const_expr_list ':' opnl @30 xstmt .

    $default  reduce using rule 215 (case)


state 400

  119 scanarg: Y_IDENT DELIM scanarg .

    $default  reduce using rule 119 (scanarg)


state 401

  106 expr1: Y_SCANF LP @9 scanfmt DELIM scanarg . RP

    ')'  shift, and go to state 126

    RP  go to state 413


state 402

  110 expr1: Y_FSCANF LP Y_IDENT DELIM @11 scanfmt . DELIM scanarg RP

    ','  shift, and go to state 118

    DELIM  go to state 414


state 403

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  122 intrarg: intrarg DELIM expr .

    YOP_OR      shift, and go to state 213
    YOP_AND     shift, and go to state 214
    YOP_NE      shift, and go to state 215
    YOP_EQ      shift, and go to state 216
    '<'         shift, and go to state 217
    '>'         shift, and go to state 218
    YOP_GE      shift, and go to state 219
    YOP_LE      shift, and go to state 220
    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227

    $default  reduce using rule 122 (intrarg)


state 404

  242 index_list: index @35 DELIM index_list .

    $default  reduce using rule 242 (index_list)


state 405

  174 arglist: arglist DELIM arg .

    $default  reduce using rule 174 (arglist)


state 406

   77 expr: expr0 .
  178 arg: ref '=' expr0 .

    Y_ALLPIPE  reduce using rule 178 (arg)
    Y_NEWLINE  reduce using rule 178 (arg)
    ';'        reduce using rule 178 (arg)
    '|'        reduce using rule 178 (arg)
    ','        reduce using rule 178 (arg)
    ')'        reduce using rule 178 (arg)
    $default   reduce using rule 77 (expr)


state 407

   78 expr: ref .
  179 arg: ref '=' ref .

    Y_ALLPIPE  reduce using rule 179 (arg)
    Y_NEWLINE  reduce using rule 179 (arg)
    ';'        reduce using rule 179 (arg)
    '|'        reduce using rule 179 (arg)
    ','        reduce using rule 179 (arg)
    ')'        reduce using rule 179 (arg)
    $default   reduce using rule 78 (expr)


state 408

  171 args: DELIM @20 arglist .
  174 arglist: arglist . DELIM arg

    ','  shift, and go to state 118

    $default  reduce using rule 171 (args)

    DELIM  go to state 390


state 409

  202 while: Y_WHILE LP @23 expr RP @24 opnl xstmt .

    $default  reduce using rule 202 (while)


state 410

   86 expr1: expr . '+' opnl expr
   87      | expr . '-' opnl expr
   88      | expr . '*' opnl expr
   89      | expr . '/' opnl expr
   90      | expr . YOP_POW opnl expr
   91      | expr . '%' opnl expr
   92      | expr . YOP_CONCAT opnl expr
   93      | expr . '<' opnl expr
   94      | expr . '>' opnl expr
   95      | expr . YOP_LE opnl expr
   96      | expr . YOP_GE opnl expr
   97      | expr . YOP_EQ opnl expr
   98      | expr . YOP_NE opnl expr
   99      | expr . YOP_OR opnl expr
  100      | expr . YOP_AND opnl expr
  209 xexpr: expr .

    YOP_OR      shift, and go to state 213
    YOP_AND     shift, and go to state 214
    YOP_NE      shift, and go to state 215
    YOP_EQ      shift, and go to state 216
    '<'         shift, and go to state 217
    '>'         shift, and go to state 218
    YOP_GE      shift, and go to state 219
    YOP_LE      shift, and go to state 220
    YOP_CONCAT  shift, and go to state 221
    '+'         shift, and go to state 222
    '-'         shift, and go to state 223
    '*'         shift, and go to state 224
    '/'         shift, and go to state 225
    '%'         shift, and go to state 226
    YOP_POW     shift, and go to state 227

    $default  reduce using rule 209 (xexpr)


state 411

  206 for: Y_FOR LP opnl xassign ';' opnl @25 xexpr . ';' opnl @26 xassign RP opnl @27 stmt

    ';'  shift, and go to state 415


state 412

  212 switch: Y_SWITCH opnl LP opnl expr opnl RP opnl . @28 xstmt

    $default  reduce using rule 211 (@28)

    @28  go to state 416


state 413

  106 expr1: Y_SCANF LP @9 scanfmt DELIM scanarg RP .

    $default  reduce using rule 106 (expr1)


state 414

  110 expr1: Y_FSCANF LP Y_IDENT DELIM @11 scanfmt DELIM . scanarg RP

    Y_IDENT  shift, and go to state 318

    $default  reduce using rule 117 (scanarg)

    scanarg  go to state 417


state 415

  206 for: Y_FOR LP opnl xassign ';' opnl @25 xexpr ';' . opnl @26 xassign RP opnl @27 stmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 418
    NL    go to state 66


state 416

  212 switch: Y_SWITCH opnl LP opnl expr opnl RP opnl @28 . xstmt

    error     shift, and go to state 53
    Y_BOOL    shift, and go to state 18
    Y_INT     shift, and go to state 19
    Y_REAL    shift, and go to state 20
    Y_STRING  shift, and go to state 21
    Y_FILE    shift, and go to state 22
    Y_STRUCT  shift, and go to state 23
    Y_GCUR    shift, and go to state 24
    Y_IMCUR   shift, and go to state 25
    Y_UKEY    shift, and go to state 26
    Y_PSET    shift, and go to state 27

    Y_OSESC    reduce using rule 228 (@33)
    Y_IDENT    reduce using rule 228 (@33)
    Y_WHILE    reduce using rule 228 (@33)
    Y_IF       reduce using rule 228 (@33)
    Y_FOR      reduce using rule 228 (@33)
    Y_BREAK    reduce using rule 228 (@33)
    Y_NEXT     reduce using rule 228 (@33)
    Y_SWITCH   reduce using rule 228 (@33)
    Y_CASE     reduce using rule 228 (@33)
    Y_DEFAULT  reduce using rule 228 (@33)
    Y_RETURN   reduce using rule 228 (@33)
    Y_GOTO     reduce using rule 228 (@33)
    '='        reduce using rule 228 (@33)
    '{'        reduce using rule 228 (@33)
    ';'        reduce using rule 228 (@33)

    var_decl_stmt  go to state 54
    typedefs       go to state 33
    xstmt          go to state 419
    @33            go to state 56


state 417

  110 expr1: Y_FSCANF LP Y_IDENT DELIM @11 scanfmt DELIM scanarg . RP

    ')'  shift, and go to state 126

    RP  go to state 420


state 418

  206 for: Y_FOR LP opnl xassign ';' opnl @25 xexpr ';' opnl . @26 xassign RP opnl @27 stmt

    $default  reduce using rule 204 (@26)

    @26  go to state 421


state 419

  212 switch: Y_SWITCH opnl LP opnl expr opnl RP opnl @28 xstmt .

    $default  reduce using rule 212 (switch)


state 420

  110 expr1: Y_FSCANF LP Y_IDENT DELIM @11 scanfmt DELIM scanarg RP .

    $default  reduce using rule 110 (expr1)


state 421

  206 for: Y_FOR LP opnl xassign ';' opnl @25 xexpr ';' opnl @26 . xassign RP opnl @27 stmt

    Y_IDENT  shift, and go to state 37

    $default  reduce using rule 208 (xassign)

    assign   go to state 258
    xassign  go to state 422
    ref      go to state 260
    param    go to state 113


state 422

  206 for: Y_FOR LP opnl xassign ';' opnl @25 xexpr ';' opnl @26 xassign . RP opnl @27 stmt

    ')'  shift, and go to state 126

    RP  go to state 423


state 423

  206 for: Y_FOR LP opnl xassign ';' opnl @25 xexpr ';' opnl @26 xassign RP . opnl @27 stmt

    Y_NEWLINE  shift, and go to state 10

    $default  reduce using rule 235 (opnl)

    opnl  go to state 424
    NL    go to state 66


state 424

  206 for: Y_FOR LP opnl xassign ';' opnl @25 xexpr ';' opnl @26 xassign RP opnl . @27 stmt

    $default  reduce using rule 205 (@27)

    @27  go to state 425


state 425

  206 for: Y_FOR LP opnl xassign ';' opnl @25 xexpr ';' opnl @26 xassign RP opnl @27 . stmt

    Y_OSESC    shift, and go to state 72
    Y_IDENT    shift, and go to state 73
    Y_WHILE    shift, and go to state 74
    Y_IF       shift, and go to state 75
    Y_FOR      shift, and go to state 76
    Y_BREAK    shift, and go to state 77
    Y_NEXT     shift, and go to state 78
    Y_SWITCH   shift, and go to state 79
    Y_CASE     shift, and go to state 80
    Y_DEFAULT  shift, and go to state 81
    Y_RETURN   shift, and go to state 82
    Y_GOTO     shift, and go to state 83
    '='        shift, and go to state 84
    '{'        shift, and go to state 85
    ';'        shift, and go to state 86

    stmt        go to state 426
    c_stmt      go to state 88
    c_blk       go to state 89
    assign      go to state 90
    equals      go to state 91
    cmdlist     go to state 92
    command     go to state 93
    immed       go to state 94
    inspect     go to state 95
    osesc       go to state 96
    popstk      go to state 97
    if          go to state 98
    if_stat     go to state 99
    ifelse      go to state 100
    while       go to state 101
    for         go to state 102
    switch      go to state 103
    case        go to state 104
    default     go to state 105
    next        go to state 106
    break       go to state 107
    return      go to state 108
    label_stmt  go to state 109
    goto        go to state 110
    nullstmt    go to state 111
    ref         go to state 112
    param       go to state 113
    tasknam     go to state 114


state 426

  206 for: Y_FOR LP opnl xassign ';' opnl @25 xexpr ';' opnl @26 xassign RP opnl @27 stmt .

    $default  reduce using rule 206 (for)
