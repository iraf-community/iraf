.help rimcursor Jan90 lists
.ih
NAME
rimcursor -- repeatedly read and return image cursor values
.ih
USAGE
rimcursor [image]
.ih
PARAMETERS
.ls image
The name of the reference image to which coordinates should refer.
This parameter will be queried only if \fBrimcursor\fR cannot obtain
the reference image name by other means; e.g. when cursor reads are
being performed using the image display, \fBrimcursor\fR will assume that
\fIimage\fR is the currently displayed image.
.le
.ls wcs = "logical"
The world coordinate system (\fIwcs\fR) to be used for coordinate output.
The following standard world systems are predefined.
.ls logical
Logical coordinates are image pixel coordinates relative to the image currently
being displayed.  This is what the raw cursor read returns, so by default,
\fBrimcursor\fR merely passes back the raw image cursor coordinates as
would be returned by "=imcur".
.le
.ls physical
The physical coordinate system is invariant with respect to linear
transformations of the physical image matrix.  For example, if the reference
image was created by extracting a section of another image, the physical
coordinates of an object in the reference image will be the pixel coordinates
of the same object in the original image.  The physical coordinate system
thus provides a consistent coordinate system (a given object always has the
same coordinates) for all images, regardless of whether any user world
coordinate systems have been defined.
.le
.ls world
The "world" coordinate system is the \fIcurrent default WCS\fR.
The default world system is the system named by the environment variable
\fIdefwcs\fR if defined in the user environment and present in the reference
image WCS description, else it is the first user WCS defined for the image
(if any), else physical coordinates are returned.
.le

In addition to these three reserved WCS names, the name of any user WCS
defined for the reference image may be given.  A user world coordinate system
may be any linear or nonlinear world system.
.le
.ls cursor = ""
The source for image cursor input.  By default, the hardware image cursor
is read.
.le
.ih
DESCRIPTION
The task \fBrimcursor\fR iteratively reads the image display cursor,
writing the cursor values to the standard output.  The standard output
may be redirected into a text file to generate a coordinate list for use
as input to other tasks.  Any IRAF program which normally reads the image
cursor interactively may be run taking input from a list prepared
using \fBrimcursor\fR.

An image should be displayed on the image display device before running
\fBrimcursor\fR, and the device set to display the desired frame.
When the program is run, a loop is entered reading the image
cursor until the end of file character (e.g., <ctrl/d> or <ctrl/z>) is typed.
Each cursor read causes a line to be printed on the standard output, after
which the cursor is again read.  Cursor values consist of two coordinates,
a coordinate system identification (currently identifying the display
frame), and the key or colon command typed to terminate the cursor read.
Note this task does not return pixel value information, see \fBimexamine\fR
for this purpose.

While the program is waiting for the cursor to be read, i.e. whenever
the image cursor is blinking rapidly, the terminal is said to be in
"cursor mode".  To read the cursor position, enter any key not
recognized as a cursor mode command (currently there are no cursor mode
commands for the image cursor so any character may be typed).
The colon key returns to text
input for a line of text terminated by a carriage return.  This is
called a "colon command".  The actual character or colon command one
types depends upon the program for which the list is intended.  If the
program will use only the coordinates of the cursor any character may be
typed, e.g., the space bar.  If the program uses the key value to
determine what action to take, then you must type a specific key.

The X and Y coordinates of the cursor position and other information
comprising the cursor value are printed on the standard output when the
cursor is read.  To keep track of objects or features marked in a long
set of cursor reads one may want to enable display marking if provided
by the display device; e.g. the \fBimtool\fR display server.
Other useful features, such as zoom, may be available in the display
device also.

The coordinates returned by \fBrimcursor\fR depend on the type of
world coordinate system chosen by parameter \fIwcs\fR and those defined
by the reference image.  The default "logical" coordinates are the
image pixel coordinates being displayed.  This is available for all
images and may be required by other tasks which read the generated list.
The "physical" coordinate system provides coordinates from the "original
data image" irrespective of any linear transformations (such as image
sections) used to generate the current image from the original data image.
Coordinates in a user or application defined linear or nonlinear world
coordinate system may be obtained by setting the \fIwcs\fR parameter to
"world" for coordinate output in the default world system, or to the name
of the specific world system for which coordinates are desired.
An example of a world coordinate system for direct astronomical images
is RA and DEC using the tangent (gnonomic) projection.

Coordinate transformations from the logical coordinates of image pixels
as given by a raw image cursor read, to physical or world coordinates is
performed by \fBrimcursor\fR.  This aspect of the task may be used
to transform image pixel coordinate lists of x and y values, as produced
by some tasks such as \fBapphot\fR or \fBdaophot\fR into world
coordinates by specifying cursor input from the file rather than the
image display cursor.
.ih
EXAMPLES
1. Interactively generate a starlist (file "starlist") to be used as input
to another program, e.g., for digital photometry.

.nf
    cl> display dev$pix 1	# display image in frame 1
    cl> rimcursor > starlist	# make the object list

    At this point, the cursor loop is entered and the terminal
    is placed into cursor mode.  The positions are marked using
    the space bar.

    space_bar		mark the position of the object
    space_bar		mark the position of another object
    
    <ctrl/z>		(EOF) terminates rimcursor
.fi

Given the above command sequence, the output file "starlist" might
contain the following cursor values.

.nf
    441. 410. 101 \040 
    208. 506. 101 \040 
    378. 68. 101 \040 
.fi

2. Get world coordinates for the default world coordinate system.

.nf
    cl> rimcur wcs=world
    12.13436 63.5565 101 \040
    12.13448 63.5529 101 \040
    12.13499 63.5588 101 \040
.fi

In this case the coordinates are decimal RA and DEC.  Sexagesimal output
(hours minutes and seconds or degrees minutes and seconds) will be
generated if specified by the formatting options stored with the WCS in
the image header.

3. Convert a list of pixel coordinates to world coordinates.

.nf
    cl> rimcur obs001 wcs=world cursor=coordlist >worldlist
.fi
.ih
NOTES
Future plans call for implementation of cursor mode commands for image
display cursors similar to those available for graphics cursors.
.ih
SEE ALSO
rgcursor, cursors
.endhelp
