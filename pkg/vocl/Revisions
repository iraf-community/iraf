
CL Error Recovery Revisions Notes
Mon Apr  5 12:12:27 MST 2004
---------------------------------

decl.c
	When parsing a script the procscript()/skip_to() procedures were
	positioning the file at the 'procedure' or some other arbitrary
	line.  This was causing the t_scriptln task structure to improperly
	ignore the lines at the start of the script and causing an incorrect
	line count.

grammar.y
	Modified the const_expr rule to use 'const' rather than Y_CONSTANT
	to allow negative values for case args.

gram.c
debug.c
grammar.y
opcodes.c
opcodes.h
	The size of an opcode entry on the stack was used as a hardwired
	constant (3) in this code, along with implicit assumptions about
	the location of the c_length and c_args values as well.  Replaced
	all instances with a SZ_CE (sizeof codeentry) macro to allow 
	flexibility in the codeentry structure defined in <opcodes.h>.
	    There is still a requirement that this struct define 'c_opcode'
	as the first element, and that c_length/c_args are the last to
	elements respectively, however new values to the struct may be 
	added (such as the compilation line number), provided SZ_CE is also
	modified.
