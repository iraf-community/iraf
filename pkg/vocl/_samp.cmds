

  cl> =sampDbg (ival)                 # explicitly set debug value
  cl> =sampDbg ()                     # toggle debug value


sampStatus:

  cl> =samStatus()			# print current SAMP connection status
  yes
  cl> =samStatus("on")			# enable SAMP messaging
  yes
  cl> =samStatus("off")			# disable SAMP messaging
  no
  cl> =samStatus("on")			# enable SAMP messaging
  yes
  cl> =samStatus("restart")		# restart SAMP messaging
  vocl.e(69352,0x7fff70f14cc0) malloc: *** error for object 0x101125350:
  incorrect checksum for freed object - object was probably modified after
  being freed.
  *** set a breakpoint in malloc_error_break to debug
  ERROR: abort

      or

  segmentation violation


sampAccess

  cl> =sampAccess("topcat")		# print whether named app is running
  no

sampName

  cl> =sampName()			# print current samp.name attribute
  IRAF
  cl> =sampName("foo1")			# set samp.name attribute
  foo1

sampMetadata

  cl> =sampMetadata ("samp.name")	# print a specific metadata attribute
  IRAF
  cl> =sampMetadata ("foo", "bar")	# set a new attribute
  ok

sampSend

sampHandler


------------------------------------------------------------------------------

sampLoadImage

  cl> =sampLoadImage (tblId, url, row, to)

sampLoadVOTable
sampLoadFITS
sampLoadSpec
sampLoadBibcode
sampLoadResource


sampShowRow

  cl> =sampShowRow (tblId, url, row, to)

sampSelectRows

  cl> =sampSelectRows (tblId, url, rows[], to)

sampPointAt

  cl> =sampPointAt (ra, dec, to)

sampCmdExec

  cl> =sampCmdExec ("imstat dev$pix")
  cl> =sampCmdExec ("imstat dev$pix", "iraf2")

sampEnvSet

  cl> =sampEnvSet ("foo", "bar")

sampEnvGet

  cl> =sampEnvGet ("foo")
  bar

sampParamSet

  cl> =sampParamSet ("imstat.images", "dev$pix")
  ok

sampParamGet

  cl> =sampParamGet ("imstat.images")
  dev$pix

