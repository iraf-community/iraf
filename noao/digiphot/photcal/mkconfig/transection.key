THE TRANSFORMATION SECTION
    
    The  transformation  section  is  used  to define the transformation
    equations, to specify which parameters are to be altered  and  which
    are  to  be  held constant during the fitting process, and to assign
    initial values to the parameters.
    
    The transformation section begins with the  keyword  transformation,
    followed  by  the  list  of  parameter declarations, followed by the
    transformation equation.

    Syntax
        transformation
        
        fit  parameter = value, parameter = value, ...
        
        constant  parameter = value, parameter = value, ...
        
        label : expression  =  expression
                (function)    (fit)
    
    The fit keyword begins a list of the  parameters  to  be  fit.   The
    named   parameters   will   be   fit   if  they  are  present  in  a 
    transformation equation.  The fit parameter values are used  as  the
    initial guesses for the parameters.
    
    The  constant  keyword  begins  a  list of the parameters to be held
    constant.  The named parameters will not be fit. Instead the  values
    are  regarded  as  constant values in any transformation equation in
    which they appear.  Constant parameter declarations are  used to fix
    values  if  they are known, or to restrict the degrees of freedom of
    the fit.
    
    All parameters, both fit and constant, must be declared  before  the
    first  equations  in  which they appear.  There may be any number of
    fit and constant parameter  declaration  statements.   Redefinitions
    are  allowed,  i.e.,  it is possible to declare a parameter with the
    fit keyword, and redefine it later with the constant  keyword.   The
    inverse is also true.
    
    The  transformation  equations  are  composed of three elements: the
    equation label, the function expression, and the fit expression.
    
    The label is used  to  assign  a  name  to  the  equation  and   fit
    expression.   The  label can be any name not already in use. The ":"
    after the label is necessary to delimit it  from  the  rest  of  the
    transformation  equation  defintion.  Labels  are  used primarily to
    associate the optional error, weight and  plot  equations  with  the
    appropriate  transformation  equations.   However  these  labels can
    also be used in expressions belonging to  subsequent  equations,  an
    action  equivalent  to  replacing  them with the fit expression they
    reference, before performing the actual evaluation.
    
    The function expression (left hand side of the "=" sign) is used  as
    a  reference  expression,  i.e. an expression that has no fitting or
    constant parameters in it. The  function  expression  contains  only
    values  computed  from the input data which are known before the fit
    starts.
    
    The fit  expression  (right  hand  side  of  the  "="  sign)  is  an
    expression  which  contains the parameters, both those to be fit and
    those that are fixed.  If this expression contains names defined  in
    the  catalog  section  , it will be possible to perform the fit, but
    will not be possible to apply the  transformations  in  the  forward
    sense  to  program  observations  that  don't  have matching catalog
    values.  If the number of transformations equations is greater  than
    or  equal  to  the  total  number  of  catalog variables used in the
    transformation equations, it MAY be possible to  invert  the  system
    of  equations  and  so  evaluate  the  catalog variables for program
    objects.
    
    
    Example
        
        # Sample transformation section for the UBV system
        
        transform
        
        # V equation
        
        fit     v1 = 25.0, v2=1.03, v3=-0.17
        VFIT :  V = v1 + v + v2 * (b - v) + v3 * x
        
        # B - V equation
        
        fit     b1 = 2.10, b2 = 1.15, b3=-0.12
        const   b4 = 0.0
        BVFIT : BV = b1 + b2 * (b - v) + b3 * x + b4 * (b - v) * x
        
        # U - B equation
        
        fit     u1 = 3.45, u2 = 1.063, u3=-0.30
        const   u4=0.0
        UBFIT : UB = u1 + u2 * (u - b) + u3 * x + u4 * (u - b) * x
