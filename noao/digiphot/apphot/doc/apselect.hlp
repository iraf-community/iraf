.help apselect Jan90 noao.digiphot.apphot
.ih
NAME
apselect - select fields from an APPHOT database
.ih
USAGE
apselect textfile fields expr
.ih
PARAMETERS
.ls textfile
The APPHOT output file(s) containing the records from which the selection is to
be made.
.le
.ls fields
A template defining the fields to be tabulated from each selected record.
The fields are specified by keywords defined in the apphot output
files #K and #N entries. Upper or lower case and minimum match
abbreviations are permissible. Some fields such as mag may have
multiple entries. An individual entry can be referenced by specifying an
array index, e.g. mag[2] or several values can be selected by
specifying a range of elements, e.g. mag[1-3]. The fields are output in
the order in which they are specified in the template.
.le
.ls expr
The boolean expression to be evaluated.  The expression
is evaluated once for each record. See the HSELECT and HEDIT tasks for a
full description of the boolean expression syntax.
If \fIexpr\fR = yes, the specified fields in all the records are
printed.
.le
.ls savepars = no
If \fIsavepars\fR is enabled the keyword parameters are printed on the standard
output as well as the selected fields.
.le
.ls format = no
By default the selected fields are output with 2 blank characters between each
field. If formatting is turned on the input field width is preserved on
output.
.le
.ih
DESCRIPTION
\fIApselect\fR selects a subset of fields specified by the \fIfields\fR
parameter from an APPHOT database or a list of databases by
evaluating a boolean expression supplied by the user and tabulates the
results on the standard output.
The resultant table is output in list form, suitable for further user analysis
or for use as input to another IRAF task.

A detailed description
of the boolean expression evaluator and its syntax can be found
in the manual page for the IMAGES package HEDIT task.
The supported operators and functions are briefly described below.

The following logical operators can be used in the boolean expression. 

.nf
	equal		  ==	not equal		!=
	less than	  <	less than or equal	<=
	greater than	  >	greater than or equal	>=
	or		  ||	and			&&
	negation	  !	pattern match		?=
	concatenation	  //
.fi

The pattern match character ?=  takes a
string expression as its first argument and a pattern as its second argument.
The result is yes if the pattern is contained in the string expression.
Patterns are strings which may contain pattern matching metacharacters.
The metacharacters themselves can be matched by preceeding them with the escape
character.  The metacharacters listed below. 

.nf
	beginning of string	^	end of string		$
	one character		?	zero or more characters	*
	white space		#	escape character	\
	ignore case		{	end ignore case		}
	begin character class	[	end character class	]
	not, in char class	^	range, in char class	-
.fi

The expression may also include arithmetic operators and functions.
The following arithmetic operators and functions are supported.

.nf
addition		+		subtraction		-
multiplication		*		division		/
negation		-		exponentiation		**
absolute value		abs(x)		cosine			cos(x)
sine			sin(x)		tangent			tan(x)
arc cosine		acos(x)		arc sine		asin(x)
arc tangent		atan(x)		arc tangent		atan2(x,y)
exponential		exp(x)		square root		sqrt(x)
natural log		log(x)		common log		log10(x)
minimum			min(x,y)	maximum			max(x,y)
convert to integer	int(x)		convert to real		real(x)
nearest integer		nint(x)		modulo			mod(x)
.fi

.ih
EXAMPLES
1. Select the fields xcenter and ycenter from the APPHOT database file.

.nf
	cl> apselect image.ctr.3 xcenter,ycenter yes
.fi

2. Select the fields id, xcenter, ycenter and the first three magnitudes
from the APPHOT database file.

.nf
	cl> apselect image.mag.3 id,xcen,ycen,mag[1-3] yes
.fi

3. Print all fields for all records with magnitudes < 20.0. This will only
work if there is a single magnitude field.

.nf
	cl> apselect image.mag.3 * "mag < 20.0"
.fi

4. Print the id and all magnitudes for which magnitudes 1 and 2 are < 20.0

.nf
	cl> apselect image.mag.3 id,mag "mag[1] < 20.0 && mag[2] < 20.0"
.fi

.ih
BUGS
APSELECT does not allow entire arrays in the expression field although
individual array elements may be specified.

APSELECT tries to print all the selected fields to one long text line.
If this line is greater than about 161 characters lines may be truncated
or control characters inserted. Users should avoid dumping very long
text lines.

.ih
SEE ALSO
hselect, hedit
.endhelp
