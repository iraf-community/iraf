	Interactive Polyphot Commands

?	Print help for POLYPHOT commands
:	POLYPHOT colon escape commands (see below)
v	Verify critical POLYPHOT parameters
w	Store current POLYPHOT parameters in the pset files
q	Exit

d	Plot the radial profile of the current star (cursor or list)
g	Draw the next polygon on the display
i	Draw the next polygon on the display and setup POLYPHOT
	parameters interactively using current star (cursor or list)

spbar	Shift current polygon to cursor or list position, center, fit sky,
	compute magnitude, and output results
f	Shift current polygon to cursor or list position, center, fit sky
	and compute magnitude
h	Center, fit sky and compute magnitude of current polygon
m	Center, fit sky and compute magnitude inside current polygon,
	and output results
e	Print POLYPHOT error messages

c	Center the currently defined polygon
t	Fit sky in annulus around cursor position
s	Fit sky in annulus around center of currently defined polygon
	(cursor or list)
p	Compute magnitude in current polygon using current sky

:m [n]	Move to next [nth] polygon in polygon list
:n [n]	Compute magntitudes for the next [nth] polygon in the list,
	output results
l	Compute magnitudes for remaining polygons in the list,
	output results
r	Rewind the polygon list

Polyphot parameters are listed or set with the following commands.

# commands

:show	[data/center/sky/phot]	List the parameters

# file names

:image		[string]	Image name
:polygon	[string]	Polygons files
:coords		[string]	Coordinate file name
:output		[string]	Output file name

# data dependent parameters

:scale		[value]		Image scale (units per pixel)
:fwhmpsf	[value]		Full width half maximum of PSF (scale units)
:emission	[y/n]		Emission feature (y), absorption (n)
:sigma		[value]		Standard deviation of sky (counts)
:datamin	[value]		Minimum good pixel value (counts)
:datamax	[value]		Maximum good pixel value (counts)
:threshold	[value]		Detection intensity threshold (counts)
:cthreshold	[value]		Centering intensity threshold (counts)

# noise parameters

:noise		[string]	Noise model (constant|poisson)
:gain		[string]	Gain image header keyword
:ccdread	[string]	Readout noise image header keyword
:epadu		[value]		Gain (electrons per adu)
:epadu		[value]		Readout noise (electrons)

# observing parameters

:exposure	[string]	Exposure time image header keyword
:airmass	[string]	Airmass image header keyword
:filter		[string]	Filter image header keyword
:obstime	[string]	Time of observation image header keyword
:itime		[value]		Integration time (time units)
:xairmass	[value]		Airmass value (number)
:ifilter	[string]	Filter id string
:otime		[string]	Time of observation (time units)

# centering algorithm parameters

:calgorithm	[string]	Centering algorithm
				(centroid|gauss| none|ofilt)
:cbox		[value]		Width of centering box (scale units)
:cmaxiter	[value]		Maximum number of iterations
:maxshift	[value]		Maximum center shift (scale units)
:minsnratio	[value]		Minimum signal to noise ratio for
				centering
:clean		[y/n]		Clean subraster before centering
:rclean		[value]		Cleaning radius (scale units)
:rclip		[value]		Clipping radius (scale units)
:kclean		[value]		Clean K-sigma rejection limit (sigma)

# sky fitting algorithm parameters

:salgorithm	[string]	Sky fitting algorithm (constant|median|
				mode|centroid|gauss|crosscor|histplot|
				radplot)
:skyvalue	[value]		User supplied sky value (counts)
:annulus	[value]		Inner radius of sky annulus (scale units)
:dannulus	[value]		Width of sky annulus (scale units)
:khist		[value]		Sky histogram extent (+/- sky sigma)
:smaxiter	[value]		Maximum number of iterations
:skreject	[value]		Pixel rejection limits (sky sigma)
:snreject	[value]		Maximum number of rejection cycles
:binsize	[value]		Resolution of sky histogram (sigma)
:smooth		[y/n]		Lucy smooth the sky histogram
:rgrow		[value]		Region growing radius (scale units)

# photometry parameters

:zmag		[value]		Zero point of magnitude scale

# plotting and marking parameters

:mkcenter	[y/n]		Mark computed centers on the display
:mksky		[y/n]		Mark the sky annuli on the display
:mkpolygon	[y/n]		Mark the polygon on the display
