.help datapars Dec92 noao.digiphot.daophot 
.ih
NAME
datapars -- edit the data dependent parameters
.ih
USAGE
datapars
.ih
PARAMETERS
.ls scale = 1.0
The scale of the image in user units, for example seconds of arc per pixel.
All DAOPHOT distance dependent parameters are expressed in units
of scale and if \fIscale\fR = 1 all these parameters are in units of
pixels. DAOPHOT users should leave \fIscale\fR set to 1.0 unless they
wish to compare their PHOT results with those in the
literature.
.le
.ls fwhmpsf = 2.5 (scale units)
The full-width half-maximum of the point spread function in scale units,
for example arc-seconds.
Certain tasks and algorithms, for example DAOFIND, and the "gauss" and
"ofilter" centering
algorithms in the PHOT task depend critically on the value of fwhmpsf.
DAOPHOT users can either determine fwhmpsf using an external
task such as IMEXAMINE in the PROTO package or make use of the interactive
capabilities of DAOFIND to set and store the correct value of this
parameter.
.le
.ls emission = yes
The feature to be measured is above sky. By default the DAOPHOT package
considers all features to be emission features. DAOPHOT users should
leave this parameter set to "yes". Although the DAOFIND and PHOT tasks
can deal with absorption features the PSF fitting tasks cannot.
.le
.ls sigma = 0.0
The estimate of the standard deviation of the sky pixels.
DAOPHOT users should set it to some value reasonably
representative of the noise in the sky background.
.le
.ls datamin = INDEF
The minimum good pixel value, which defaults to -MAX_REAL, the minimum
floating point number supported by the host computer.
DAOPHOT users should set this parameter to an appropriate value before
running any of the DAOPHOT package tasks.
.le
.ls datamax = INDEF
The maximum good pixel value, which defaults to MAX_REAL, the maximum
floating point number supported by the host computer.
DAOPHOT users should set this parameter to an appropriate value before
running any of the DAOPHOT package tasks.
.le
.ls noise = "poisson"
The noise model used to estimate the uncertainties in the computed
magnitudes. DAOPHOT users must leave noise set to "poisson".
.le
.ls ccdread = ""
The image header keyword defining the readout noise parameter.
The units are assumed to be electrons.
.le
.ls gain = ""
The image header keyword defining the gain parameter.
The units are assumed to be electrons per adu.
.le
.ls readnoise = INDEF
The readout noise of the ccd in electrons.
DAOPHOT users should set this parameter to its correct value before
running any of the DAOPHOT package tasks.
.le
.ls epadu = 1.0
The gain in electrons per adu.
DAOPHOT users should set this parameter to its correct value before
running any of the DAOPHOT package tasks.
.le
.ls exposure = ""
The image header exposure time keyword. The time units are arbitrary but
must be consistent for any list of images whose magnitudes are to be compared.
The magnitudes are normalized to a timeunit of 1 by the PHOT task.
Since the magnitude scale of the DAOPHOT package is determined by the
PHOT task,
setting this parameter can save DAOPHOT users a lot of unnecessary
zero point corrections in future reduction steps.
.le
.ls airmass = ""
The image header airmass keyword. This parameter is information only
and does not affect the computations in any way. The value of \fIairmass\fR
is recorded in the output photomtry file header.
.le
.ls filter = ""
The image header filter id keyword. This parameter is information only
and does not affect the computations in any way. The value of \fIfilter\fR
is recorded in the output photometry file header.
.le
.ls obstime = ""
The image header time of observation keyword. This parameter is information only
and does not affect the computations in any way. The value of \fIobstime\fR
is recorded in the output photometry file header.
.le
.ls itime = INDEF
The exposure time for the image in arbitrary units.
The magnitudes are normalized to 1 timeunit  using the value of \fIexposure\fR
in the image header if present or the value of \fIitime\fR.
.le
.ls xairmass = INDEF
The value of the airmass which by default is undefined.
The airmass is set using the value of \fIairmass\fR
in the image header if present or the value of \fIxairmass\fR.
The value of \fIxairmass\fR does not affect the computations in any but is
stored in the output photometry files.
.le
.ls ifilter = "INDEF"
The value of the filter id string which by default is undefined.
The filter id is set using the value of \fIfilter\fR
in the image header if present or the value of \fIifilter\fR.
The value of \fIifilter\fR does not affect the computations in any but is
stored in the output photometry files.
.le
.ls otime = "INDEF"
The value of the time of observation string which by default is undefined.
The time of observation is set using the value of \fIobstime\fR
in the image header if present or the value of \fIotime\fR itself.
The value of \fIotime\fR does not affect the computations in any but is
stored in the output photometry files.
.le

.ih
DESCRIPTION

\fIDatapars\fR sets those parameters which are expected to
change as a function of the data.
These quantities include the seeing, optical quality of the instrument,
the noise
characteristics and range of linearity of the detector, and data dependent
image header parameters. Many of the remaining centering, sky
fitting and photometry algorithm parameters in the CENTERPARS,
FITSKYPARS and PHOTPARS parameter sets scale with the data
dependent parameters.

The parameter \fIscale\fR sets the scale of the various apertures used by the
centering, sky fitting and photometry algorithms.  Scale converts
distance measurements in pixel units to distance measurements in
scale units. The following DAOPHOT distance dependent parameters
including cbox, maxshift, rclean and rclip
in the CENTERPARS parameter set, annulus, dannulus, and rgrow in
FITSKYPARS parameter set, apertures in the PHOTPARS
parameter set, and psfrad, fitrad, sannulus, wsannulus, and matchrad in the
DAOPARS parameter
set are expressed in units of the scale. Scale is useful
in the case where observations are to be compared to published
aperture photometry measurements in the literature.

The parameter \fIfwhmpsf\fR defines the seeing disk of stars in the
image.  The DAOFIND task and the centering algorithms
"gauss" and "ofilt" in the PHOT task depend critically on this parameter.
The parameters scale and fwhmpsf can be chosen so as to interact
in an interesting way.
First the user defines scale
in units of the half width half maximim of the point
spread function and sets fwhmpsf "2.0". Then the remaining centering, sky
fitting and photometry algorithm parameters in the CENTERPARS,
FITSKYPARS and PHOTPARS parameter sets are set to
appropriate values in units of the half width at half maximum of the PSF.
In this situation, once an optimum set of algorithm parameters is
chosen the user rarely needs to alter anything but the DATAPARS
parameter scale before executing the PHOT task.

If \fIemission\fR is "yes, the features to be measured are above sky.
By default the DAOPHOT package
considers all features to be emission features. DAOPHOT users should
leave this parameter set to "yes". Although the DAOFIND and PHOT tasks
can deal with absorption features the PSF fitting tasks currently cannot.

The parameter \fIsigma\fR estimates the standard deviation of
the sky background pixels. The star finding algorithm uses this
parameter via the threshold parameter to define the detection threshold
in terms of sigma. The centering algorithm uses this parameter
to define deviant pixels through the kclean parameter  if \fIclean\fR is
enabled, to estimate the signal to
noise ratio in the object, and to define an intensity cutoff threshold
via the cthreshold parameter.  If sigma is undefined or <= 0.0
no cleaning is performed,
the total noise is assumed to be 0, and default cutoff intensity is
used for centering. The sky fitting routines use sigma
to compute the width and resolution of the sky pixel histogram through the
parameters khist and binsize. If sigma
is undefined each object will have a sky histogram with an extent
and resolution dependent on the standard deviation of the pixels in the
local sky.
Since DAOPHOT users generally set the CENTERPARS parameter
calgorithm = "none" because accurate
centers are already computed by DAOFIND and the FITSKYPARS parameter
salgorithm to "mode" because it is the only sky fitting algorithm which gives
reasonable results in very crowded fields, and as it does not depend on
the histogram of sky pixels the value of sigma is not critical to the
centering and sky fitting routines. It is however very important for
the star finding routine.
Therefore DAOPHOT users should enter a reasonable value  of sigma.


The \fIdatamin\fR and \fIdatamax\fR parameters define the range of good
data. For example datamin and datamax can be used to define the range
of intensity over which the detector is linear. Bad pixels in the 
centering subraster and in the photometry apertures are noted, the
measurment tagged with an error code, and the aperture photometry
is set to INDEF. In the case of sky fitting,
bad data is removed before the fit is performed.
DAOPHOT users should set datamin and datamax to appropriate values
before running any DAOPHOT reduction tasks.


DAOPHOT users must leave \fInoise\fR set to "poisson".
This model includes Poisson noise from the object and both Poisson and
readout noise in the sky background.

The two parameters \fIgain\fR and \fIepadu\fR define the signal gain
characteristics. The gain parameter specifies which keyword in the
image header contains the gain value. If gain is undefined or
not present in the image header the value of epadu is used.
Epadu is in units of electrons per adu.
DAOPHOT users should set either gain or epadu to a correct value before
running any of the DAOPHOT package tasks.

The two parameters \fIccdread\fR and \fIreadnoise\fR define the ccd noise
characteristics. The ccdread parameter specifies which keyword in the
image header contains the readout noise value. If ccdread is undefined or
not present in the image header the value of readnoise is used.
Readnoise is assumed to be in units of electrons.
DAOPHOT users should set either ccdread or readnoise to a correct value before
running any of the DAOPHOT package tasks.

The magnitudes computed by PHOT can be normalized to an exposure
time of 1 timeunit using
the value of the exposure time in the image header parameter 
\fIexposure\fR or \fIitime\fR. If exposure is undefined or not present
in the image header a warning message is issued and the value of itime
is used. Itime is assumed to be in arbitrary units.
Since the magnitude scale in DAOPHOT is determined by PHOT,
setting either exposure or itime can save DAOPHOT users a lot of unnecessary
zero point corrections in future reduction steps.

The two parameters \fIairmass\fR and \fIxairmass\fR define the airmass
of the observation. The airmass parameter specifies which keyword in the
image header contains the airmass value. If airmass is undefined or
not present in the image header the value of xairmass is used.
The airmass is an information only quantity and is not used in any DAOPHOT
computations.

The two parameters \fIfilter\fR and \fIifilter\fR define the filter
of the observation. The filter parameter specifies which keyword in the
image header contains the filter id. If airmass is undefined or
not present in the image header the value of ifilter is used.
The filter is an information only quantity and is not used in any DAOPHOT
computations.

The two parameters \fIobstime\fR and \fIotime\fR define the time of
the observation. The obstime parameter specifies which keyword in the
image header contains the time of the observation. If obstime is undefined or
not present in the image header the value of otime is used.
The obstime is an information only quantity and is not used in any DAOPHOT
computations.

.ih
EXAMPLES

1. List the data dependent parameters.

.nf
	da> lpar datapars
.fi

2. Edit the data dependent parameters.

.nf
	da> datapars
.fi

3. Edit the data dependent parameters from with the PSF task.

.nf
    da> epar psf

	... edit a few psf parameters

	... move to the datapars parameter and type :e

	... edit the datapars parameters and type :q

	... finish editing the psf parameter and type ^Z
.fi

4. Save the current DATAPARS parameter set in a text file datnite1.par.
This can also be done from inside a higher level task as in the
above example.

.nf
    da> epar datapars

	... type ":w datnite1.par"  from within epar
.fi
.ih
TIME REQUIREMENTS
.ih
BUGS

.ih
SEE ALSO
epar,daofind,phot,psf,group,peak,nstar,allstar,substar,addstar
.endhelp
