.help splot Jul88 noao.onedspec
.ih
NAME
splot -- plot and analyze spectra
.ih
USAGE
splot images [line]
.ih
PARAMETERS
.ls images
List of images (spectra) to plot.  If a two-dimensional image, the
parameter, \fIline\fR, is required.  Successive images are plotted following
each 'q' cursor command.
.le
.ls line
The image line to plot if two-dimensional.  A particular case of this are
echelle format images.
.le
.ls format = "echelle"
Output format when the input spectrum is in echelle format and the output
spectrum does not exist.  The choices are "echelle" to output a new echelle
format spectrum and "onedspec" to create a new one dimensional spectrum.
For echelle format the input echelle spectrum is copied with the current
spectrum being analyzed replacing the appropriate line.
.le
.ls overwrite = no
Overwrite an existing output image?  If set to yes it is possible to write
back into the input spectrum or to some other existing image.  Otherwise
the user is queried again for a new image name.  If the input spectrum is
one dimensional and the output spectrum is two dimensional then the line to
be output is queried.
.le
.ls save_file = "splot.log"
The file name which will contain any results generated by the
equivalent width or deblending functions.  Results are added to this
file until the file is deleted. If the filename is null (""), then
no results are saved.
.le
.ls options = "auto"
A list of possibly abbreviated options.  The currently defined options
are "auto" and "zero".  Option "auto" automatically replots the graph
whenever changes are made (keystrokes: b, l, n, p, s, f, x, -, $).
Otherwise the graph is replotted with keystroke 'r'.  Option "zero"
makes the initial minimum y of the graphs occur at zero.  Otherwise
the limits are set automatically from the range of the data.
.le

The following parameters are used in response to particular keystrokes:

.ls new_image
In response to 'i' (Write current spectrum) this parameter specifies the
name of a new image to create or existing image to overwrite.
.le
.ls next_image
In response to 'g' (Get next image) or 'o' (Overplot) this parameter
specifies the image.  Note that this is different from the next image
in the input list.
.le
.ls boxsize
In response to 's' (Smooth) this parameter specifies the box size in pixels
to be used for the boxcar smooth
.le
.ls wstart
In response to 'p' (Convert to wavelength scale) this parameter specifies
the starting wavelength to use if none is present in the image header.
.le
.ls wend
As for wstart, but specifies the ending wavelength in the spectrum.
.le
.ls constant
During arithmetic addition and multiplication, this parameter is used
applied to the spectrum in repsonse to 'f' with sub-keys '+' or '*'.
.le
.ls extinction = ")_.extinction"
The name of an extinction file.  This is used when plotting standard
star fluxes.
.le
.ls caldir = ")_.caldir"
The the name of the directory containing the standard star flux calibration
files.  This is used when plotting standard star fluxes.  See \fBstandard\fR
for more information about these files.
.le
.ls fnuzero = 3.68e-20
The absolute flux per unit frequency at a magnitude of zero.  This is used
to convert the calibration  magnitudes to absolute flux by the formula

	Flux = fnuzero * 10. ** (-0.4 * magnitude)

The flux units are also determined by this parameter.  However, the
frequency to wavelength interval conversion assumes frequency in hertz.
The default value is based on a calibration of Vega at 5556 Angstroms of
3.52e-20 ergs/cm2/s/hz for a magnitude of 0.048.  This default value
is that used in earlier versions of this task which did not allow the
user to change this calibration.
.le
.ls norder = 4
Order of fit for flattening spectra.
.le
.ls niter = 3
Number of iterations when flattening spectra.
.le
.ls negsig = 3.0, possig = 8.0
Number of negative and positive sigmas for cut during flat.
.le
.ls xmin = INDEF, xmax = INDEF, ymin = INDEF, ymax = INDEF
The default limits for the initial graph.  If INDEF then the limit is
determined from the range of the data (autoscaling).  These values can
be changed with the cursor commands ":/xwindow" and ":/ywindow".
.le
.ls graphics = "stdgraph"
Output graphics device.  One of "stdgraph", "stdplot", "stdvdm",
@(enviroment variable), or actual device.
.le
.ls cursor = ""
Graphics cursor input.  When null the standard cursor is used otherwise
the specified file is used.
.le
.ih
DESCRIPTION
SPLOT provides an interactive facility to display and analyze spectra.
Each spectrum in the image list is displayed successively.  To quit
the current image and go on to the next the 'q' cursor command is used.
If an image is two-dimensional, such as for echelle format spectra, the
image line to be displayed is
also required. The end points (in pixels) NP1 and NP2 will delimit the
displayed data if present in the image header.  Otherwise, the entire
length of the line is used.  The initial plot limits are set with the
parameters \fIxmin, xmax, ymin\fR, and \fIymax\fR.  If a limit is INDEF
then that limit is determined from the range of the data.

Modifications to the spectra being analyzed may be saved in new, the
current, or some existing spectra.  This is slightly complicated by the
possibility of two types of output formats.  If the input image is
one dimensional then new spectra created are also one dimensional.  If
the input spectrum is two dimensional then the type of output spectrum
created is determined by the parameter \fIformat\fR.  A one dimensional
output format allows writing a particular line or order to a single
image while the echelle format allows copying the input with the
appropriate line replaced.  If the output spectrum already exists
then the \fIoverwrite\fR flag must be set to allow modifying the data.
This includes the case when the output spectrum is the same as the
input spectrum.  The only odd case here is when the input spectrum is
one dimensional and the output spectrum is two dimensional.  In this case
the user is queried for the line to be written.  If the two images are
two dimensional it is simply assumed that the output line number is the
same as the input line number.

The other form of output, apart from that produced on the terminal, are
measurements of equivalent widths, and other analysis functions.  This
information will be recorded in the \fIsave_file\fR if specified.

After the initial display, all functions are driven by single keystroke
commands when the graphics cursor is displayed or from cursor commands
in a file.

The following keystrokes are active in addition to the normal IRAF
cursor facilities (available with ":.help"):

.ls ?
Clears the screen and displays help for each
recognized keystroke. Use '0' (zero) to return to plot mode.
.le
.ls /
Cycles through the keystroke help commands. Currently there are 4
help lines.
.le
.ls a
Auto-expand - expands region between vertical cursors and autoscales
vertically.
.le
.ls b
Sets the plot base level to 0.0 exactly rather than autoscaling
for minimum.
.le
.ls c
Prints cursor position in x and y
.le
.ls d
Deblends emission or absorption lines.
Returned values for each line are the center, continuum at the center,
core intensity, integrated flux, equivalent width, sigma, and FWHM.
This feature is described further below.
.le
.ls e
Equivalent width. Requires 2 cursor settings.  Both x and y cursors are
used; the y cursor sets the continuum level which may be sloping, and
the x cursor delineates the area of integration.  Returned values are
the line center, continuum, core intensity, flux above or below the
continuum, and the equivalent width.
.le
.ls f
Enter Function sub-menu. This menu allows arithmetic functions to be
applied to the spectrum. The pixel values are modified according to the
function request and may be saved as a new spectrum with the 'i' command.
Functions in which a second spectrum is involved operate on a pixel-by-pixel
basis. If one spectrum is longer than the other, only the smaller number
of pixels are affected.

NOTE: Function mode is in effect until a 'q' is hit.
The following keystrokes are active when in the function mode:
.ls a
Absolute value
.le
.ls d
Dexp - power to base 10 (inverse log 10)
.le
.ls e
Exp - power to base e (inverse log e)
.le
.ls l
Log 10 - values less than or equal to 0.0 are set to -0.5
.le
.ls n
Log e  - values less than or equal to 0.0 are set to -0.5
.le
.ls s
Square root - values less than 0.0 are set to 0.0
.le
.ls i
Inverse (reciprocal) - values equal to zero are set to 0.0 in the inverse.
.le
.ls p
Plus a constant. The constant is requested.
.le
.ls m
Multiply by a constant. The constant is requested.
.le
.ls +
Plus another spectrum. The spectrum name is requested.
.le
.ls -3 -
Minus another spectrum.
.le
.ls *
Multiply by another spectrum.
.le
.ls /
Divide by another spectrum.
.le
.ls q
Quit Function mode
.le
.le
.ls g
Get another spectrum to work on. The current spectrum is discarded.
.le
.ls h
Measure equivalent width assuming a Gaussian profile on one side of a
blended line.  A second cursor key is requested with one of the following
values:
.ls a
Use the left side of the line and measure the width at the half flux point.
.le
.ls b
Use the right side of the line and measure the width at the half flux point.
.le
.ls l
Use the left side of the line with a continuum of 1.
.le
.ls r
Use the right side of the line with a continuum of 1.
.le
.le
.ls i
Write the current spectrum out to a new image. If some operation has
changed the spectrum (s, l, n, -) the modified spectrum may be saved.
.le
.ls j
Fix a data point. The value of the y cursor replaces the pixel value
for the pixel at the x cursor.
.le
.ls k
Measure equivalent width assuming a Gaussian profile and a continuum of
1 (see below).
.le
.ls l
Convert to f-lambda. Spectrum must be properly corrected. There is
no way to know if the spectrum is in f-nu or f-lambda already.
This is up to the user.
.le
.ls m
Mean, RMS, and signal-to-noise over a region. Requires 2 cursor
settings in x.
.le
.ls n
Convert to f-nu.
.le
.ls o
Overplot another spectrum. Only one spectrum can be worked on at a time
and the new spectrum replaces the old for future operations.
.le
.ls p
Convert to wavelength scale. If the x axis scale has been converted
to channels (using '$'), 'p' gets you back.
.le
.ls q
Quit and exit.
.le
.ls r
Forces a replot of the current spectrum at the original scale.
.le
.ls s
Smooth via a boxcar. The user is prompted for the box size.
.le
.ls t
Flatten the spectrum and normalize to 1.0. This is an experimental
operation.
.le
.ls u
Compute user (wavelength) coordinate by marking identifying two lines
in the spectrum. A linear dispersion solution is applied to the data.
.le
.ls v
Measure equivalent width assuming a Gaussian profile by marking the
continuum and approximate line center (see below).
.le
.ls w
Window the graph.  For further help type '?' to the "window:" prompt or
see help under \fBgtools\fR.
.le
.ls x
"Etch-a-sketch" mode. Straight lines are drawn between successive
positions of the cursor. Requires 2 cursor settings in x and/or y.
.le
.ls y
Overplot standard star values from calibration file.
.le
.ls z
Increase region plotted to double its current size, up to the full
spectrum. Command 'a' must have been executed first.
.le
.ls $
Convert to channel scale. Sets the x axis scale to pixel coordinates
rather than wavelength.
.le
.ls -4 -
(Minus sign). Subtract a fit generated by the deblend routine.
Delimit the region from which the model is to be subtracted
using the vertical cursors. Requires two settings in x.
.le
.ls .
Plot region to the right of current expanded region. Command 'a'
must have been executed first. Fifteen percent overlap is
retained across the regions.
.le
.ls -4 ','
Plot region to the left of the current region. Otherwise, as
above.
.le
.ls :show
Page the full output of the previous deblend and equivalent width
measurments.
.le
.ih
DEBLENDING
The deblending command provides a simple Gaussian profile fitting
algorithm as part of the general purpose \fBsplot\fR task.  More
general fitting and detailed profiles models are left to other more
specialized  tasks.  At the time this description was written there
were no such tasks but some were under consideration.

When entering the deblending function two cursor settings define the
local continuum, which may be sloping, and the region to be fit.  Note
that both the x and y of the cursor position are used.  The lines to be
fit are then entered either with the cursor ('m') or by typing the
wavelengths ('t').  The latter is useful if the wavelengths of the
lines are known accurately and if fits restricting the absolute or
relative positions of the lines will be used (i.e. 'a', 'b', 'd',
'e').  A maximum of four lines may be fit.  If fewer lines are desired
exit the marking step with 'q'.

There are six types of fits which may be selected.  This covers all
combinations of fixing the absolute positions, the relative positions,
the sigmas to be the same, and letting all parameters be determined.
In all cases the peak intensities are also determined for each line.
The options are given below with the appropriate key and mneumonic.

.nf
    a=0p1s	Fit intensities and one sigma with positions fixed
    b=1p1s	Fit intensities, one position, and one sigma with
			separations fixed
    c=np1s	Fit intensities, positions, and one sigma
    d=0pns	Fit intensities and sigmas with positions fixed
    e=1pns	Fit intensities, one position, and sigmas with
			separations fixed
    f=npns	Fit intensities, positions, and sigmas
.fi

This list may also be printed with the '?' key when in the deblending
function.

As noted above, sometimes the absolute or relative wavelengths of the
lines are known a priori and this information may be entered by typing
the wavelengths explicitly using the 't' option during marking.  In
this case one should not use the 'c' or 'f' fitting options since they
will adjust the line positions to improve the fit.  Options 'a' and 'd'
will not change the lines positions and fit for one or more sigmas.
Options 'b' and 'e' will maintain the relative positions of the lines
but allow an overall shift in the wavelengths.  This latter may be
useful if the lines are known but there is a measureable doppler
shift.

After the fit, the modeled lines are overplotted.  The line center,
flux, equivalent width, and full width half maximum are printed on the
status line for the first line.  The values for the other lines and
the RMS of the fit may be examined by scrolling the status line
using the '+', '-', and 'r' keys.  To continue enter 'q'.

The fitting may be repeated with different options until exiting with 'q'.
For each line in the blend the line center, continuum intensity at the
line center, the core intensity above or below the continuum, the sigma
and FWHM (=2.355 sigma), the flux above or below the continuum, and the
equivalent width are recorded in the log file.  All these parameters
except the continuum are based on the analytic Gaussian profiles.
Thus, even though the fitted region may not extend into the wings of a line
the equivalent width measurement included the wings in the fitted profile.
For direct integration of the flux use the 'e' key.

The fitted model may be subtracted from the data (after exiting the
deblending function) using the '-' (minus)
keystroke to delimit the region for which the subtraction is to
be performed. This allows you to fit a portion of a line which may
be contaminated by a blend and then subtract away the entire line
to examine the remaining components.

The fitting uses an interative algorithm based on the Levenberg-Marquardt
method.  The iterations attempt to improve the fit by varying the parameters
along the gradient of improvement in the chi square.  This method requires
that the initial values for the parameters be close enough that the
gradient leads to the correct solution rather than an incorrect local
minimum in the chi square.  The initial values are determined as follows:

.nf
    1.  The initial line centers are those specified by the user
	either by marking with the cursor or entering the
	wavelenths.
    2.  The initial peak intensities are the data values at the
	given line centers with the marked continuum subtracted.
    3.  The initial sigmas are obtained by dividing the width of
	the marked fitting region by the number of lines and then
	dividing this width by 4.
.fi

Note that each time a new fitting options is specified the initial parameters
are reset.  Thus the results do not depend on the history of previous fits.
However, within each option an iteration of parameters is performed as
described next.

The interation is more likely to fail if one initially attempts to fit too
many parameters simultaneously.  A constrained approach to the solution
is obtained by iterating starting with a few parameters and then adding
more parameters as the solution approaches the true chi square minimum.
This is done by using the solutions from the more constrained options
as the starting point for the less constrained options.  In particular,
the following iterative constraints are used during each option:

.nf
	a: 0p1s
	b: 0p1s, 1p1s
	c: 0p1s, 1p1s, np1s
	d: 0p1s, 0pns
	e: 0p1s, 1p1s, 1pns
	f: 0p1s, 1p1s, np1s, npns
.fi

For example the most general fit 'f' first fits for only a single sigma
and the peak intensities, then allows the lines to shift but keeping the
relative separations fixed, next the positions are allowed to vary
independently but still using a single sigma, and then allows all parameters
to vary.

To conclude here are some general comments.  The most restrictive  'a'
key will give odd results if the initial positions are not close to the
true centers.  The most general 'f' can also lead to incorrect results
by using unphysically different sigmas to make one line very narrow and
another very broad in an attempt to fit very blended lines.  The
algorithm works well when the lines are not severely blended and the
shapes of the lines are close to Gaussian.
.ih
FLUX AND EQUIVALENT WIDTH DETERMINATIONS
There are currently four techniques in SPLOT to measure equivalent
widths of lines. The simplest (conceptually) is by integration of the
pixel intensities between two marked pixels. This is invoked  with the
'e' keystroke.  The user marks the two edges of the line at the continuum.
The line center is a weighted centroid and the continuum is a linear
function between the two points marked.

The most complex method is by using the deblend routine which
performs a non-linear least-squares Gaussian fit to the line(s).
This is invoked with the 'd' keystroke and is the slowest method.
Again the user marks the two edges of the line region which also define
a sloping continuum.

The third and fourth methods determine the equivalent width from a
Gaussian profile defined by a constant continuum level "cont", a core depth
"core", and the width of the line "dw" at some intermediate level "Iw".

.nf
     I(w) = cont + core * exp (-0.5*((w-center)/sigma)**2)
     sigma = dw / 2 / sqrt (2 * ln (core/Iw))
     fwhm = 2.355 * sigma
     flux = core * sigma * sqrt (2*pi)
     eq. width = abs (flux) / cont
.fi

where w is wavelength.

For ease of use with a large number of lines only one cursor position is
used to mark the center of the line and one flux level.  Note that both
the x any y cursor positions are read simultaneously.  From the x cursor
position the line center and core intensity are determined.  The region around
the specified line position is searched for a minimum or maximum and a
parabola is fit to better define the extremum.

The two methods based on the simple Gaussian profile model differ in
how they use the y cursor position.  The 'k' key requires a continuum
level of one.  The y cursor position defines where the width of the
line is determined.  The 'v' key uses the y cursor position to define
the continuum and the line width is determined at the point half way
between the line core and the continuum.  In both cases the width at
the appropriate level is determined by the interception of the y level
with the data using linear interpolation between pixels.

The Gaussian line profile is drawn over the spectrum.
The horizontal and vertical lines show the measured line width and the
depth of the line center from the continuum.

The major advantages of these methods are that they are insensitive to
the position of the cursor settings, only a single cursor setting
(both the x and y positions are used) is required, and they are fast. 
The 'k' key gives more flexibility in adjusting the width of the Gaussian
line at the expense or requiring that the spectrum be normalized
to a unit continuum.  The 'v' key allows measurements at any continuum
level at the expense of only using the half flux level to determine the
Gaussian line width.

If a blended line is to be measured, the width may be affected.  The
keystroke 'h' can be used to indicate that only half of the line should
be used and doubled. A second keystroke is requested to select which
method to use (the continuum = 1 method or the 1/2 flux width method)
and which half of the line to use.  The keys 'a' and 'b' apply the
1/2 flux width or 'v' method to the left and right sides of the line
respectively.  The 'l' and 'r' keys apply the continuum=1 or 'k' method
to the left and right sides respectively.  The search for the line core
and the width of the line is restricted on the blended side to minimize
capture to the wrong part of the blend.

All these methods print and record in the log file the line center,
continuum intensity at the line center, the flux, and the equivalent
width.  For the 'e' key the flux is directly integrated while for the
other methods the fitted Gaussian is integrated.  In addition, for the
Gaussian profile methods the core intensity above or below the
continuum, the sigma, and the FWHM (=2.355 sigma) are also printed.
A brief line of data for each measurement is printed on the graphics
status line.  To get the full output and the output from previous
measurments use the command ":show".  This pages the output on the
text output which may involve erasing the graphics.

The integrated fluxes for all the methods  are in the same units as the
intensities and the integration is done in the same units as the
wavelength.  It is the user's responsiblity to keep track of the flux
units.  As a caution, if the data is in flux per unit frequency, say
ergs/cm2/sec/hz, and the dispersion in Angstroms then the integrated
flux will not be in the usual units but will be A-ergs/cm2/sec/hz.
For flux in wavelength units, ergs/cm2/sec/A the integrated flux
will be correct; i.e. ergs/cm2/sec.
.ih
EXAMPLES
The following line initiates the plotter and specifies that any analysis
output should go to a file called 'ngc7662'.

	cl> splot spectrum save_file=ngc7662

To force all plots to display zero as the minimum y value:

	cl> splot spectrum save_file=ngc7662 options="auto, zero"

Note that the options auto and zero can be abbreviated to one character.

To successively display graphs for a set of spectra with the wavelength
limits set to 3000 to 6000 angstroms:

	cl> splot spec* xmin=3000 xmax=6000

To make batch plots create a file containing the simple cursor command

	0 0 0 q

or an empty file and then execute one of the following:

.nf
	cl> splot spec* graphics=stdplot cursor=curfile
	cl> set stdvdm=splot.mc
	cl> splot spec* graphics=stdvdm cursor=curfile
	cl> splot spec* cursor=curfile >G splot.mc
.fi

The first example sends the plots to the standard plot device specified
by the environment variable "stdplot".  The next example sends the plots
to the standard virtual display metacode file specified by the
environment variable "stdvdm".  The last example redirects the
standard graphics to the metacode file splot.mc.  To spool the metacode
file the tasks \fBstdplot\fR and \fBgkimosaic\fR may be used.
For a large number of plots \fBgkimosaic\fR is prefered since it places
many plots on one page instead of one plot per page.
The other GKI tasks in the \fBplot\fR package may be used to examine
the contents of a metacode file.  A simple script call \fBbplot\fR is provided
in the \fBonedutil\fR package which has the default cursor file given
above and default device of "stdplot".

More complex plots may be produced both interactively using the
":.snap" or ":.write" commands or by preparing a script of cursor
commands.

.ih
BUGS
Attempting to convert to flambda or fnu when no wavelength information
is present causes an arithmetic abort.

The deblending facility has a restriction to a maximum of 4 lines.
.ih
SEE ALSO
bplot, gtools, standard
.endhelp
