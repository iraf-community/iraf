#
#  Makefile for the IRAF source tree.
#
# ---------------------------------------------------------------------------

# Compiler Flags.

RELEASE		= v2.15.1
CFLAGS 		=
CDEBUGFLAGS 	= -O2 -Wall
BOOTSTRAPCFLAGS = 
        
CC 		= gcc 
AS 		= gcc -c -x assembler
AR 		= ar clq
CP 		= cp -p


all:: update

# Do a full sysgen.
sysgen::
	@echo "Building the IRAF $(RELEASE) software tree"
	@echo "" ; date ; echo ""
	@echo "" ; date ; echo ""
	@echo ""
	(util/mksysgen)
	@echo ""
	@echo "Done."

# Update recent changes.
update::
	@echo "Updating the IRAF $(RELEASE) software tree"
	@echo "" ; date ; echo ""
	@echo ""
	(util/mkup)
	@echo "" ; date ; echo ""
	@echo "Done."

# Update with debug libraries.
updatex::
	@echo "Updating the IRAF $(RELEASE) software tree"
	@echo "" ; date ; echo ""
	@echo ""
	(util/mkupx)
	@echo "" ; date ; echo ""
	@echo "Done."

# Update recent changes from the repository.
self_update::
	@util/pkgupdate -self




# Clean the IRAF tree of all binaries.
src::
	(util/mksrc)
pristine::
	(util/mksrc)

# Clean the IRAF tree of binaries for the currently configured arch.
clean::
	(util/mkclean)

# Make only the NOAO package.
noao::
	(cd noao ; mkpkg -p noao)

# Summarize the spool files.
summary::
	(mkpkg summary)
	(chdir noao   ; mkpkg -p noao   summary)




# ----------------------------------------------------------------------
# architectures
# ----------------------------------------------------------------------
showarch::
	(mkpkg arch)
generic::
	(util/mkarch generic)

macosx::
	(util/mkarch macosx)
macintel::
	(util/mkarch macintel)
redhat::
	(util/mkarch redhat)
linux::
	(util/mkarch linux)
linux64::
	(util/mkarch linux64)
freebsd::
	(util/mkarch freebsd)
cygwin::
	(util/mkarch cygwin)
sunos::
	(util/mkarch sunos)
sparc::
	(util/mkarch sparc)
ssun::
	(util/mkarch ssun)



# ----------------------------------------------------------------------
# common rules for all Makefiles - do not edit

.c.i:
	$(RM) $@
	$(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@

.SUFFIXES: .s

.c.s:
	$(RM) $@
	$(CC) -S $(CFLAGS) $(_NOOP_) $*.c

emptyrule::

cleandir::
	(util/mksrc)

distclean:: cleandir

# ----------------------------------------------------------------------
# dependencies generated by makedepend

