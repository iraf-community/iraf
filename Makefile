#
#  Makefile for the IRAF source tree.
#
# ---------------------------------------------------------------------------

# Compiler Flags.

RELEASE		= v2.18.1
CFLAGS 		= -O2 -Wall
CDEBUGFLAGS 	= -g $(CFLAGS)
BOOTSTRAPCFLAGS = 
        
CC 		= gcc 
AS 		= gcc -c -x assembler
AR 		= ar clq
CP 		= cp -p


all:: update

# Do a full sysgen.
sysgen::
	@echo "Building the IRAF $(RELEASE) software tree"
	@echo "" ; date ; echo ""
	sh util/mksysgen
	@echo "" ; date ; echo ""

# Update (compile) recent changes.
update::
	@echo "Updating the IRAF $(RELEASE) software tree"
	@echo "" ; date ; echo ""
	sh util/mkup
	@echo "" ; date ; echo ""

# Update (compile) with debug libraries.
updatex::
	@echo "Updating the IRAF $(RELEASE) software tree"
	@echo "" ; date ; echo ""
	sh util/mkupx
	@echo "" ; date ; echo ""

# Update with cumulative patch of entire system
latest::
	@echo "Updating IRAF $(RELEASE) to latest release."
	@echo "" ; date ; echo ""
	sh util/self_update
	!(sh util/iraf_update -all 2>&1 | egrep -v "unexpected end of file")
	@echo "" ; date ; echo ""

# Check if system is the latest distributed version
check_latest::
	!(sh util/iraf_update -list)

# Update with cumulative patch of core system
latest_src::
	@echo "Updating IRAF $(RELEASE) to latest source release."
	@echo "" ; date ; echo ""
	sh util/iraf_update -src
	@echo "" ; date ; echo ""

# Update with cumulative patch of core system
latest_core::
	@echo "Updating IRAF $(RELEASE) to core release."
	@echo "" ; date ; echo ""
	sh util/iraf_update -core
	@echo "" ; date ; echo ""


# Update recent changes from the repository.
self_update::
	sh util/self_update


# Clean the IRAF tree of all binaries.
src::
	sh util/mksrc
pristine::
	sh util/mksrc
gitclean::
	sh util/mksrc
	@find . -type f -name \*.o -ls -exec /bin/rm -f {} \;
	@find . -type f -name \*.a -ls -exec /bin/rm -f {} \;
	@find . -type f -name \*.e -ls -exec /bin/rm -f {} \;
	@find . -type f -name \*.bak -ls -exec /bin/rm -f {} \;
	@find . -type f -name _spool\* -ls -exec /bin/rm -f {} \;
	@find . -type f -name spool\* -ls -exec /bin/rm -f {} \;
	@find pkg -name \*.a -ls -exec /bin/rm -f {} \;
	@find sys -name \*.a -ls -exec /bin/rm -f {} \;
	@find math -name \*.a -ls -exec /bin/rm -f {} \;
	@find noao/astutil -name \*.a -ls -exec /bin/rm -f {} \;
	@find noao/onedspec -name \*.a -ls -exec /bin/rm -f {} \;

# Clean the IRAF tree of binaries for the currently configured arch.
clean::
	sh util/mkclean

# Make only the NOAO package.
noao::
	sh "(cd noao ; mkpkg -p noao)"

# Summarize the spool files.
summary::
	sh mkpkg summary
	sh "(chdir noao ; mkpkg -p noao summary)"




# ----------------------------------------------------------------------
# architectures
# ----------------------------------------------------------------------
showarch::
	sh mkpkg arch
generic::
	sh util/mkarch generic

macosx::
	sh util/mkarch macosx
macintel::
	sh util/mkarch macintel
linux::
	sh util/mkarch linux
linux64::
	sh util/mkarch linux64



# ----------------------------------------------------------------------
# common rules for all Makefiles - do not edit

.c.i:
	$(RM) $@
	$(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@

.SUFFIXES: .s

.c.s:
	$(RM) $@
	$(CC) -S $(CFLAGS) $(_NOOP_) $*.c

emptyrule::

cleandir::
	sh util/mksrc

distclean:: cleandir

# ----------------------------------------------------------------------
# dependencies generated by makedepend

