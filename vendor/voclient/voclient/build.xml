<?xml version="1.0"?>
<!--  
-     BUILD.XML - Top level Ant build file for the VO Client package.  
-
-     Known targets include:
-
-         init			initialize the directory
-         compile		compile all code
-         install		install into lib and include
-         nvoss-install		install voclientd into NVOSS tree
-         nvopkg-install	install voclientd into NVO External Pkg tree
-         clean			clean directory of binaries
-         generateWSDLcode	generate Java classes from WSDL
-         compileWSDLcode	compile needed WSDL classes
-         distclean		clean directory for distribution build
-
-     In most cases an 'ant compile' will be sufficient.
-
-->

<project name="skiplist build file" default="compile" basedir=".">
    <property name="src" value="${basedir}"/>
    <property name="bin" value="./bin"/>
    <property name="lib" value="./lib"/>
    <property name="include" value="./include"/>
    <property name="doc" value="./doc"/>
    <property name="classes" value="${basedir}/classes"/>
    <property name="dist" value="${basedir}/dist"/>
    <property name="build.sysclasspath" value="last"/>
    <property name="generated" value="${basedir}/generated"/>
    <property environment="env"/>
    <property name="axis_deploy" value="${env.AXIS_DEPLOY}"/>

    <taskdef resource="axis-tasks.properties" />


    <!-- INIT -->
    <target name="init">
	<mkdir dir="${classes}"/>
	<mkdir dir="${lib}"/>
	<mkdir dir="${bin}"/>
	<mkdir dir="${doc}"/>
	<mkdir dir="${include}"/>
	<mkdir dir="${dist}"/>
    </target>


    <!-- COMPILE.  On a clean install, if configure has not been run,
	 this will use the default manually-created static makefiles
	 (Makefile.man).  If a configure has been done, the dynamically
	 configured makefiles will be used instead.
    -->
    <target name="compile" depends="init">
	<echo>Building Java code ....</echo>

	<echo>Building dalclient classes ....</echo>
	<javac destdir="${classes}"
	    includeAntRuntime="false"
	    srcdir="${src}/dalclient">
	</javac>

	<echo>Building VOClientd ....</echo>
	<javac destdir="${classes}"
	    includeAntRuntime="false"
	    srcdir="${src}/voclientd">
	</javac>

	<echo>Creating JAR file ....</echo>
        <jar jarfile="./lib/voclient.jar" basedir="${classes}"/>

	<!-- Ensure that we have a Makefile.  Copy uses timestamps, so
	     this won't clobber an existing Makefile if configure has
	     been run.
	 -->

	<!-- Put the voclient classes into a voclient.jar file.  Note 
	     we still need the ivoa-0.4.jar file from the NVOSS distro
	     and count on that being in the CLASSPATH for the build.
	-->
	<echo>Updating JAR file ....</echo>
        <jar jarfile="./lib/voclient.jar" basedir="${classes}"/>

    </target>


    <!-- INSTALL -->
    <target name="install" depends="init,compile">
	<echo>Installing VO Client files ....</echo>
	<exec dir="./voclientd/" executable="cp">
	    <arg line="voclientd ../bin" />
	</exec>
	<exec dir="./lib/" executable="cp">
	    <arg line="voclient.jar ../bin" />
	</exec>
    </target>

    <target name="install-vo-cli" depends="init,compile">
	<echo>Installing VO Client files ....</echo>
	<exec dir="./voclientd/" executable="cp">
	    <arg line="voclientd ../../" />
	</exec>
	<exec dir="./lib/" executable="cp">
	    <arg line="voclient.jar ../../bin" />
	</exec>
    </target>



    <!-- NVOSS INSTALL -->
    <target name="nvoss-install" depends="init,compile">
	<property environment="env"/>
	<echo>Install voclientd to ${env.NVOSS_HOME}/bin</echo>
	<exec dir="./voclientd/" executable="cp">
	    <arg line="voclientd ../../bin" />
	</exec>
	<echo>Install voclient.jar to ${env.NVOSS_HOME}/java/lib</echo>
	<exec dir="./lib/" executable="cp">
	    <arg line="voclient.jar ../../java/lib" />
	</exec>
    </target>


    <!-- NVOPKG INSTALL -->
    <target name="nvopkg-install" depends="init,compile">
	<property environment="env"/>
	<echo>Install voclientd to ../../java</echo>
	<exec dir="./voclientd/" executable="cp">
	    <arg line="voclientd ../../java" />
	</exec>
	<echo>Install voclient.jar to ../../java</echo>
	<exec dir="./lib/" executable="cp">
	    <arg line="voclient.jar ../../java" />
	</exec>
    </target>


    <!-- Build API Javadocs -->
   <target name="apidoc" depends="compile">
      <javadoc destdir="doc/api" windowtitle="VO Client Library" 
               sourcepath="${src}/voclientd/"
               packagenames="voclient.*" />
   </target>


    <!-- CLEAN -->
    <target name="clean" depends="">
        <delete dir="${classes}/voclient"/>
        <delete dir="${classes}/dallient"/>

        <delete failonerror="false">
	  <fileset dir="${classes}" casesensitive="yes">
	    <patternset id="local classes">
	      <include name="SWIG*"/>
	      <include name="voclient.class"/>
	      <include name="voclientJNI.class"/>
	    </patternset>
	  </fileset>
        </delete>

        <delete failonerror="false">
	  <fileset dir="${bin}" casesensitive="yes">
	    <patternset id="bin files">
	      <include name="voclientd"/>
	      <include name="voclient.jar"/>
	    </patternset>
	  </fileset>
        </delete>

        <delete failonerror="false">
	  <fileset dir="${lib}" casesensitive="yes">
	    <patternset id="lib files">
	      <include name="*"/>
	    </patternset>
	  </fileset>
        </delete>

        <delete failonerror="false">
	  <fileset dir="${include}" casesensitive="yes">
	    <patternset id="include files">
	      <include name="VOClient.h"/>
	    </patternset>
	  </fileset>
        </delete>

	<!-- Make sure we have some Makefiles. -->
	<copy file="Makefile.man" tofile="Makefile"/>

	<echo>cleaning in dalclient....</echo>
	<exec dir="./dalclient/" executable="ant">
	    <arg line="clean" />
	</exec>
    </target>
  

    <!-- DISTCLEAN -->
    <target name="distclean" depends="clean">
	<exec dir="." executable="make">
	  <arg line="maintainer-clean" />
	</exec>
	<delete includeEmptyDirs="true" failonerror="false">
          <fileset dir="${classes}" />
          <fileset dir="${dist}" />
          <fileset dir="${lib}" />
          <fileset dir="${bin}" />
          <fileset dir="${doc}" />
	</delete>
	<delete>
	  <fileset dir="${src}" casesensitive="yes">
	    <patternset id="Makefiles">
	      <include name="Makefile"/>
	    </patternset>
	  </fileset>
	</delete>
    </target>


    <!-- WSDL Stuff -->
   <target name="compileWSDLcode" depends="">
	<javac destdir="${classes}"
	    includeAntRuntime="false"
	    srcdir="${src}/lib">
	</javac>
   </target>

   <target name="generateWSDLcode" depends="init,wsdl1,wsdl2">
   </target>

   <target name="wsdl1" depends="init">
      <java classname="org.apache.axis.wsdl.WSDL2Java">
         <arg value="-o"/>
         <arg value="${lib}"/>
         <arg value="wsdl/NVORegistry.wsdl"/>
      </java>
   </target>
   <target name="wsdl2" depends="init">
      <java classname="org.apache.axis.wsdl.WSDL2Java">
         <arg value="-o"/>
         <arg value="${lib}"/>
         <arg value="wsdl/SkyPortal.wsdl"/>
      </java>
   </target>

</project>
