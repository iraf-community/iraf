#!/bin/sh

top=`cd ..; pwd`

export CC=gcc
export CXX=g++

build_cfitsio=1
build_readline=1 # not needed in v2.16.1 and beyond
build_voclient=1

if [ "$IRAFARCH" = "linux" ] ; then
    CARCH="-m32"
elif [ "$IRAFARCH" = "macintel" ] ; then
    CARCH="-m64"
elif [ "$IRAFARCH" = "macosx" ] ; then
    CARCH="-m32"
fi

echo "Building support libraries ...."
echo "  (Using toplevel directory '"$top"' ....)"

# Global options.
gopts="--prefix=$top --exec-prefix=$top"

#echo "    Cleaning files ...."
#./mkclean



####################################################################
####   CFITSIO Library
####################################################################
if [ $build_cfitsio = 1 ] ; then

    echo -n "    Building CFITSIO libs ...."
    opts="$gopts --bindir=$top/bin --libdir=$top/bin"
    (cd cfitsio ;  \
     ./configure $opts CFLAGS="$CARCH"; \
     make clean 	     ; \
     make 	     ; \
     make install     ; \
     make clean        ) | tee -a _spool 2>&1
    echo "done"

fi



####################################################################
####   READLINE Library
####################################################################
if [ $build_readline = 1 ] ; then

    echo -n "    Building Readline libs ...."
    opts="$gopts  --disable-shared --bindir=../../bin --libdir=../../bin"
    (cd readline ; mkpkg ; make clean ) | tee -a _spool 2>&1
    echo "done"

fi



####################################################################
####   VOClient Library
####################################################################
if [ $build_voclient = 1 ] ; then

    echo -n "    Building VOClient libs ...."

    (cd voclient ; \
     make all 		        ; \
     cp lib/libVO.a  ../../bin/      ; \
     cp voclient.jar ../../vo/java/  ; \
     cp voclientd    ../../vo/java/  ; \
     make clean 		        ) | tee -a _spool 2>&1
    echo "done"

fi
