#!/bin/csh -f
#
#  PKGCONFIG -- Re-create the system Makefile to take into account new
#  packages.


set  irafdir    = $cwd/../util

echo "Initializing repository data ...."
$irafdir/pkginit				# init repository information
if ($status == 1) then
   exit
endif

# Create the template Makefile.
echo "Creating system makefile ...."
cat << MAKE_TEMP_END		> Makefile
#
#  Makefile for IRAF external package installation/maintenance.
#
# ---------------------------------------------------------------------------

# Compiler Flags.

RELEASE		= `cat ../.version`
        
all:: update

# Update recent changes from the repository.
update::
	@./configure
	@../util/pkgupdate -all

# List packages available on the repository.
list::
	@cat .repo_pkgs

# Clean the IRAF tree of binaries for the currently configured arch.
init::
	@../util/pkgclean -init

# Remove all package code but leave the structure in place.
clean::
	@../util/pkgclean -all

# Restore the dynamic package directory to its distribution state.
distclean::
	@../util/pkgclean -init

# Check to see which installed packages could be updated.
check::
	@../util/pkgupdate -list

# Update recent changes from the repository.
self_update::
	@../util/pkgupdate -self
	@./configure


MAKE_TEMP_END

echo "Setup Complete."



# For each package we have, append a makefile entry.
foreach p (`cat .repo_pkgs`)

   # Create template makefile entries for each package
   echo "${p}::"						>> Makefile
   echo "	@../util/pkginst $p"			>> Makefile
   echo "clean_${p}::"					>> Makefile
   echo "	@../util/pkgclean $p"			>> Makefile
   echo "update_${p}::"					>> Makefile
   echo "	@../util/pkgupdate $p"			>> Makefile
   echo ""						>> Makefile

   # Create the directory
   if (-e $p ) then
      /bin/rm -rf $p
   endif
   mkdir $p
end

echo ""
exit 0
